{"version":3,"sources":["serviceWorker.ts","configurations/i18n.ts","models/config.ts","helpers/util.ts","configurations/configManager.ts","pages/routes.ts","contexts/user.ts","services/base.ts","mockData/user.ts","services/user.ts","services/auth.ts","helpers/user.ts","components/header/header.tsx","pages/globalSyles.js","pages/theme.ts","components/error/error.tsx","pages/auth/auth.tsx","components/itemsHeader/itemsHeader.tsx","components/loading/loading.tsx","contexts/global.ts","components/search/search.tsx","models/expense.ts","mockData/group.ts","mockData/label.ts","mockData/expense.ts","services/expense.ts","components/item/item.tsx","pages/expense/expenseItems.tsx","pages/expense/expenseSummary.tsx","pages/expenseModal/expenseModal.tsx","pages/expense/expense.tsx","services/group.ts","pages/groupModal/groupModal.tsx","pages/group/group.tsx","pages/label/label.tsx","services/label.ts","pages/labelModal/labelModal.tsx","configurations/firebase.ts","pages/settings/settings.tsx","helpers/privateRouter.tsx","pages/import/import.tsx","helpers/csvToExpenses.ts","pages/main.tsx","pages/app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","resources","en","translation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","ApiType","hasValue","value","undefined","Array","isArray","length","getValueOrDefault","values","find","x","ConfigModel","apiUrl","buildVersion","requestDelay","firebaseApiKey","firebaseProject","useHashRouter","ConfigManager","configurationObject","config","get","configurationSettings","Object","assign","set","ApplicationConfiguration","freeze","Routes","home","auth","settings","import","group","label","expense","FetchStatus","StatusCodes","userContext","React","createContext","initialising","isReady","isDarkTheme","setDarkTheme","dark","usersMockData","id","displayName","email","handleError","error","a","response","status","OK","console","data","headers","Promise","reject","ServiceBase","resolve","_reject","setTimeout","_resolve","url","params","axios","baseURL","this","withCredentials","process","Accept","Authorization","defaults","common","post","put","delete","UserService","baseUrl","user","FIREBASE","LOCAL_STORAGE","TOTAL_FAKE","resolveMockData","facebook","FacebookAuthProvider","loginWithFacebook","signInWithPopup","loginWithEmail","password","signInWithEmailAndPassword","updateUser","updateProfile","addOrUpdate","uid","photoUrl","photoURL","getUserDisplayName","split","HeaderStyle","createGlobalStyle","HeaderComponent","memo","props","useContext","history","useHistory","useTranslation","t","useState","expanded","setExpand","handleToggle","useCallback","handleRedirectTo","path","search","push","pathname","handleLogout","firebase","signOut","authElement","useMemo","Nav","NavDropdown","title","Item","onClick","Divider","Link","Navbar","bg","variant","expand","onToggle","Container","Brand","Toggle","aria-controls","Collapse","className","GlobalStyles","theme","body","text","toggleBorder","lightTheme","gradient","darkTheme","ErrorComponent","message","role","AuthStyle","AuthPage","isLoading","setLoading","setError","setEmail","setPassword","handleFacebook","handleChangeEmail","target","handleChangePassword","handleLogin","Row","Col","xs","sm","Card","Title","Body","Button","Form","Group","controlId","Label","Control","type","placeholder","onChange","disabled","ItemsHeaderComponent","onAction","disableAction","action","LoadingStyle","LoadingComponent","active","spinner","children","globalContext","labels","groups","years","month","year","reload","ExpenseType","SearchStyle","SearchComponent","global","months","setGroup","setMonth","setYear","isExpanded","setExpanded","useEffect","handleOnChangeGroup","event","handleOnChangeMonth","handleOnChangeYear","handleOnSearch","queryString","stringify","handleExpandCollapse","groupsOptions","map","key","name","monthsOptions","yearsOptions","headerElement","Spinner","data-testid","animation","size","selectedGroup","g","Accordion","Header","as","eventKey","groupsMockData","users","groupsFullMockData","labelsMockData","groupId","labelsFullMockData","currValue","lastValue","avgValue","expensesMockData","OUTCOMING","date","Date","comments","labelId","INCOMING","expensesFullMockData","yearsMockData","ExpenseService","obj","ItemComponent","DropdownButton","Dropdown","onEdit","onDelete","ExpenseItemsPage","items","item","toFixed","format","ExpenseSummaryPage","incoming","outcoming","totalIncoming","setTotalIncoming","totalOutcoming","setTotalOutcoming","totalLeft","setTotalLeft","totalLeftPer","setTotalLeftPer","tmpTotalIncoming","reduce","sum","current","tmpTotalOutcoming","tmpTotalLeft","ExpenseModalPage","labelsGroup","setType","setName","setValue","setDate","setLabel","setLabels","setComments","isLoadingAction","setLoadingAction","handleOnChangeType","handleOnChangeName","handleOnChangeValue","handleOnChangeDate","handleOnChangeLabel","localStorage","setItem","handleOnChangeComments","handleOnAction","update","add","show","l","getItem","some","disabledAction","labelOptions","Modal","onHide","centered","closeButton","rows","Footer","ExpenseStyle","ExpensePage","expenses","setExpenses","setExpense","showModal","setShowModal","refresh","setRefresh","getAllFull","runAsync","handleOnAdd","handleOnEdit","handleOnDelete","remove","handleOnHide","incomingItems","filter","outcomingItems","Tabs","defaultActiveKey","Tab","GroupService","GroupModalPage","selectedUsers","setSelectedUsers","setUsers","isLoadingUsers","setLoadingUsers","handleOnChangeUsers","from","selectedOptions","option","getAll","usersOption","u","multiple","readOnly","LabelGrapyType","GroupStyle","GroupPage","setGroups","setup","groupElements","index","indexUser","LabelService","LabelModalPage","projectId","LabelStyle","LabelPage","_props","isLoadingGlobal","CURRENT_MONTH","graphType","setGrahType","handleOnGraphType","itemsElements","currValueClass","lastValueClass","graphElement","datasets","LAST_MONTH","borderWidth","options","plugins","colorschemes","scheme","width","height","ToggleButtonGroup","ToggleButton","AVERAGE","SettingsPage","setDisplayName","handleOnChangeDarkTheme","checked","handleOnChangeDisplayName","handleOnUpdate","Check","PrivateRoute","Component","component","to","ImportPage","StatusType","groupGlobal","setData","setStatus","separator","setSeparator","PROCESSING","trim","toLowerCase","ERROR","PROCESSED","handleOnChangeSeparator","handleOnChangeData","tmpExpenses","splitByRow","splitByCol","dateFormat","forEach","row","col","parse","csvToExpenses","_","NOT_PROCESSED","expensesRows","scope","toString","isValid","Text","MainPage","useLocation","isLoadingGroups","setLoadingGroups","isLoadingLabels","setLoadingLabels","isLoadingYears","setLoadingYears","isSelectingGroup","setSelectingGroup","isSelectingMonth","setSelectingMonth","isSelectingYear","setSelectingYear","isPushing","setPushing","setYears","loadGroups","setLoadGroups","loadLabels","setLoadLabels","searchParams","jsonString","JSON","results","log","selected","lastGroup","getYears","getFullYear","lastYear","getMonth","lastMonth","handleToReloadAll","enablePrivateRoute","Provider","exact","AppPage","currentUser","state","setState","unsubscribe","onAuthStateChanged","useAuth","matchMedia","matches","setReady","handleDarkTheme","getIdTokenResult","then","token","basename","overrides","configDefault","setConfiguration","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ec233c75.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport translationEN from '../locales/en.json';\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: translationEN\r\n    }\r\n};\r\n\r\ni18n.use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: 'en',\r\n        fallbackLng: 'en', // use en if detected lng is not available\r\n\r\n        // keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","export enum ApiType {\r\n    FIREBASE = 'FIREBASE',\r\n    LOCAL_STORAGE = 'LOCAL_STORAGE',\r\n    TOTAL_FAKE = 'TOTAL_FAKE',\r\n    TEST_API = 'TEST_API'\r\n}\r\n\r\nexport class ConfigModel {\r\n    /** api backend url */\r\n    apiUrl: string = 'https://myexpenses-backend-dev.herokuapp.com/';\r\n\r\n    /** build version */\r\n    buildVersion: string = 'local';\r\n\r\n    /** request delay time */\r\n    requestDelay: number = 1000;\r\n\r\n    /** firebase */\r\n    firebaseApiKey: string = 'AIzaSyDMDE7eTQbjwkQglMJf5KnFtMr48-pAoVM';\r\n    firebaseProject: string = 'lfmachadodasilva-dev';\r\n\r\n    useHashRouter: boolean = true;\r\n}\r\n","export const hasValue = (value: any): boolean => {\r\n    if (value === null || value === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (typeof value === 'string' || Array.isArray(value)) {\r\n        return value.length > 0;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n// export const getValueOrDefault = (value?: string, defaultValue?: string) => {\r\n//     return hasValue(value) ? value : defaultValue;\r\n// };\r\n\r\nexport const getValueOrDefault = (...values: any[]) => {\r\n    return values.find(x => hasValue(x));\r\n};\r\n","import config, { Options } from 'react-global-configuration';\r\n\r\nimport { getValueOrDefault } from '../helpers/util';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport class ConfigManager {\r\n    static set = (configurationSettings: ConfigModel) => {\r\n        config.set({ ApplicationConfiguration: configurationSettings }, { freeze: false } as Options);\r\n    };\r\n\r\n    static get(): ConfigModel {\r\n        const configurationObject = config.get('ApplicationConfiguration');\r\n\r\n        const configurationSettings = new ConfigModel();\r\n        Object.assign(configurationSettings, configurationObject);\r\n\r\n        return configurationSettings;\r\n    }\r\n}\r\n\r\nexport const setConfiguration = (overrides: Partial<ConfigModel> = {}): ConfigModel => {\r\n    let configDefault: ConfigModel = new ConfigModel();\r\n\r\n    configDefault = {\r\n        ...configDefault,\r\n        buildVersion: getValueOrDefault(\r\n            process.env.REACT_APP_BUILD_VERSION,\r\n            overrides.buildVersion,\r\n            configDefault.buildVersion\r\n        ),\r\n        apiUrl: getValueOrDefault(process.env.REACT_APP_API_URL, overrides.apiUrl, configDefault.apiUrl),\r\n        useHashRouter:\r\n            getValueOrDefault(\r\n                process.env.REACT_APP_USE_HASH_ROUTER,\r\n                overrides?.useHashRouter?.toString(),\r\n                configDefault.useHashRouter.toString()\r\n            ) === 'true'\r\n    };\r\n\r\n    ConfigManager.set({ ...configDefault, ...overrides });\r\n\r\n    return ConfigManager.get();\r\n};\r\n","export class Routes {\r\n    static home = '/';\r\n    static auth = '/auth';\r\n    static settings = '/settings';\r\n    static import = '/import';\r\n    static group = '/group';\r\n    static label = '/label';\r\n    static expense = '/expense';\r\n}\r\n","import React from 'react';\r\nimport { User } from 'firebase/app';\r\n\r\nexport type UserContext = {\r\n    user?: User | null;\r\n    initialising: boolean;\r\n    isReady: boolean;\r\n\r\n    isDarkTheme: boolean;\r\n    setDarkTheme: (dark: boolean) => void;\r\n};\r\n\r\nexport const defaultUserContext: UserContext = {\r\n    initialising: false,\r\n    isReady: false,\r\n\r\n    isDarkTheme: false,\r\n    setDarkTheme: (dark: boolean) => {}\r\n};\r\n\r\nexport const userContext = React.createContext<UserContext>(defaultUserContext);\r\n","import axios, { AxiosError } from 'axios';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport enum FetchStatus {\r\n    READY,\r\n    LOADING,\r\n    LOADED,\r\n    ERROR\r\n}\r\n\r\nexport enum StatusCodes {\r\n    OK = 200,\r\n    ERROR = 500\r\n}\r\n\r\nconst handleError = async (error: AxiosError) => {\r\n    if (error.response && error.response.status >= StatusCodes.OK) {\r\n        if (process.env.NODE_ENV !== 'test') {\r\n            // avoid show this when is running test\r\n            console.error('Request Failed:', error.config);\r\n            console.error('Status:', error.response.status);\r\n            console.error('Data:', error.response.data);\r\n            console.error('Headers:', error.response.headers);\r\n        }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n};\r\n\r\nexport class ServiceBase {\r\n    constructor(protected config: ConfigModel) {}\r\n\r\n    protected async resolveMockData<T>(data: T): Promise<T> {\r\n        return new Promise((resolve, _reject) => {\r\n            setTimeout(() => {\r\n                resolve(data);\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async rejectMockData<T>(): Promise<T> {\r\n        return new Promise((_resolve, reject) => {\r\n            setTimeout(() => {\r\n                reject();\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async get<TResponse>(url: string, params?: { [key: string]: any }): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.get(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async post<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.post(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async put<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.put(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async delete<TResponse>(url: string): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.delete(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                }\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n}\r\n","import { UserModel } from '../models/user';\r\n\r\nexport const usersMockData: UserModel[] = [\r\n    { id: '1', displayName: 'User 1', email: 'user1@email.com' },\r\n    { id: '2', displayName: 'User 2', email: 'user2@email.com' },\r\n    { id: '3', displayName: 'User 3', email: 'user3@email.com' },\r\n    { id: '4', displayName: 'User 4', email: 'user4@email.com' },\r\n    { id: '5', displayName: 'User 5', email: 'user5@email.com' }\r\n];\r\n","import { usersMockData } from '../mockData/user';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { UserModel } from '../models/user';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class UserService extends ServiceBase {\r\n    private baseUrl = '/api/user';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async addOrUpdate(user: UserModel): Promise<UserModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<UserModel>(usersMockData[0]);\r\n        }\r\n        return await this.post<UserModel>('/api/user', {}, user);\r\n    }\r\n\r\n    async getAll(): Promise<UserModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(usersMockData);\r\n        }\r\n        return await this.get<UserModel[]>(this.baseUrl);\r\n    }\r\n\r\n    // async add(obj: Partial<UserModel>): Promise<UserModel> {\r\n    //     if (this.config.apiUrl === ApiType.FIREBASE) {\r\n    //     } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n    //     } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n    //         return this.resolveMockData(usersMockData[0]);\r\n    //     }\r\n    //     return await this.post<UserModel>(this.baseUrl, {}, obj);\r\n    // }\r\n\r\n    // async update(obj: UserModel): Promise<void> {\r\n    //     if (this.config.apiUrl === ApiType.FIREBASE) {\r\n    //     } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n    //     } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n    //         return this.resolveMockData<void>(undefined);\r\n    //     }\r\n    //     return await this.put<void>(this.baseUrl, {}, obj);\r\n    // }\r\n\r\n    async remove(id: string): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport firebase, { auth } from 'firebase/app';\r\nimport 'firebase/auth'; // If using Firebase auth\r\nimport { UserService } from './user';\r\nimport { UserModel } from '../models/user';\r\nimport { ConfigModel } from '../models/config';\r\n// import { UserService } from './userService';\r\n// import { ConfigurationManager } from '../configurations/configurationManager';\r\n// import { UserModel } from '../models/user';\r\n\r\nexport const useAuth = () => {\r\n    const [state, setState] = useState(() => {\r\n        const user = auth().currentUser;\r\n        return { initialising: !user, user };\r\n    });\r\n\r\n    const onChange = (user: firebase.User | null) => {\r\n        setState({ initialising: false, user });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // listen for auth state changes\r\n        const unsubscribe = auth().onAuthStateChanged(onChange);\r\n        // unsubscribe to the listener when unmounting\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return state;\r\n};\r\n\r\nconst facebook = new auth.FacebookAuthProvider();\r\n\r\nexport const loginWithFacebook = async () => {\r\n    try {\r\n        return await auth().signInWithPopup(facebook);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const loginWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().signInWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const createUserWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().createUserWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const resetPassword = async (email: string) => {\r\n    try {\r\n        return await auth().sendPasswordResetEmail(email);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const updateUser = async (config: ConfigModel, user: firebase.User, displayName: string) => {\r\n    try {\r\n        await user?.updateProfile({ displayName: displayName });\r\n\r\n        await new UserService(config).addOrUpdate({\r\n            id: user.uid,\r\n            email: user.email,\r\n            displayName: user.displayName,\r\n            photoUrl: user.photoURL\r\n        } as UserModel);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const signOut = () => firebase.auth().signOut();\r\n","import { UserModel } from '../models/user';\r\nimport { hasValue } from './util';\r\n\r\nexport const getUserDisplayName = (user: firebase.User | UserModel) => {\r\n    if (!hasValue(user)) {\r\n        return '';\r\n    }\r\n\r\n    if (hasValue(user.displayName)) {\r\n        return user.displayName?.split(' ')[0];\r\n    }\r\n\r\n    return user.email?.split('@')[0];\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nimport { Routes } from '../../pages/routes';\r\nimport { userContext } from '../../contexts/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { signOut } from '../../services/auth';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\n\r\nconst HeaderStyle = createGlobalStyle`\r\n    .navbar-brand {\r\n        cursor: pointer;\r\n    };\r\n`;\r\n\r\nexport type HeaderProps = {};\r\n\r\nexport const HeaderComponent: React.FC<HeaderProps> = React.memo((props: HeaderProps) => {\r\n    const { user, initialising, isReady } = useContext(userContext);\r\n    const history = useHistory();\r\n    const [t] = useTranslation();\r\n    const [expanded, setExpand] = React.useState<boolean>(false);\r\n\r\n    const handleToggle = React.useCallback((expanded: boolean) => {\r\n        setExpand(expanded);\r\n    }, []);\r\n\r\n    const handleRedirectTo = React.useCallback(\r\n        (path: string) => {\r\n            setExpand(false);\r\n            if (hasValue(history.location.search)) {\r\n                history.push({ pathname: path, search: history.location.search });\r\n            } else {\r\n                history.push(path);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    const handleLogout = React.useCallback(async () => {\r\n        await signOut();\r\n        setTimeout(() => history.push(Routes.home));\r\n    }, [history]);\r\n\r\n    const authElement = React.useMemo(() => {\r\n        if (hasValue(user)) {\r\n            const displayName = getUserDisplayName(user as firebase.User);\r\n            return (\r\n                <Nav>\r\n                    <NavDropdown title={displayName} id=\"collasible-nav-dropdown\">\r\n                        <NavDropdown.Item onClick={() => handleRedirectTo(Routes.settings)}>\r\n                            {t('HEADER.SETTINGS')}\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={() => handleRedirectTo(Routes.import)}>\r\n                            {t('HEADER.IMPORT')}\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={handleLogout}>{t('HEADER.LOGOUT')}</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Nav>\r\n                <Nav.Link onClick={() => handleRedirectTo(Routes.auth)}>{t('HEADER.LOGIN')}</Nav.Link>\r\n            </Nav>\r\n        );\r\n    }, [user, handleRedirectTo, handleLogout, t]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderStyle />\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" onToggle={handleToggle} expanded={expanded}>\r\n                <Container>\r\n                    <Navbar.Brand onClick={() => handleRedirectTo(Routes.home)}>{t('HEADER.TITLE')}</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"mr-auto \">\r\n                        {isReady && (\r\n                            <Nav className=\"mr-auto\">\r\n                                <Nav.Link onClick={() => handleRedirectTo(Routes.group)}>{t('HEADER.GROUP')}</Nav.Link>\r\n                                <Nav.Link onClick={() => handleRedirectTo(Routes.label)}>{t('HEADER.LABEL')}</Nav.Link>\r\n                                <Nav.Link onClick={() => handleRedirectTo(Routes.expense)}>\r\n                                    {t('HEADER.EXPENSE')}\r\n                                </Nav.Link>\r\n                            </Nav>\r\n                        )}\r\n                        {!isReady && <Nav className=\"mr-auto\"></Nav>}\r\n                        {!initialising && authElement}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n});\r\n","import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .table {\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n  \r\n  .card {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .card-header {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n\r\n  .form-control {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .modal-content {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-header {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-body {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-footer {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .close {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n    text-shadow: none;\r\n  };\r\n\r\n  .nav-tabs .nav-link.active, .nav-tabs .nav-item.show .nav-link  {\r\n      background-color: ${({ theme }) => theme.body};\r\n      color: ${({ theme }) => theme.text};\r\n      border-color: ${({ theme }) => theme.toggleBorder};\r\n  };\r\n  `","export const lightTheme = {\r\n    body: '#f8f9fa',\r\n    text: '#343a40',\r\n    toggleBorder: '#595959',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)'\r\n};\r\n\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#fff',\r\n    toggleBorder: '#646464',\r\n    gradient: 'linear-gradient(#091236, #1E215D)'\r\n};\r\n","import React from 'react';\r\nimport { hasValue } from '../../helpers/util';\r\n\r\nexport interface ErrorProps {\r\n    message: string;\r\n}\r\n\r\nexport const ErrorComponent: React.FC<ErrorProps> = React.memo((props: ErrorProps) => {\r\n    if (!hasValue(props.message)) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            {props.message}\r\n        </div>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport { Routes } from '../routes';\r\nimport { loginWithEmail, loginWithFacebook } from '../../services/auth';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nconst AuthStyle = createGlobalStyle``;\r\n\r\nexport type AuthProps = {};\r\n\r\nexport const AuthPage: React.FC<AuthProps> = React.memo((props: AuthProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [error, setError] = React.useState<string>('');\r\n\r\n    const [email, setEmail] = React.useState<string>('');\r\n    const [password, setPassword] = React.useState<string>('');\r\n\r\n    const handleFacebook = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            await loginWithFacebook();\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch (error) {\r\n            setError(t('AUTH.ERROR'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [history, t]);\r\n\r\n    const handleChangeEmail = React.useCallback((value: any) => {\r\n        setEmail(value.target.value);\r\n    }, []);\r\n    const handleChangePassword = React.useCallback((value: any) => {\r\n        setPassword(value.target.value);\r\n    }, []);\r\n\r\n    const handleLogin = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            await loginWithEmail(email, password);\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch {\r\n            setError(t('AUTH.ERROR'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [email, password, history, t]);\r\n\r\n    return (\r\n        <>\r\n            <AuthStyle />\r\n            <Container className=\"p-4\">\r\n                <ErrorComponent message={error} />\r\n                <Row>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_FACEBOOK')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Button onClick={handleFacebook}>{t('AUTH.FACEBOOK')}</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_EMAIL')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>{t('AUTH.EMAIL')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder={t('AUTH.EMAIL_PLACEHOLDER')}\r\n                                            onChange={handleChangeEmail}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>{t('AUTH.PASSWORD')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder={t('AUTH.PASSWORD_PLACEHOLDER')}\r\n                                            onChange={handleChangePassword}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Button variant=\"primary\" onClick={handleLogin} disabled={isLoading}>\r\n                                        {t('AUTH.LOGIN')}\r\n                                    </Button>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\r\n\r\nexport interface ItemsHeaderProps {\r\n    title: string;\r\n    action: string;\r\n    onAction: () => void;\r\n    disableAction?: boolean;\r\n}\r\n\r\nexport const ItemsHeaderComponent: React.FC<ItemsHeaderProps> = React.memo((props: ItemsHeaderProps) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-between mb-2\">\r\n            <h4>{props.title}</h4>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={props.onAction}\r\n                disabled={props.disableAction ?? false}\r\n            >\r\n                {props.action}\r\n            </button>\r\n        </div>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport type LoadingProps = {\r\n    isLoading: boolean;\r\n};\r\n\r\nconst LoadingStyle = createGlobalStyle`\r\n    ._loading_overlay_overlay {\r\n        background: rgba(0,0,0,0.5);\r\n    };\r\n`;\r\n\r\nexport const LoadingComponent: React.FC<React.PropsWithChildren<LoadingProps>> = React.memo(\r\n    (props: React.PropsWithChildren<LoadingProps>) => {\r\n        const [t] = useTranslation();\r\n\r\n        return (\r\n            <>\r\n                <LoadingStyle />\r\n                <LoadingOverlay\r\n                    active={props.isLoading}\r\n                    spinner={\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">{t('LOADING')}</span>\r\n                        </div>\r\n                    }\r\n                    text={\r\n                        <>\r\n                            <p>{t('LOADING')}</p>\r\n                        </>\r\n                    }\r\n                >\r\n                    {props.children}\r\n                </LoadingOverlay>\r\n            </>\r\n        );\r\n    }\r\n);\r\n","import React from 'react';\r\nimport { GroupModel } from '../models/group';\r\nimport { LabelModel } from '../models/label';\r\n\r\nexport interface GlobalContext {\r\n    isLoading: boolean;\r\n\r\n    labels: LabelModel[];\r\n\r\n    groups: GroupModel[];\r\n    years: number[];\r\n\r\n    group: number;\r\n    month: number;\r\n    year: number;\r\n\r\n    reload: () => void;\r\n}\r\n\r\nexport const defaultGlobalContext: GlobalContext = {\r\n    isLoading: true,\r\n\r\n    labels: [],\r\n\r\n    groups: [],\r\n    years: [],\r\n\r\n    group: 0,\r\n    month: 1,\r\n    year: 2020,\r\n\r\n    reload: () => {}\r\n};\r\n\r\nexport const globalContext = React.createContext<GlobalContext>(defaultGlobalContext);\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { globalContext } from '../../contexts/global';\r\n\r\nexport type SearchProps = {};\r\n\r\nconst SearchStyle = createGlobalStyle`\r\n    .search-component {\r\n        .card-header {\r\n            padding: 5px;\r\n            border: none;\r\n        }\r\n        .card-body {\r\n            padding-top: 0;\r\n            padding-bottom: 0;\r\n            padding-right: 10px;\r\n            padding-left: 10px;\r\n        }\r\n        .search-header {\r\n            margin: 0px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SearchComponent: React.FC<SearchProps> = React.memo((props: SearchProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n    const global = useContext(globalContext);\r\n\r\n    const [months] = React.useState<number[]>([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\r\n    const [group, setGroup] = React.useState<number>(global.group);\r\n    const [month, setMonth] = React.useState<number>(global.month);\r\n    const [year, setYear] = React.useState<number>(global.year);\r\n    const [isExpanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n    React.useEffect(() => {\r\n        setGroup(global.group);\r\n        setMonth(global.month);\r\n        setYear(global.year);\r\n    }, [global.group, global.month, global.year]);\r\n\r\n    const handleOnChangeGroup = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setGroup(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeMonth = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setMonth(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeYear = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setYear(event.target.value as number);\r\n    }, []);\r\n\r\n    const handleOnSearch = React.useCallback(() => {\r\n        history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify({\r\n                group: group,\r\n                month: month,\r\n                year: year\r\n            })\r\n        });\r\n    }, [history, group, month, year]);\r\n\r\n    const handleExpandCollapse = React.useCallback(() => {\r\n        setExpanded(!isExpanded);\r\n    }, [isExpanded]);\r\n\r\n    const groupsOptions = React.useMemo(\r\n        () =>\r\n            global.groups.map(x => (\r\n                <option key={'GROUP_' + x.id} value={x.id}>\r\n                    {x.name}\r\n                </option>\r\n            )),\r\n        [global.groups]\r\n    );\r\n\r\n    const monthsOptions = React.useMemo(\r\n        () =>\r\n            months.map(x => (\r\n                <option key={'MONTH_' + x} value={x}>\r\n                    {t('MONTHS.' + x)}\r\n                </option>\r\n            )),\r\n        [months, t]\r\n    );\r\n\r\n    const yearsOptions = React.useMemo(\r\n        () =>\r\n            global.years.map(x => (\r\n                <option key={'YEAR_' + x} value={x}>\r\n                    {x}\r\n                </option>\r\n            )),\r\n        [global.years]\r\n    );\r\n\r\n    const headerElement = React.useMemo(() => {\r\n        if (global.isLoading) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <Spinner data-testid=\"search-loading\" animation=\"border\" role=\"status\" size=\"sm\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (isExpanded) {\r\n            return (\r\n                <strong>\r\n                    <p className=\"search-header\">{t('SEARCH.HEADER')}</p>\r\n                </strong>\r\n            );\r\n        }\r\n\r\n        const selectedGroup = global.groups.find(g => g.id === group);\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-around\">\r\n                <p className=\"search-header\">{selectedGroup?.name}</p>\r\n                <p className=\"search-header\">{t('MONTHS.' + month)}</p>\r\n                <p className=\"search-header\">{year}</p>\r\n            </div>\r\n        );\r\n    }, [isExpanded, global.isLoading, global.groups, group, month, year, t]);\r\n\r\n    return (\r\n        <div className=\"search-component mb-2\">\r\n            <SearchStyle />\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={handleExpandCollapse}>\r\n                            {headerElement}\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs={12} sm={5}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.GROUP')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={group}\r\n                                            onChange={handleOnChangeGroup}\r\n                                        >\r\n                                            {groupsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.MONTH')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={month}\r\n                                            onChange={handleOnChangeMonth}\r\n                                        >\r\n                                            {monthsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={3}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.YEAR')}</Form.Label>\r\n                                        <Form.Control as=\"select\" size=\"sm\" value={year} onChange={handleOnChangeYear}>\r\n                                            {yearsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Button className=\"mb-2\" onClick={handleOnSearch} size=\"sm\">\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n});\r\n","import { LabelModel } from './label';\r\n\r\nexport enum ExpenseType {\r\n    INCOMING = 0,\r\n    OUTCOMING\r\n}\r\n\r\nexport interface ExpenseModel {\r\n    id: number;\r\n    name: string;\r\n\r\n    type: ExpenseType;\r\n\r\n    value: number;\r\n    date: Date;\r\n    comments: string;\r\n\r\n    /** relations */\r\n    groupId: number;\r\n    labelId: number;\r\n}\r\n\r\nexport interface ExpenseFullModel {\r\n    id: number;\r\n    name: string;\r\n\r\n    type: ExpenseType;\r\n\r\n    value: number;\r\n    date: Date;\r\n    comments: string;\r\n\r\n    /** relations */\r\n    groupId: number;\r\n    label: LabelModel;\r\n}\r\n","import { GroupFullModel, GroupModel } from '../models/group';\r\nimport { usersMockData } from './user';\r\n\r\nexport const groupsMockData: GroupModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData.map(x => x.id) },\r\n    { id: 2, name: 'Group 2', users: usersMockData.map(x => x.id) },\r\n    { id: 3, name: 'Group 3', users: usersMockData.map(x => x.id) },\r\n    { id: 4, name: 'Group 4', users: usersMockData.map(x => x.id) }\r\n];\r\n\r\nexport const groupsFullMockData: GroupFullModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData },\r\n    { id: 2, name: 'Group 2', users: usersMockData },\r\n    { id: 3, name: 'Group 3', users: usersMockData },\r\n    { id: 4, name: 'Group 4', users: usersMockData }\r\n];\r\n","import { LabelFullModel, LabelModel } from '../models/label';\r\n\r\nexport const labelsMockData: LabelModel[] = [\r\n    { id: 1, name: 'Label 1', groupId: 1 },\r\n    { id: 2, name: 'Label 2', groupId: 1 },\r\n    { id: 3, name: 'Label 3', groupId: 2 },\r\n    { id: 4, name: 'Label 4', groupId: 2 }\r\n];\r\n\r\nexport const labelsFullMockData: LabelFullModel[] = [\r\n    { id: 1, name: 'Label 1', groupId: 1, currValue: 1.11, lastValue: 5, avgValue: 6.33 },\r\n    { id: 2, name: 'Label 2', groupId: 1, currValue: 2.11, lastValue: 4, avgValue: 5.33 },\r\n    { id: 3, name: 'Label 3', groupId: 2, currValue: 3.11, lastValue: 3, avgValue: 4.33 },\r\n    { id: 4, name: 'Label 4', groupId: 2, currValue: 4.11, lastValue: 2, avgValue: 3.33 }\r\n];\r\n","import { ExpenseFullModel, ExpenseModel, ExpenseType } from '../models/expense';\r\nimport { groupsMockData } from './group';\r\nimport { labelsMockData } from './label';\r\n\r\nexport const expensesMockData: ExpenseModel[] = [\r\n    {\r\n        id: 1,\r\n        name: 'Expense 1',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 1.11,\r\n        date: new Date(2020, 0, 1),\r\n        comments: 'Comments 1',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[0].id\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Expense 2',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 2.11,\r\n        date: new Date(),\r\n        comments: 'Comments 2',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[1].id\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Expense 3',\r\n        type: ExpenseType.INCOMING,\r\n        value: 3.11,\r\n        date: new Date(),\r\n        comments: 'Comments 3',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[2].id\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Expense 4',\r\n        type: ExpenseType.INCOMING,\r\n        value: 4.11,\r\n        date: new Date(),\r\n        comments: 'Comments 3',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[3].id\r\n    }\r\n];\r\n\r\nexport const expensesFullMockData: ExpenseFullModel[] = [\r\n    {\r\n        id: 1,\r\n        name: 'Expense 1',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 1.11,\r\n        date: new Date(2020, 0, 1),\r\n        comments: 'Comments 1',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[0]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Expense 2',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 2.11,\r\n        date: new Date(),\r\n        comments: 'Comments 2',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[1]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Expense 3',\r\n        type: ExpenseType.INCOMING,\r\n        value: 3.11,\r\n        date: new Date(),\r\n        comments: 'Comments 3',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[2]\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Expense 4',\r\n        type: ExpenseType.INCOMING,\r\n        value: 4.11,\r\n        date: new Date(),\r\n        comments: 'Comments 4',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[3]\r\n    }\r\n];\r\n\r\nexport const yearsMockData: number[] = [2015, 2016, 2017, 2018, 2019, 2020];\r\n","import { expensesFullMockData, expensesMockData, yearsMockData } from '../mockData/expense';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { ExpenseFullModel, ExpenseModel } from '../models/expense';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class ExpenseService extends ServiceBase {\r\n    private baseUrl = '/api/expense';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getYears(group: number): Promise<number[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(yearsMockData);\r\n        }\r\n        return await this.get<number[]>(this.baseUrl + '/years', { group: group });\r\n    }\r\n\r\n    async getAllFull(group: number, month: number, year: number): Promise<ExpenseFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesFullMockData);\r\n        }\r\n        return await this.get<ExpenseFullModel[]>(this.baseUrl + '/full', { group: group, month: month, year: year });\r\n    }\r\n\r\n    async getAll(group: number): Promise<ExpenseModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData);\r\n        }\r\n        return await this.get<ExpenseModel[]>(this.baseUrl, { group: group });\r\n    }\r\n\r\n    async add(obj: Partial<ExpenseModel>): Promise<ExpenseModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData[0]);\r\n        }\r\n        return await this.post<ExpenseModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: ExpenseModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport interface ItemProps {\r\n    id: number;\r\n    name: string;\r\n    onEdit: (id: number) => void;\r\n    onDelete: (id: number) => void;\r\n}\r\n\r\nexport const ItemComponent: React.FC<React.PropsWithChildren<ItemProps>> = React.memo(\r\n    (props: React.PropsWithChildren<ItemProps>) => {\r\n        const [t] = useTranslation();\r\n\r\n        return (\r\n            <div className=\"item-component\">\r\n                <Card key={`${props.id}_${props.name}`} className=\"mb-2 mt-2\">\r\n                    <Card.Title className=\"mt-2 mr-2 ml-2 mb-0\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            {props.name}\r\n                            <DropdownButton size=\"sm\" variant=\"secondary\" title=\"\" id={`menu-${props.id}`}>\r\n                                <Dropdown.Item eventKey=\"1\" onClick={() => props.onEdit(props.id)}>\r\n                                    {t('LABEL.EDIT')}\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Divider />\r\n                                <Dropdown.Item eventKey=\"2\" onClick={() => props.onDelete(props.id)}>\r\n                                    {t('LABEL.DELETE')}\r\n                                </Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </div>\r\n                    </Card.Title>\r\n                    <Card.Body className=\"p-2\">{props.children}</Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\n\nimport { ItemComponent } from '../../components/item/item';\nimport { ExpenseFullModel } from '../../models/expense';\n\nexport type ExpenseItemsProps = {\n    items: ExpenseFullModel[];\n    onEdit: (id: number) => void;\n    onDelete: (id: number) => void;\n};\n\nexport const ExpenseItemsPage: React.FC<ExpenseItemsProps> = React.memo((props: ExpenseItemsProps) => {\n    const [t] = useTranslation();\n\n    return (\n        <>\n            {props.items.map(item => (\n                <ItemComponent\n                    key={item.id}\n                    id={item.id}\n                    name={item.name}\n                    onEdit={() => props.onEdit(item.id)}\n                    onDelete={() => props.onDelete(item.id)}\n                >\n                    <div className=\"d-flex justify-content-between\">\n                        <p className=\"no-margin\">\n                            <small>{t('EXPENSE.VALUE')}</small>\n                            <br></br>\n                            {item.value.toFixed(2)}\n                        </p>\n                        <p className=\"no-margin\">\n                            <small>{t('EXPENSE.DATE')}</small>\n                            <br></br>\n                            {format(new Date(item.date), t('EXPENSE.DATE_FORMAT'))}\n                        </p>\n                        <p className=\"no-margin\">\n                            <small>{t('EXPENSE.LABEL')}</small>\n                            <br></br>\n                            {item.label.name}\n                        </p>\n                    </div>\n                </ItemComponent>\n            ))}\n        </>\n    );\n});\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ExpenseFullModel } from '../../models/expense';\n\nexport type ExpenseSummaryProps = {\n    incoming: ExpenseFullModel[];\n    outcoming: ExpenseFullModel[];\n};\n\nexport const ExpenseSummaryPage: React.FC<ExpenseSummaryProps> = React.memo((props: ExpenseSummaryProps) => {\n    const [t] = useTranslation();\n\n    const { incoming, outcoming } = props;\n\n    const [totalIncoming, setTotalIncoming] = React.useState<number>(0);\n    const [totalOutcoming, setTotalOutcoming] = React.useState<number>(0);\n    const [totalLeft, setTotalLeft] = React.useState<number>(0);\n    const [totalLeftPer, setTotalLeftPer] = React.useState<number>(0);\n\n    React.useEffect(() => {\n        const tmpTotalIncoming = incoming.reduce((sum, current) => sum + current.value, 0);\n        const tmpTotalOutcoming = outcoming.reduce((sum, current) => sum + current.value, 0);\n\n        setTotalIncoming(tmpTotalIncoming);\n        setTotalOutcoming(tmpTotalOutcoming);\n\n        const tmpTotalLeft = tmpTotalIncoming - tmpTotalOutcoming;\n\n        setTotalLeft(tmpTotalLeft);\n        if (tmpTotalIncoming === 0) {\n            setTotalLeftPer(0);\n        } else {\n            const left = (tmpTotalLeft / tmpTotalIncoming) * 100;\n            setTotalLeftPer(left);\n        }\n    }, [incoming, outcoming]);\n\n    return (\n        <>\n            <div className=\"mt-2 row\">\n                <div className=\"col\">\n                    <p>{t('EXPENSE.TOTAL_INCOMING')}</p>\n                </div>\n                <div className=\"col\">{totalIncoming.toFixed(2)}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p>{t('EXPENSE.TOTAL_OUTCOMING')}</p>\n                </div>\n                <div className=\"col\">{totalOutcoming.toFixed(2)}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p>{t('EXPENSE.TOTAL_LEFT')}</p>\n                </div>\n                <div className=\"col\">{`${totalLeft.toFixed(2)} - ${totalLeftPer.toFixed(2)}%`}</div>\n            </div>\n        </>\n    );\n});\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport { ConfigManager } from '../../configurations/configManager';\nimport { globalContext } from '../../contexts/global';\nimport { hasValue } from '../../helpers/util';\nimport { ConfigModel } from '../../models/config';\nimport { ExpenseFullModel, ExpenseType } from '../../models/expense';\nimport { ExpenseService } from '../../services/expense';\nimport { LabelModel } from '../../models/label';\nimport { ErrorComponent } from '../../components/error/error';\n\nexport type ExpenseModalProps = {\n    show: boolean;\n    expense?: ExpenseFullModel;\n    onHide: () => void;\n    onAction: () => void;\n};\n\nexport const ExpenseModalPage: React.FC<ExpenseModalProps> = React.memo((props: ExpenseModalProps) => {\n    const [t] = useTranslation();\n\n    const { group, labels: labelsGroup } = useContext(globalContext);\n\n    const [error, setError] = React.useState('');\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\n    const [type, setType] = React.useState<ExpenseType>(ExpenseType.OUTCOMING);\n    const [name, setName] = React.useState<string>('');\n    const [value, setValue] = React.useState<number>();\n    const [date, setDate] = React.useState<Date>(new Date());\n    const [label, setLabel] = React.useState<number>();\n    const [labels, setLabels] = React.useState<LabelModel[]>([]);\n    const [comments, setComments] = React.useState<string>('');\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\n\n    //#region handles\n    const handleOnChangeType = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        setType(+event.target.value as ExpenseType);\n    }, []);\n    const handleOnChangeName = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        setName(event.target.value);\n    }, []);\n    const handleOnChangeValue = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(+event.target.value);\n    }, []);\n    const handleOnChangeDate = React.useCallback(event => {\n        setDate(event.target.value);\n    }, []);\n    const handleOnChangeLabel = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        setLabel(+event.target.value);\n        localStorage.setItem('label', event.target.value);\n    }, []);\n\n    const handleOnChangeComments = React.useCallback(event => {\n        setComments(event.target.value);\n    }, []);\n\n    const handleOnAction = React.useCallback(async () => {\n        setLoadingAction(true);\n\n        if (hasValue(props.expense)) {\n            try {\n                await new ExpenseService(config).update({\n                    ...(props.expense as ExpenseFullModel),\n                    type: type,\n                    name: name,\n                    value: value as number,\n                    date: date,\n                    labelId: label as number,\n                    groupId: group,\n                    comments: comments\n                });\n                props.onAction();\n            } catch {\n                setError(t('EXPENSE.ERROR'));\n            } finally {\n                setLoadingAction(false);\n            }\n        } else {\n            setLoadingAction(true);\n            try {\n                await new ExpenseService(config).add({\n                    type: type,\n                    name: name,\n                    value: value as number,\n                    date: date,\n                    labelId: label as number,\n                    groupId: group,\n                    comments: comments\n                });\n                props.onAction();\n            } catch {\n                setError(t('EXPENSE.ERROR'));\n            } finally {\n                setLoadingAction(false);\n            }\n        }\n    }, [type, name, value, date, label, comments, t, config, props, group]);\n    //#endregion\n\n    React.useEffect(() => {\n        if (!props.show) {\n            return;\n        }\n\n        setLabels(labelsGroup);\n        setError('');\n\n        if (props.expense) {\n            setType(props.expense?.type);\n            setName(props.expense?.name);\n            setValue(props.expense?.value);\n            setDate(props.expense?.date);\n            setLabel(props.expense?.label.id);\n            setComments(props.expense?.comments);\n        } else {\n            setType(ExpenseType.OUTCOMING);\n            setName('');\n            setValue(undefined);\n            setDate(new Date());\n            const l = localStorage.getItem('label');\n            if (hasValue(l) && labelsGroup.some(x => x.id === +(l as string))) {\n                setLabel(+(l as string));\n            } else {\n                setLabel(labelsGroup.length > 0 ? labelsGroup[0].id : undefined);\n            }\n\n            setComments('');\n        }\n    }, [props, labelsGroup]);\n\n    const disabledAction = React.useMemo(() => {\n        if (\n            isLoadingAction ||\n            hasValue(error) ||\n            !hasValue(name) ||\n            !hasValue(value) ||\n            !hasValue(date) ||\n            !hasValue(label)\n        ) {\n            return true;\n        }\n\n        return false;\n    }, [error, name, value, date, label, isLoadingAction]);\n\n    const labelOptions = React.useMemo(\n        () =>\n            labels.map(l => (\n                <option key={l.id} value={l.id}>\n                    {l.name}\n                </option>\n            )),\n        [labels]\n    );\n\n    return (\n        <>\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        {hasValue(props.expense) ? t('EXPENSE.MODAL.EDIT_TITLE') : t('EXPENSE.MODAL.ADD_TITLE')}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ErrorComponent message={error} />\n                    <Form>\n                        <Form.Group controlId=\"formLabel\">\n                            <Form.Label>{t('EXPENSE.MODAL.TYPE')}</Form.Label>\n                            <Form.Control as=\"select\" value={type ?? ''} onChange={handleOnChangeType}>\n                                <option key={ExpenseType.OUTCOMING} value={ExpenseType.OUTCOMING}>\n                                    {t('EXPENSE.OUTCOMING')}\n                                </option>\n                                <option key={ExpenseType.INCOMING} value={ExpenseType.INCOMING}>\n                                    {t('EXPENSE.INCOMING')}\n                                </option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"formName\">\n                            <Form.Label>{t('EXPENSE.MODAL.NAME')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-name-field\"\n                                type=\"text\"\n                                value={name}\n                                placeholder={t('EXPENSE.MODAL.NAME_PLACEHOLDER')}\n                                onChange={handleOnChangeName}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formValue\">\n                            <Form.Label>{t('EXPENSE.MODAL.VALUE')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-value-field\"\n                                type=\"number\"\n                                value={value ?? ''}\n                                placeholder={t('EXPENSE.MODAL.VALUE_PLACEHOLDER')}\n                                onChange={handleOnChangeValue}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formDate\">\n                            <Form.Label>{t('EXPENSE.MODAL.DATE')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-date-field\"\n                                type=\"date\"\n                                value={format(new Date(date), t('EXPENSE.FIELD_DATE_FORMAT'))}\n                                onChange={handleOnChangeDate}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formLabel\">\n                            <Form.Label>{t('EXPENSE.MODAL.LABEL')}</Form.Label>\n                            <Form.Control as=\"select\" value={label ?? ''} onChange={handleOnChangeLabel}>\n                                {labelOptions}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"formComments\">\n                            <Form.Label>{t('EXPENSE.MODAL.COMMENTS')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-comments-field\"\n                                as=\"textarea\"\n                                rows={2}\n                                value={comments}\n                                placeholder={t('EXPENSE.MODAL.COMMENTS_PLACEHOLDER')}\n                                onChange={handleOnChangeComments}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\n                        {hasValue(props.expense) ? t('EXPENSE.MODAL.EDIT_ACTION') : t('EXPENSE.MODAL.ADD_ACTION')}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n});\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\n\r\nimport { ErrorComponent } from '../../components/error/error';\r\nimport { ItemsHeaderComponent } from '../../components/itemsHeader/itemsHeader';\r\nimport { LoadingComponent } from '../../components/loading/loading';\r\nimport { SearchComponent } from '../../components/search/search';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ExpenseFullModel, ExpenseType } from '../../models/expense';\r\nimport { ExpenseService } from '../../services/expense';\r\nimport { ExpenseItemsPage } from './expenseItems';\r\nimport { ExpenseSummaryPage } from './expenseSummary';\r\nimport { ExpenseModalPage } from '../expenseModal/expenseModal';\r\n\r\nexport type ExpenseProps = {};\r\n\r\nconst ExpenseStyle = createGlobalStyle`\r\n    .no-margin {\r\n        margin: 0px;\r\n    };\r\n    canvas {\r\n        max-width: 500px;\r\n    };\r\n    .red-text {\r\n        color: #dc3545;\r\n    }\r\n`;\r\n\r\nexport const ExpensePage: React.FC<ExpenseProps> = React.memo((props: ExpenseProps) => {\r\n    const [t] = useTranslation();\r\n    const global = useContext(globalContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [expenses, setExpenses] = React.useState<ExpenseFullModel[]>([]);\r\n    const [expense, setExpense] = React.useState<ExpenseFullModel>();\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n\r\n    // #region main\r\n    React.useEffect(() => {\r\n        if (global.isLoading) {\r\n            return;\r\n        }\r\n\r\n        const runAsync = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new ExpenseService(config).getAllFull(global.group, global.month, global.year);\r\n                setExpenses(data);\r\n            } catch {\r\n                setExpenses([]);\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [global, config, t, refresh]);\r\n    // #endregion\r\n\r\n    // #region handles\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setExpense(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setExpense(expenses.find(x => x.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [expenses]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new ExpenseService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            }\r\n        },\r\n        [config, t, refresh]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n    // #endregion\r\n\r\n    //#region items\r\n    const incomingItems = React.useMemo(() => {\r\n        return expenses.filter(x => x.type === +ExpenseType.INCOMING);\r\n    }, [expenses]);\r\n\r\n    const outcomingItems = React.useMemo(() => {\r\n        return expenses.filter(x => x.type === +ExpenseType.OUTCOMING);\r\n    }, [expenses]);\r\n    //#endregion\r\n\r\n    return (\r\n        <>\r\n            <ExpenseStyle />\r\n            <SearchComponent />\r\n            <ItemsHeaderComponent\r\n                title={t('EXPENSE.TITLE')}\r\n                action={t('EXPENSE.ADD')}\r\n                onAction={handleOnAdd}\r\n                disableAction={isLoading || global.isLoading}\r\n            />\r\n            <ErrorComponent message={error} />\r\n            <LoadingComponent isLoading={isLoading || global.isLoading}>\r\n                <Tabs defaultActiveKey=\"summary\">\r\n                    <Tab eventKey=\"summary\" title={t('EXPENSE.SUMMARY')}>\r\n                        <ExpenseSummaryPage incoming={incomingItems} outcoming={outcomingItems} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"incoming\" title={t('EXPENSE.INCOMING')}>\r\n                        <ExpenseItemsPage items={incomingItems} onEdit={handleOnEdit} onDelete={handleOnDelete} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"outcoming\" title={t('EXPENSE.OUTCOMING')}>\r\n                        <ExpenseItemsPage items={outcomingItems} onEdit={handleOnEdit} onDelete={handleOnDelete} />\r\n                    </Tab>\r\n                </Tabs>\r\n            </LoadingComponent>\r\n            <ExpenseModalPage show={showModal} expense={expense} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import { groupsFullMockData, groupsMockData } from '../mockData/group';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { GroupFullModel, GroupModel } from '../models/group';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class GroupService extends ServiceBase {\r\n    private baseUrl = '/api/group';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(user: string): Promise<GroupFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsFullMockData);\r\n            //return this.rejectMockData();\r\n        }\r\n        return await this.get<GroupFullModel[]>(this.baseUrl + '/full', { user: user });\r\n    }\r\n\r\n    async getAll(): Promise<GroupModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData);\r\n        }\r\n        return await this.get<GroupModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<GroupModel>): Promise<GroupModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData[0]);\r\n        }\r\n        return await this.post<GroupModel>(\r\n            this.baseUrl,\r\n            {},\r\n            {\r\n                ...obj,\r\n                // TODO refactor back end to use array of strings\r\n                users: obj.users?.map(x => {\r\n                    return {\r\n                        id: x\r\n                    };\r\n                })\r\n            }\r\n        );\r\n    }\r\n\r\n    async update(obj: GroupModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(\r\n            this.baseUrl,\r\n            {},\r\n            {\r\n                // TODO refactor back end to use array of strings\r\n                ...obj,\r\n                users: obj.users?.map(x => {\r\n                    return {\r\n                        id: x\r\n                    };\r\n                })\r\n            }\r\n        );\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { UserService } from '../../services/user';\r\nimport { UserModel } from '../../models/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nexport type GroupModalProps = {\r\n    show: boolean;\r\n    group?: GroupFullModel;\r\n    onHide: () => void;\r\n    onAction: () => void;\r\n};\r\n\r\nexport const GroupModalPage: React.FC<GroupModalProps> = React.memo((props: GroupModalProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { user } = useContext(userContext);\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [name, setName] = React.useState<string>('');\r\n    const [selectedUsers, setSelectedUsers] = React.useState<string[]>([]);\r\n    const [users, setUsers] = React.useState<UserModel[]>([]);\r\n    const [isLoadingUsers, setLoadingUsers] = React.useState(false);\r\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\r\n\r\n    const handleOnChangeName = React.useCallback(event => {\r\n        setName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnChangeUsers = React.useCallback(event => {\r\n        setSelectedUsers(Array.from(event.target.selectedOptions, (option: any) => option.value));\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoadingAction(true);\r\n\r\n        if (hasValue(props.group)) {\r\n            try {\r\n                await new GroupService(config).update({\r\n                    id: props.group?.id as number,\r\n                    name: name,\r\n                    users: selectedUsers\r\n                });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        } else {\r\n            setLoadingAction(true);\r\n            try {\r\n                await new GroupService(config).add({ name: name, users: selectedUsers });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        }\r\n    }, [name, selectedUsers, t, config, props]);\r\n\r\n    React.useEffect(() => {\r\n        if (!props.show) {\r\n            return;\r\n        }\r\n\r\n        if (props.group) {\r\n            setName(props.group?.name);\r\n            setSelectedUsers(props.group?.users.map(x => x.id));\r\n        } else {\r\n            setName('');\r\n            setSelectedUsers([]);\r\n        }\r\n    }, [props]);\r\n\r\n    React.useEffect(() => {\r\n        const runAsync = async () => {\r\n            setLoadingUsers(true);\r\n            setError('');\r\n            try {\r\n                const data = await new UserService(config).getAll();\r\n                setUsers(data);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingUsers(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [t, config]);\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (isLoadingAction) {\r\n            return true;\r\n        }\r\n\r\n        if (hasValue(error)) {\r\n            return true;\r\n        }\r\n\r\n        if (!hasValue(name) || !hasValue(selectedUsers)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [error, name, selectedUsers, isLoadingAction]);\r\n\r\n    const usersOption = React.useMemo(\r\n        () =>\r\n            users.map(u =>\r\n                user?.uid === u.id ? (\r\n                    <option key={u.id} value={u.id}>\r\n                        {t('GROUP.YOU')}\r\n                    </option>\r\n                ) : (\r\n                    <option key={u.id} value={u.id}>{`${u.displayName} (${u.email})`}</option>\r\n                )\r\n            ),\r\n        [users, user, t]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_TITLE') : t('GROUP.MODAL.ADD_TITLE')}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ErrorComponent message={error} />\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>{t('GROUP.MODAL.NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-name-field\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                placeholder={t('GROUP.MODAL.NAME_PLACEHOLDER')}\r\n                                onChange={handleOnChangeName}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                            <Form.Label>{t('GROUP.MODAL.USERS')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-users-field\"\r\n                                as=\"select\"\r\n                                multiple\r\n                                value={selectedUsers}\r\n                                readOnly={isLoadingUsers && hasValue(error)}\r\n                                onChange={handleOnChangeUsers}\r\n                            >\r\n                                {usersOption}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_ACTION') : t('GROUP.MODAL.ADD_ACTION')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\nimport { GroupModalPage } from '../groupModal/groupModal';\r\nimport { ItemComponent } from '../../components/item/item';\r\nimport { LoadingComponent } from '../../components/loading/loading';\r\nimport { ItemsHeaderComponent } from '../../components/itemsHeader/itemsHeader';\r\nimport { ErrorComponent } from '../../components/error/error';\r\nimport { globalContext } from '../../contexts/global';\r\n\r\nconst GroupStyle = createGlobalStyle``;\r\n\r\nexport type GroupProps = {};\r\n\r\nexport const GroupPage: React.FC<GroupProps> = React.memo((props: GroupProps) => {\r\n    const [t] = useTranslation();\r\n    const { user, isReady } = useContext(userContext);\r\n    const { reload } = useContext(globalContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [group, setGroup] = React.useState<GroupFullModel>();\r\n    const [groups, setGroups] = React.useState<GroupFullModel[]>([]);\r\n    const [error, setError] = React.useState<string>('');\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setGroup(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setGroup(groups.find(g => g.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [groups]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new GroupService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            }\r\n        },\r\n        [config, refresh, t]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n\r\n        setTimeout(() => {\r\n            reload();\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh, reload]);\r\n\r\n    React.useEffect(() => {\r\n        if (!isReady) {\r\n            return;\r\n        }\r\n\r\n        const setup = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new GroupService(config).getAllFull(user?.uid ?? '');\r\n                setGroups(data);\r\n            } catch {\r\n                setGroups([]);\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        setup();\r\n    }, [isReady, config, user, refresh, t]);\r\n\r\n    const groupElements = React.useMemo(\r\n        () =>\r\n            groups.map((group, index) => (\r\n                <ItemComponent\r\n                    key={group.id}\r\n                    id={group.id}\r\n                    name={group.name}\r\n                    onEdit={handleOnEdit}\r\n                    onDelete={handleOnDelete}\r\n                >\r\n                    <div key={`GROUP_USERS_${index}`} className=\"d-flex flex-wrap justify-content-start\">\r\n                        {group.users.map((user, indexUser) => (\r\n                            <small key={`GROUP_SMALL_${index}_${indexUser}`} className=\"mr-2\">\r\n                                {getUserDisplayName(user)}\r\n                            </small>\r\n                        ))}\r\n                    </div>\r\n                </ItemComponent>\r\n            )),\r\n        [groups, handleOnEdit, handleOnDelete]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <GroupStyle />\r\n            <ItemsHeaderComponent\r\n                title={t('GROUP.TITLE')}\r\n                action={t('GROUP.ADD')}\r\n                onAction={handleOnAdd}\r\n                disableAction={isLoading}\r\n            />\r\n            <ErrorComponent message={error} />\r\n            <LoadingComponent isLoading={isLoading}>{groupElements}</LoadingComponent>\r\n            <GroupModalPage show={showModal} group={group} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport 'chartjs-plugin-colorschemes';\r\n\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nimport { SearchComponent } from '../../components/search/search';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { LabelFullModel } from '../../models/label';\r\nimport { LabelService } from '../../services/label';\r\nimport { ItemComponent } from '../../components/item/item';\r\nimport { LabelModalPage } from '../labelModal/labelModal';\r\nimport { LoadingComponent } from '../../components/loading/loading';\r\nimport { ErrorComponent } from '../../components/error/error';\r\nimport { ItemsHeaderComponent } from '../../components/itemsHeader/itemsHeader';\r\n\r\nexport type LabelProps = {};\r\n\r\nenum LabelGrapyType {\r\n    CURRENT_MONTH = 1,\r\n    LAST_MONTH,\r\n    AVERAGE\r\n}\r\n\r\nconst LabelStyle = createGlobalStyle`\r\n    .no-margin {\r\n        margin: 0px;\r\n    };\r\n    canvas {\r\n        max-width: 500px;\r\n    };\r\n`;\r\n\r\nexport const LabelPage: React.FC<LabelProps> = React.memo((_props: LabelProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { isLoading: isLoadingGlobal, group, month, year, reload } = useContext(globalContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [labels, setLabels] = React.useState<LabelFullModel[]>([]);\r\n    const [label, setLabel] = React.useState<LabelFullModel>();\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n    const [graphType, setGrahType] = React.useState(LabelGrapyType.CURRENT_MONTH);\r\n\r\n    // #region main\r\n    React.useEffect(() => {\r\n        if (isLoadingGlobal) {\r\n            return;\r\n        }\r\n\r\n        const runAsync = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new LabelService(config).getAllFull(group, month, year);\r\n                setLabels(data);\r\n            } catch {\r\n                setLabels([]);\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [isLoadingGlobal, group, month, year, config, t, refresh]);\r\n    // #endregion\r\n\r\n    // #region handles\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setLabel(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setLabel(labels.find(g => g.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [labels]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new LabelService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            }\r\n        },\r\n        [config, t, refresh]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            reload();\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh, reload]);\r\n\r\n    const handleOnGraphType = React.useCallback((value: number) => {\r\n        setGrahType(value);\r\n    }, []);\r\n    // #endregion\r\n\r\n    // #region items\r\n    const itemsElements = React.useMemo(\r\n        () =>\r\n            labels.map(label => {\r\n                const currValueClass =\r\n                    label.currValue > label.lastValue || label.currValue > label.avgValue ? 'text-danger' : '';\r\n                const lastValueClass = label.lastValue > label.avgValue ? 'text-danger' : '';\r\n\r\n                return (\r\n                    <ItemComponent\r\n                        key={label.id}\r\n                        id={label.id}\r\n                        name={label.name}\r\n                        onEdit={handleOnEdit}\r\n                        onDelete={handleOnDelete}\r\n                    >\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <p className={`no-margin ${currValueClass}`}>\r\n                                <small>{t('LABEL.CURRENT_MONTH')}</small>\r\n                                <br></br>\r\n                                {label.currValue.toFixed(2)}\r\n                            </p>\r\n                            <p className={`no-margin ${lastValueClass}`}>\r\n                                <small>{t('LABEL.LAST_MONTH')}</small>\r\n                                <br></br>\r\n                                {label.lastValue.toFixed(2)}\r\n                            </p>\r\n                            <p className=\"no-margin\">\r\n                                <small>{t('LABEL.AVERAGE')}</small>\r\n                                <br></br>\r\n                                {label.avgValue.toFixed(2)}\r\n                            </p>\r\n                        </div>\r\n                    </ItemComponent>\r\n                );\r\n            }),\r\n        [labels, handleOnEdit, handleOnDelete, t]\r\n    );\r\n    // #endregion\r\n\r\n    // #region graph\r\n    const graphElement = React.useMemo(\r\n        () => (\r\n            <>\r\n                <Pie\r\n                    key={graphType}\r\n                    data={\r\n                        labels.length > 0\r\n                            ? {\r\n                                  labels: labels.map(label => label.name),\r\n                                  datasets: [\r\n                                      {\r\n                                          data: labels.map(label =>\r\n                                              graphType === LabelGrapyType.CURRENT_MONTH\r\n                                                  ? label.currValue\r\n                                                  : graphType === LabelGrapyType.LAST_MONTH\r\n                                                  ? label.lastValue\r\n                                                  : label.avgValue\r\n                                          ),\r\n                                          borderWidth: 0\r\n                                      }\r\n                                  ]\r\n                              }\r\n                            : {\r\n                                  labels: ['Empty'],\r\n                                  datasets: [\r\n                                      {\r\n                                          data: [1],\r\n                                          borderWidth: 0\r\n                                      }\r\n                                  ]\r\n                              }\r\n                    }\r\n                    options={{\r\n                        plugins: {\r\n                            colorschemes: {\r\n                                scheme: 'office.Excel16'\r\n                            }\r\n                        }\r\n                    }}\r\n                    width={100}\r\n                    height={100}\r\n                />\r\n            </>\r\n        ),\r\n        [labels, graphType]\r\n    );\r\n    // #endregion\r\n\r\n    return (\r\n        <>\r\n            <LabelStyle />\r\n            <SearchComponent />\r\n            <ItemsHeaderComponent\r\n                title={t('LABEL.TITLE')}\r\n                action={t('LABEL.ADD')}\r\n                onAction={handleOnAdd}\r\n                disableAction={isLoading || isLoadingGlobal}\r\n            />\r\n            <ErrorComponent message={error} />\r\n            <LoadingComponent isLoading={isLoading || isLoadingGlobal}>\r\n                <Tabs defaultActiveKey=\"items\">\r\n                    <Tab eventKey=\"items\" title={t('LABEL.TAB_ITEMS')}>\r\n                        {itemsElements}\r\n                    </Tab>\r\n                    <Tab eventKey=\"graph\" title={t('LABEL.TAB_GRAPH')}>\r\n                        <div className=\"m-2 d-flex justify-content-center\">\r\n                            <ToggleButtonGroup\r\n                                type=\"radio\"\r\n                                name=\"options\"\r\n                                value={graphType}\r\n                                onChange={handleOnGraphType}\r\n                            >\r\n                                <ToggleButton value={LabelGrapyType.CURRENT_MONTH}>\r\n                                    {t('LABEL.CURRENT_MONTH')}\r\n                                </ToggleButton>\r\n                                <ToggleButton value={LabelGrapyType.LAST_MONTH}>{t('LABEL.LAST_MONTH')}</ToggleButton>\r\n                                <ToggleButton value={LabelGrapyType.AVERAGE}>{t('LABEL.AVERAGE')}</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            {/* ignore chart.js on testing */}\r\n                            {process.env.NODE_ENV !== 'test' && graphElement}\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </LoadingComponent>\r\n            <LabelModalPage show={showModal} label={label} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import { labelsFullMockData, labelsMockData } from '../mockData/label';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { LabelFullModel, LabelModel } from '../models/label';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class LabelService extends ServiceBase {\r\n    private baseUrl = '/api/label';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(group: number, month: number, year: number): Promise<LabelFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsFullMockData);\r\n        }\r\n        return await this.get<LabelFullModel[]>(this.baseUrl + '/full', {\r\n            group: group,\r\n            month: month,\r\n            year: year\r\n        });\r\n    }\r\n\r\n    async getAll(group: number): Promise<LabelModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData);\r\n        }\r\n        return await this.get<LabelModel[]>(this.baseUrl, { group: group });\r\n    }\r\n\r\n    async add(obj: Partial<LabelModel>): Promise<LabelModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData[0]);\r\n        }\r\n        return await this.post<LabelModel>(this.baseUrl, { group: obj.groupId }, obj);\r\n    }\r\n\r\n    async update(obj: LabelModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { LabelFullModel } from '../../models/label';\r\nimport { LabelService } from '../../services/label';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nexport type LabelModalProps = {\r\n    show: boolean;\r\n    label?: LabelFullModel;\r\n    onHide: () => void;\r\n    onAction: () => void;\r\n};\r\n\r\nexport const LabelModalPage: React.FC<LabelModalProps> = React.memo((props: LabelModalProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { show, label } = props;\r\n\r\n    const { group } = useContext(globalContext);\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [name, setName] = React.useState<string>('');\r\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\r\n\r\n    const handleOnChangeName = React.useCallback(event => {\r\n        setName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoadingAction(true);\r\n\r\n        if (hasValue(props.label)) {\r\n            try {\r\n                await new LabelService(config).update({\r\n                    ...(props.label as LabelFullModel),\r\n                    name: name\r\n                });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        } else {\r\n            setLoadingAction(true);\r\n            try {\r\n                await new LabelService(config).add({ name: name, groupId: group });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        }\r\n    }, [name, t, config, props, group]);\r\n\r\n    React.useEffect(() => {\r\n        if (!show) {\r\n            return;\r\n        }\r\n\r\n        if (label) {\r\n            setName(label?.name ?? '');\r\n        } else {\r\n            setName('');\r\n        }\r\n    }, [show, label]);\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (isLoadingAction || hasValue(error) || !hasValue(name)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [error, name, isLoadingAction]);\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {hasValue(props.label) ? t('LABEL.MODAL.EDIT_TITLE') : t('LABEL.MODAL.ADD_TITLE')}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ErrorComponent message={error} />\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>{t('LABEL.MODAL.NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"label-name-field\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                placeholder={t('LABEL.MODAL.NAME_PLACEHOLDER')}\r\n                                onChange={handleOnChangeName}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\r\n                        {hasValue(props.label) ? t('LABEL.MODAL.EDIT_ACTION') : t('LABEL.MODAL.ADD_ACTION')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","export const getFirebaseConfig = (projectId: string, apiKey: string) => ({\r\n    apiKey: apiKey,\r\n    authDomain: `${projectId}.firebaseapp.com`,\r\n    databaseURL: `https://${projectId}.firebaseio.com`,\r\n    projectId: projectId,\r\n    storageBucket: projectId,\r\n    messagingSenderId: 'my-sender-id'\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { userContext } from '../../contexts/user';\r\nimport { ItemsHeaderComponent } from '../../components/itemsHeader/itemsHeader';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { updateUser } from '../../services/auth';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nexport type SettingsProps = {};\r\n\r\nexport const SettingsPage: React.FC<SettingsProps> = React.memo((props: SettingsProps) => {\r\n    const user = useContext(userContext);\r\n    const [t] = useTranslation();\r\n\r\n    const [displayName, setDisplayName] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n\r\n    const handleOnChangeDarkTheme = React.useCallback(\r\n        (event: React.ChangeEvent<HTMLInputElement>) => {\r\n            user.setDarkTheme(event.target.checked);\r\n        },\r\n        [user]\r\n    );\r\n\r\n    const handleOnChangeDisplayName = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDisplayName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnUpdate = React.useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            await updateUser(config, user.user as firebase.User, displayName);\r\n        } catch {\r\n            setError(t('SETTINGS.ERROR'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [displayName, config, user.user, t]);\r\n\r\n    React.useEffect(() => {\r\n        setDisplayName(user.user?.displayName ?? '');\r\n    }, [user.user]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-2 d-flex justify-content-center\">\r\n                <div className=\"col-xs-12 col-sm-8 col-md-6\">\r\n                    <ItemsHeaderComponent\r\n                        title={t('SETTINGS.TITLE')}\r\n                        action={t('SETTINGS.UPDATE')}\r\n                        onAction={handleOnUpdate}\r\n                        disableAction={isLoading}\r\n                    />\r\n                    <ErrorComponent message={error} />\r\n                    <Form>\r\n                        <Form.Check\r\n                            className=\"mb-2\"\r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            label={t('SETTINGS.DARK_THEME')}\r\n                            checked={user.isDarkTheme}\r\n                            onChange={handleOnChangeDarkTheme}\r\n                        />\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>{t('SETTINGS.DISPLAY_NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder={t('SETTINGS.DISPLAY_NAME_PLACEHOLDER')}\r\n                                value={displayName}\r\n                                onChange={handleOnChangeDisplayName}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { userContext } from '../contexts/user';\r\n\r\ninterface PrivateRouteProps {\r\n    component: any;\r\n    path?: string;\r\n}\r\n\r\nexport const PrivateRoute = ({ component: Component, path, ...other }: PrivateRouteProps) => {\r\n    const { user } = useContext(userContext);\r\n    return user ? <Component /> : <Redirect to=\"/auth\" />;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { format, isValid } from 'date-fns';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ErrorComponent } from '../../components/error/error';\r\nimport { ItemsHeaderComponent } from '../../components/itemsHeader/itemsHeader';\r\nimport { ExpenseFullModel, ExpenseType } from '../../models/expense';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { LabelService } from '../../services/label';\r\nimport { ExpenseService } from '../../services/expense';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { csvToExpenses } from '../../helpers/csvToExpenses';\r\n\r\nexport type ImportProps = {};\r\n\r\nconst defaultSeparator = ';';\r\n\r\nexport const ImportPage: React.FC<ImportProps> = React.memo((props: ImportProps) => {\r\n    const [t] = useTranslation();\r\n    const { groups, group: groupGlobal, labels } = useContext(globalContext);\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n\r\n    enum StatusType {\r\n        NOT_PROCESSED = 'to do',\r\n        PROCESSING = 'doing',\r\n        PROCESSED = 'done',\r\n        ERROR = 'error'\r\n    }\r\n\r\n    const [isLoading, setLoading] = React.useState(false);\r\n    const [group, setGroup] = React.useState(groupGlobal);\r\n    const [data, setData] = React.useState('');\r\n    const [expenses, setExpenses] = React.useState<ExpenseFullModel[]>([]);\r\n    const [status, setStatus] = React.useState<StatusType[]>([]);\r\n    const [separator, setSeparator] = React.useState<string>(defaultSeparator);\r\n    const [error, setError] = React.useState('');\r\n\r\n    const groupsOptions = React.useMemo(\r\n        () =>\r\n            groups.map(x => (\r\n                <option key={'GROUP_' + x.id} value={x.id}>\r\n                    {x.name}\r\n                </option>\r\n            )),\r\n        [groups]\r\n    );\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (!hasValue(separator) || isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }, [separator, isLoading]);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoading(true);\r\n        for (let index = 0; index < expenses.length; index++) {\r\n            const expense = expenses[index];\r\n\r\n            status[index] = StatusType.PROCESSING;\r\n            setStatus({ ...status });\r\n\r\n            // check if the label already exist\r\n            let label = labels.find(l => l.name.trim().toLowerCase() === expense.label.name.trim().toLowerCase());\r\n            if (!hasValue(label)) {\r\n                try {\r\n                    // create if not\r\n                    label = await new LabelService(config).add({ name: expense.label.name.trim(), groupId: group });\r\n                    labels.push(label);\r\n                } catch {\r\n                    status[index] = StatusType.ERROR;\r\n                    setStatus({ ...status });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            try {\r\n                await new ExpenseService(config).add({ ...expense, labelId: label?.id });\r\n            } catch {\r\n                status[index] = StatusType.ERROR;\r\n                setStatus({ ...status });\r\n                return;\r\n            }\r\n\r\n            status[index] = StatusType.PROCESSED;\r\n            setStatus({ ...status });\r\n        }\r\n        setLoading(false);\r\n    }, [group, labels, expenses, config, status, StatusType.ERROR, StatusType.PROCESSING, StatusType.PROCESSED]);\r\n\r\n    const handleOnChangeGroup = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setGroup(+event.target.value);\r\n    }, []);\r\n\r\n    const handleOnChangeSeparator = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSeparator(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnChangeData = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setData(event.target.value);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (!hasValue(separator)) {\r\n            setExpenses([]);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const tmpExpenses = csvToExpenses(group, data, '\\n', separator, t('EXPENSE.DATE_FORMAT'));\r\n            setStatus(tmpExpenses.map(_ => StatusType.NOT_PROCESSED));\r\n            setExpenses(tmpExpenses);\r\n        } catch {\r\n            setError('IMPORT.ERROR');\r\n            setExpenses([]);\r\n        }\r\n    }, [separator, data, group, t, StatusType.NOT_PROCESSED]);\r\n\r\n    const expensesRows = React.useMemo(() => {\r\n        return expenses.map((expense, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{index}</th>\r\n                    <td\r\n                        className={\r\n                            status[index] === StatusType.ERROR\r\n                                ? 'text-danger'\r\n                                : status[index] === StatusType.PROCESSED\r\n                                ? 'text-success'\r\n                                : ''\r\n                        }\r\n                    >\r\n                        {status[index].toString()}\r\n                    </td>\r\n                    <td>{expense.type === ExpenseType.INCOMING ? t('EXPENSE.INCOMING') : t('EXPENSE.OUTCOMING')}</td>\r\n                    <td>{expense.name}</td>\r\n                    <td>{expense.value.toFixed(2)}</td>\r\n                    <td>\r\n                        {isValid(expense.date)\r\n                            ? format(new Date(expense.date), t('IMPORT.TABLE.DATE_FORMAT'))\r\n                            : t('IMPORT.TABLE.INVALID_DATE')}\r\n                    </td>\r\n                    <td>{expense.label.name}</td>\r\n                    <td>{expense.comments}</td>\r\n                </tr>\r\n            );\r\n        });\r\n    }, [expenses, status, t, StatusType.ERROR, StatusType.PROCESSED]);\r\n\r\n    return (\r\n        <>\r\n            <ItemsHeaderComponent\r\n                title={t('IMPORT.TITLE')}\r\n                action={t('IMPORT.ACTION')}\r\n                onAction={handleOnAction}\r\n                disableAction={disabledAction}\r\n            />\r\n            <ErrorComponent message={error} />\r\n            <Form>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n                        <Form.Group>\r\n                            <Form.Label>{t('IMPORT.GROUP')}</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={group}\r\n                                onChange={handleOnChangeGroup}\r\n                                data-testid=\"import-group-field\"\r\n                            >\r\n                                {groupsOptions}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n                        <Form.Group>\r\n                            <Form.Label>{t('IMPORT.SEPARATOR')}</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={separator}\r\n                                onChange={handleOnChangeSeparator}\r\n                                data-testid=\"import-separator-field\"\r\n                            />\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-sm-12\">\r\n                        <Form.Group controlId=\"formImportData\">\r\n                            <Form.Label>{t('IMPORT.DATA')}</Form.Label>\r\n                            <Form.Text className=\"text-muted\">{t('IMPORT.DATA_TEXT')}</Form.Text>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={10}\r\n                                placeholder={t('IMPORT.DATA_PLACEHOLDER')}\r\n                                value={data}\r\n                                onChange={handleOnChangeData}\r\n                                data-testid=\"import-data-field\"\r\n                            />\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">{t('IMPORT.TABLE.NUMBER')}</th>\r\n                            <th scope=\"col\">{t('IMPORT.TABLE.STATUS')}</th>\r\n                            <th scope=\"col\">{t('IMPORT.TABLE.TYPE')}</th>\r\n                            <th scope=\"col\">{t('IMPORT.TABLE.NAME')}</th>\r\n                            <th scope=\"col\">{t('IMPORT.TABLE.VALUE')}</th>\r\n                            <th scope=\"col\">{t('IMPORT.TABLE.DATE')}</th>\r\n                            <th scope=\"col\">{t('IMPORT.TABLE.LABEL')}</th>\r\n                            <th scope=\"col\">{t('IMPORT.TABLE.COMMENTS')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{expensesRows}</tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n","import { parse } from 'date-fns';\r\nimport { ExpenseFullModel, ExpenseType } from '../models/expense';\r\n\r\nexport const csvToExpenses = (\r\n    group: number,\r\n    data: string,\r\n    splitByRow: string,\r\n    splitByCol: string,\r\n    dateFormat: string\r\n): ExpenseFullModel[] => {\r\n    let tmpExpenses: ExpenseFullModel[] = [];\r\n\r\n    try {\r\n        data.split(splitByRow).forEach(row => {\r\n            const col = row.split(splitByCol);\r\n\r\n            if (col.length < 5) {\r\n                return;\r\n            }\r\n\r\n            tmpExpenses.push({\r\n                id: 0,\r\n                type: +col[0] as ExpenseType,\r\n                name: col[1],\r\n                value: +col[2],\r\n                date: parse(col[3], dateFormat, new Date()),\r\n                label: {\r\n                    id: 0,\r\n                    name: col[4],\r\n                    groupId: group\r\n                },\r\n                groupId: group,\r\n                comments: col[5]\r\n            });\r\n        });\r\n    } catch {\r\n        return [];\r\n    }\r\n\r\n    return tmpExpenses;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport { ConfigManager } from '../configurations/configManager';\r\nimport { ConfigModel } from '../models/config';\r\nimport { AuthPage } from './auth/auth';\r\nimport { ExpensePage } from './expense/expense';\r\nimport { GroupPage } from './group/group';\r\nimport { LabelPage } from './label/label';\r\nimport { Routes } from './routes';\r\nimport { SettingsPage } from './settings/settings';\r\n\r\nimport { userContext } from '../contexts/user';\r\nimport { PrivateRoute } from '../helpers/privateRouter';\r\nimport { GroupModel } from '../models/group';\r\nimport { GroupService } from '../services/group';\r\nimport { ExpenseService } from '../services/expense';\r\nimport { globalContext } from '../contexts/global';\r\nimport { SearchModel } from '../models/search';\r\nimport { hasValue } from '../helpers/util';\r\nimport { ImportPage } from './import/import';\r\nimport { LabelModel } from '../models/label';\r\nimport { LabelService } from '../services/label';\r\n\r\nexport type MainProps = {};\r\n\r\nexport const MainPage: React.FC<MainProps> = React.memo((_props: MainProps) => {\r\n    const { isReady } = useContext(userContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n\r\n    const [isLoadingGroups, setLoadingGroups] = React.useState<boolean>(true);\r\n    const [isLoadingLabels, setLoadingLabels] = React.useState<boolean>(true);\r\n    const [isLoadingYears, setLoadingYears] = React.useState<boolean>(true);\r\n    const [isSelectingGroup, setSelectingGroup] = React.useState<boolean>(true);\r\n    const [isSelectingMonth, setSelectingMonth] = React.useState<boolean>(true);\r\n    const [isSelectingYear, setSelectingYear] = React.useState<boolean>(true);\r\n    const [isPushing, setPushing] = React.useState<boolean>(true);\r\n    const isLoading = React.useMemo(\r\n        () =>\r\n            isLoadingGroups ||\r\n            isLoadingLabels ||\r\n            isLoadingYears ||\r\n            isSelectingGroup ||\r\n            isSelectingMonth ||\r\n            isSelectingYear ||\r\n            isPushing,\r\n        [\r\n            isLoadingGroups,\r\n            isLoadingLabels,\r\n            isLoadingYears,\r\n            isSelectingGroup,\r\n            isSelectingMonth,\r\n            isSelectingYear,\r\n            isPushing\r\n        ]\r\n    );\r\n\r\n    const [labels, setLabels] = React.useState<LabelModel[]>([]);\r\n    const [groups, setGroups] = React.useState<GroupModel[]>([]);\r\n    const [years, setYears] = React.useState<number[]>([]);\r\n\r\n    const [loadGroups, setLoadGroups] = React.useState<boolean>(true);\r\n    const [loadLabels, setLoadLabels] = React.useState<boolean>(true);\r\n\r\n    const [group, setGroup] = React.useState<GroupModel>();\r\n    const [month, setMonth] = React.useState<number>();\r\n    const [year, setYear] = React.useState<number>();\r\n\r\n    const searchParams = React.useMemo(() => {\r\n        const jsonString = JSON.stringify(queryString.parse(location.search));\r\n        return JSON.parse(jsonString) as SearchModel;\r\n    }, [location]);\r\n\r\n    // #region load groups\r\n    React.useEffect(() => {\r\n        if (!loadGroups) {\r\n            return;\r\n        }\r\n\r\n        const runAsync = async () => {\r\n            let results: GroupModel[] = [];\r\n\r\n            if (!isReady) {\r\n                setGroups(results);\r\n                return;\r\n            }\r\n\r\n            setLoadingGroups(true);\r\n            try {\r\n                results = await new GroupService(config).getAll();\r\n            } catch {\r\n                results = [];\r\n            }\r\n\r\n            console.log('load Groups', results);\r\n            setGroups(results);\r\n            setLoadingGroups(false);\r\n            setLoadGroups(!loadGroups);\r\n        };\r\n        runAsync();\r\n    }, [isReady, config, loadGroups]);\r\n    // #endregion\r\n\r\n    // #region select group\r\n    React.useEffect(() => {\r\n        if (!isReady || !hasValue(groups)) {\r\n            setGroup(undefined);\r\n            return;\r\n        }\r\n\r\n        setSelectingGroup(true);\r\n\r\n        let selected: GroupModel | undefined;\r\n        const lastGroup = localStorage.getItem('group') as string;\r\n        if (hasValue(searchParams.group) && groups.some(x => x.id === +searchParams.group)) {\r\n            selected = groups.find(x => x.id === +searchParams.group) as GroupModel;\r\n        } else if (hasValue(lastGroup) && groups.some(x => x.id === +lastGroup)) {\r\n            selected = groups.find(x => x.id === +lastGroup) as GroupModel;\r\n        } else if (hasValue(groups)) {\r\n            selected = groups[0];\r\n        } else {\r\n            // groupResults = {} as Partial<GroupModel>;\r\n            // show error - does not have groups loaded\r\n            // setLoading(false);\r\n            // return undefined;\r\n        }\r\n\r\n        console.log('setGroup', selected, searchParams.group);\r\n        setGroup(selected);\r\n        if (selected) {\r\n            localStorage.setItem('group', selected.id.toString());\r\n        }\r\n        setSelectingGroup(false);\r\n    }, [groups, isReady, searchParams.group]);\r\n    // #endregion\r\n\r\n    // #region load labels\r\n    React.useEffect(() => {\r\n        if (!loadLabels) {\r\n            return;\r\n        }\r\n\r\n        const runAsync = async () => {\r\n            let results: LabelModel[] = [];\r\n\r\n            if (!isReady || !hasValue(group)) {\r\n                setLabels(results);\r\n                return;\r\n            }\r\n\r\n            setLoadingLabels(true);\r\n\r\n            try {\r\n                results = await new LabelService(config).getAll(group?.id ?? 0);\r\n            } catch {\r\n                results = [];\r\n            }\r\n\r\n            console.log('load Labels', results);\r\n            setLabels(results);\r\n            setLoadingLabels(false);\r\n            setLoadLabels(!loadLabels);\r\n        };\r\n        runAsync();\r\n    }, [isReady, config, group, loadLabels]);\r\n    // #endregion\r\n\r\n    // #region load years\r\n    React.useEffect(() => {\r\n        const runAsync = async () => {\r\n            let results: number[] = [];\r\n\r\n            if (!isReady || !hasValue(group)) {\r\n                setYears(results);\r\n                return;\r\n            }\r\n\r\n            setLoadingYears(true);\r\n            try {\r\n                results = await new ExpenseService(config).getYears(group?.id ?? 0);\r\n            } catch {\r\n                results = [];\r\n            }\r\n\r\n            if (!hasValue(results)) {\r\n                results = [new Date().getFullYear()];\r\n            }\r\n\r\n            console.log('load Years', results, group);\r\n            setYears(results);\r\n            setLoadingYears(false);\r\n        };\r\n        runAsync();\r\n    }, [isReady, config, group]);\r\n    // #endregion\r\n\r\n    // #region select year\r\n    React.useEffect(() => {\r\n        if (!isReady || !hasValue(years)) {\r\n            return;\r\n        }\r\n\r\n        setSelectingYear(true);\r\n\r\n        let selected = new Date().getFullYear();\r\n\r\n        const lastYear = localStorage.getItem('year') as string;\r\n        if (hasValue(searchParams.year) && years.some(x => x === +searchParams.year)) {\r\n            selected = +searchParams.year;\r\n        } else if (hasValue(lastYear) && years.some(x => x === +lastYear)) {\r\n            selected = +lastYear;\r\n        }\r\n\r\n        console.log('setYear', selected, +searchParams.year);\r\n        setYear(selected);\r\n        localStorage.setItem('year', selected.toString());\r\n        setSelectingYear(false);\r\n    }, [years, isReady, searchParams.year]);\r\n    // #endregion\r\n\r\n    // #region select month\r\n    React.useEffect(() => {\r\n        if (!isReady) {\r\n            return;\r\n        }\r\n\r\n        setSelectingMonth(true);\r\n\r\n        let selected = new Date().getMonth();\r\n        const lastMonth = localStorage.getItem('month') as string;\r\n        if (hasValue(searchParams.month) && searchParams.month >= 1 && searchParams.month <= 12) {\r\n            selected = searchParams.month;\r\n        } else if (hasValue(lastMonth) && +lastMonth >= 1 && +lastMonth <= 12) {\r\n            selected = +lastMonth;\r\n        }\r\n\r\n        console.log('setMonth', selected, searchParams.month);\r\n        setMonth(selected);\r\n        localStorage.setItem('month', selected.toString());\r\n        setSelectingMonth(false);\r\n    }, [isReady, searchParams.month]);\r\n    // #endregion\r\n\r\n    // #region push changes\r\n    React.useEffect(() => {\r\n        if (\r\n            !isReady ||\r\n            !hasValue(group) ||\r\n            !hasValue(year) ||\r\n            !hasValue(month) ||\r\n            isSelectingGroup ||\r\n            isSelectingMonth ||\r\n            isSelectingYear\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setPushing(true);\r\n        console.log('history.push', group, month, year);\r\n        history.push({\r\n            pathname: location.pathname,\r\n            search: queryString.stringify({\r\n                group: group?.id,\r\n                month: month,\r\n                year: year\r\n            })\r\n        });\r\n        setPushing(false);\r\n    }, [isReady, group, month, year, history, location.pathname, isSelectingGroup, isSelectingMonth, isSelectingYear]);\r\n    // #endregion\r\n\r\n    const handleToReloadAll = React.useCallback(() => {\r\n        setLoadGroups(!loadGroups);\r\n        setLoadLabels(!loadLabels);\r\n    }, [loadGroups, loadLabels]);\r\n\r\n    const enablePrivateRoute = React.useMemo(() => {\r\n        return isReady;\r\n    }, [isReady]);\r\n\r\n    return (\r\n        <>\r\n            <globalContext.Provider\r\n                value={{\r\n                    isLoading: isLoading,\r\n\r\n                    labels: labels,\r\n\r\n                    groups: groups,\r\n                    years: years,\r\n\r\n                    group: group?.id ?? 0,\r\n                    month: month ?? 0,\r\n                    year: year ?? 0,\r\n\r\n                    reload: handleToReloadAll\r\n                }}\r\n            >\r\n                <Container className=\"mt-2\">\r\n                    <Switch>\r\n                        {enablePrivateRoute && (\r\n                            <PrivateRoute key={Routes.group} path={Routes.group} component={GroupPage} />\r\n                        )}\r\n                        {enablePrivateRoute && (\r\n                            <PrivateRoute key={Routes.label} path={Routes.label} component={LabelPage} />\r\n                        )}\r\n                        {enablePrivateRoute && (\r\n                            <PrivateRoute key={Routes.expense} path={Routes.expense} component={ExpensePage} />\r\n                        )}\r\n                        {enablePrivateRoute && (\r\n                            <PrivateRoute key={Routes.settings} path={Routes.settings} component={SettingsPage} />\r\n                        )}\r\n                        {enablePrivateRoute && (\r\n                            <PrivateRoute key={Routes.import} path={Routes.import} component={ImportPage} />\r\n                        )}\r\n\r\n                        <Route key={Routes.auth} path={Routes.auth} component={AuthPage} />\r\n                        <Route key={Routes.home} exact path={Routes.home}>\r\n                            <>\r\n                                <h3>HOME</h3>\r\n                                <h6>Build Version: {config.buildVersion}</h6>\r\n                            </>\r\n                        </Route>\r\n\r\n                        {isReady && (\r\n                            <Route key={'*'} path=\"*\">\r\n                                <h1> 404 </h1>\r\n                            </Route>\r\n                        )}\r\n                    </Switch>\r\n                </Container>\r\n            </globalContext.Provider>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\n\nimport { HeaderComponent } from '../components/header/header';\nimport { ConfigManager } from '../configurations/configManager';\nimport { ConfigModel } from '../models/config';\nimport { useAuth } from '../services/auth';\n\nimport { GlobalStyles } from './globalSyles';\nimport { darkTheme, lightTheme } from './theme';\nimport { hasValue } from '../helpers/util';\nimport { userContext } from '../contexts/user';\nimport { MainPage } from './main';\nimport { UserService } from '../services/user';\nimport { UserModel } from '../models/user';\n\nexport type AppProps = {};\n\nexport const AppPage: React.FC<AppProps> = React.memo((_props: AppProps) => {\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\n    const { user, initialising } = useAuth();\n    const [isDarkTheme, setDarkTheme] = React.useState<boolean>(\n        window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n    );\n    const [isReady, setReady] = React.useState<boolean>(false);\n\n    const handleDarkTheme = React.useCallback((dark: boolean) => {\n        setDarkTheme(dark);\n    }, []);\n\n    const theme = React.useMemo(() => {\n        let theme = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n        if (hasValue(localStorage.getItem('darkTheme'))) {\n            theme = JSON.parse(localStorage.getItem('darkTheme') as string);\n            setDarkTheme(theme);\n        }\n\n        if (hasValue(isDarkTheme) && isDarkTheme !== theme) {\n            theme = isDarkTheme as boolean;\n            setDarkTheme(theme);\n            localStorage.setItem('darkTheme', theme.toString());\n        }\n\n        return isDarkTheme ? darkTheme : lightTheme;\n    }, [isDarkTheme]);\n\n    React.useEffect(() => {\n        if (initialising || !user) {\n            return;\n        }\n\n        if (hasValue(user)) {\n            user.getIdTokenResult().then((value: any) => {\n                axios.defaults.headers.common.Authorization = value.token;\n                new UserService(config).addOrUpdate({\n                    id: user.uid,\n                    email: user.email,\n                    displayName: user.displayName,\n                    photoUrl: user.photoURL\n                } as UserModel);\n                setReady(true);\n            });\n        }\n    }, [user, initialising, config]);\n\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <>\n                    <GlobalStyles />\n                    <userContext.Provider\n                        value={{\n                            user: user,\n                            initialising: initialising,\n                            isReady: isReady,\n                            isDarkTheme: isDarkTheme ?? true,\n                            setDarkTheme: handleDarkTheme\n                        }}\n                    >\n                        {config.useHashRouter && (\n                            <HashRouter basename=\"/\">\n                                <HeaderComponent />\n                                <MainPage />\n                            </HashRouter>\n                        )}\n                        {!config.useHashRouter && (\n                            <BrowserRouter basename=\"/\">\n                                <HeaderComponent />\n                                <MainPage />\n                            </BrowserRouter>\n                        )}\n                    </userContext.Provider>\n                </>\n            </ThemeProvider>\n        </>\n    );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeApp } from 'firebase';\nimport * as serviceWorker from './serviceWorker';\n\nimport './configurations/i18n';\nimport './index.scss';\n\nimport { setConfiguration } from './configurations/configManager';\nimport { AppPage } from './pages/app';\nimport { getFirebaseConfig } from './configurations/firebase';\nimport { getValueOrDefault } from './helpers/util';\n\nconst config = setConfiguration();\n\n// initialize firebase\ninitializeApp({\n    ...getFirebaseConfig(\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_PROJECT, config.firebaseProject),\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_API_KEY, config.firebaseApiKey)\n    )\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppPage />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}