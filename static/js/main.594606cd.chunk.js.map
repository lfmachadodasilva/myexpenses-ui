{"version":3,"sources":["serviceWorker.ts","configurations/i18n.ts","models/config.ts","helpers/util.ts","configurations/configManager.ts","pages/routes.ts","contexts/user.ts","services/auth.ts","helpers/user.ts","components/header/header.tsx","pages/globalSyles.js","pages/theme.ts","pages/auth/auth.tsx","contexts/global.ts","components/search/search.tsx","services/base.ts","pages/expense/expense.tsx","mockData/user.ts","mockData/group.ts","services/group.ts","services/user.ts","pages/group/groupModal.tsx","pages/group/group.tsx","mockData/label.ts","services/label.ts","pages/label/label.tsx","configurations/firebase.ts","pages/settings/settings.tsx","helpers/privateRouter.tsx","mockData/expense.ts","services/expense.ts","pages/main.tsx","pages/app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","resources","en","translation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","ApiType","hasValue","value","undefined","Array","isArray","length","getValueOrDefault","values","find","x","ConfigModel","apiUrl","buildVersion","requestDelay","firebaseApiKey","firebaseProject","ConfigManager","configurationObject","config","get","configurationSettings","Object","assign","set","ApplicationConfiguration","freeze","Routes","home","auth","settings","group","label","expense","userContext","React","createContext","user","initialising","isReady","facebook","FacebookAuthProvider","loginWithFacebook","a","signInWithPopup","console","error","loginWithEmail","email","password","signInWithEmailAndPassword","getUserDisplayName","displayName","split","HeaderStyle","createGlobalStyle","HeaderComponent","memo","props","useContext","history","useHistory","useTranslation","t","handleRedirectTo","useCallback","path","search","push","pathname","handleLogout","firebase","signOut","setTimeout","authElement","useMemo","Nav","NavDropdown","title","id","Item","onClick","Divider","Link","Navbar","bg","variant","expand","Container","Brand","Toggle","aria-controls","Collapse","className","GlobalStyles","theme","body","text","toggleBorder","darkTheme","gradient","AuthStyle","AuthPage","useState","isLoading","setLoading","hasError","setError","setEmail","setPassword","handleFacebook","handleChangeEmail","target","handleChangePassword","handleLogin","Alert","key","Row","Col","xs","sm","Card","Title","Body","Button","Form","Group","controlId","Label","Control","type","placeholder","onChange","disabled","globalContext","groups","years","month","year","StatusCodes","SearchStyle","SearchComponent","global","months","setGroup","setMonth","setYear","isExpanded","setExpanded","useEffect","handleOnChangeGroup","event","handleOnChangeMonth","handleOnChangeYear","handleOnSearch","queryString","stringify","handleExpandCollapse","groupsOptions","map","name","monthsOptions","yearsOptions","headerElement","Spinner","animation","role","size","selectedGroup","g","Accordion","Header","as","eventKey","ExpensePage","usersMockData","groupsMockData","users","groupsFullMockData","handleError","response","status","OK","data","headers","Promise","reject","ServiceBase","resolve","_reject","_resolve","url","params","axios","baseURL","this","withCredentials","process","Accept","Authorization","defaults","common","post","put","delete","GroupService","baseUrl","FIREBASE","LOCAL_STORAGE","TOTAL_FAKE","resolveMockData","userId","obj","UserService","GroupModalPage","setName","selectedUsers","setSelectedUsers","setUsers","isLoadingUsers","setLoadingUsers","isLoadingAction","setLoadingAction","handleOnChangeName","handleOnChangeUsers","from","selectedOptions","option","handleOnAction","update","onAction","add","show","getAll","runAsync","disabledAction","usersOption","u","uid","Modal","onHide","centered","closeButton","data-testid","multiple","readOnly","Footer","GroupStyle","GroupPage","setGroups","showModal","setShowModal","refresh","setRefresh","handleOnAdd","handleOnEdit","handleOnDelete","remove","handleOnHide","getAllFull","setup","groupElements","index","DropdownButton","Dropdown","indexUser","labelsMockData","labelsFullMockData","LabelService","projectId","LabelStyle","LabelPage","labels","setLabels","log","labelElements","SettingsPage","PrivateRoute","Component","component","to","expensesMockData","yearsMockData","ExpenseService","MainPage","_props","useLocation","setYears","Date","getMonth","jsonString","JSON","parse","searchParams","groupsResults","lastGroup","localStorage","getItem","some","groupResults","setItem","toString","lastMonth","monthResults","yearsResults","getYears","lastYear","yearResults","getFullYear","Provider","exact","AppPage","isDarkMode","matchMedia","matches","currentUser","state","setState","unsubscribe","onAuthStateChanged","useAuth","setReady","getIdTokenResult","then","token","basename","overrides","configDefault","REACT_APP_API_URL","setConfiguration","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.594606cd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport translationEN from '../locales/en.json';\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: translationEN\r\n    }\r\n};\r\n\r\ni18n.use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: 'en',\r\n        fallbackLng: 'en', // use en if detected lng is not available\r\n\r\n        // keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","export enum ApiType {\r\n    FIREBASE = 'FIREBASE',\r\n    LOCAL_STORAGE = 'LOCAL_STORAGE',\r\n    TOTAL_FAKE = 'TOTAL_FAKE',\r\n    TEST_API = 'TEST_API'\r\n}\r\n\r\nexport class ConfigModel {\r\n    /** api backend url */\r\n    apiUrl: string = 'TOTAL_FAKE';\r\n\r\n    /** build version */\r\n    buildVersion: string = 'local';\r\n\r\n    /** request delay time */\r\n    requestDelay: number = 2000;\r\n\r\n    /** firebase */\r\n    firebaseApiKey: string = 'AIzaSyDMDE7eTQbjwkQglMJf5KnFtMr48-pAoVM';\r\n    firebaseProject: string = 'lfmachadodasilva-dev';\r\n}\r\n","export const hasValue = (value: any): boolean => {\r\n    if (value === null || value === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (typeof value === 'string' || Array.isArray(value)) {\r\n        return value.length > 0;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n// export const getValueOrDefault = (value?: string, defaultValue?: string) => {\r\n//     return hasValue(value) ? value : defaultValue;\r\n// };\r\n\r\nexport const getValueOrDefault = (...values: any[]) => {\r\n    return values.find(x => hasValue(x));\r\n};\r\n","import config, { Options } from 'react-global-configuration';\r\n\r\nimport { getValueOrDefault } from '../helpers/util';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport class ConfigManager {\r\n    static set = (configurationSettings: ConfigModel) => {\r\n        config.set({ ApplicationConfiguration: configurationSettings }, { freeze: false } as Options);\r\n    };\r\n\r\n    static get(): ConfigModel {\r\n        const configurationObject = config.get('ApplicationConfiguration');\r\n\r\n        const configurationSettings = new ConfigModel();\r\n        Object.assign(configurationSettings, configurationObject);\r\n\r\n        return configurationSettings;\r\n    }\r\n}\r\n\r\nexport const setConfiguration = (overrides: Partial<ConfigModel> = {}): ConfigModel => {\r\n    let configDefault: ConfigModel = new ConfigModel();\r\n\r\n    configDefault = {\r\n        ...configDefault,\r\n        buildVersion: getValueOrDefault(\r\n            process.env.REACT_APP_BUILD_VERSION,\r\n            overrides.buildVersion,\r\n            configDefault.buildVersion\r\n        ),\r\n        apiUrl: getValueOrDefault(process.env.REACT_APP_API_URL, overrides.apiUrl, configDefault.apiUrl)\r\n    };\r\n\r\n    ConfigManager.set({ ...configDefault, ...overrides });\r\n\r\n    return ConfigManager.get();\r\n};\r\n","export class Routes {\r\n    static home = '/';\r\n    static auth = '/auth';\r\n    static settings = '/settings';\r\n    static group = '/group';\r\n    static label = '/label';\r\n    static expense = '/expense';\r\n}\r\n","import React from 'react';\r\nimport { User } from 'firebase/app';\r\n\r\ninterface UserContext {\r\n    user: User | null;\r\n    initialising: boolean;\r\n    isReady: boolean;\r\n}\r\n\r\nexport const userContext = React.createContext<UserContext>({\r\n    user: null,\r\n    initialising: false,\r\n    isReady: false\r\n});\r\n","import React, { useState } from 'react';\r\nimport firebase, { auth } from 'firebase/app';\r\nimport 'firebase/auth'; // If using Firebase auth\r\n// import { UserService } from './userService';\r\n// import { ConfigurationManager } from '../configurations/configurationManager';\r\n// import { UserModel } from '../models/user';\r\n\r\nexport const useAuth = () => {\r\n    const [state, setState] = useState(() => {\r\n        const user = auth().currentUser;\r\n        return { initialising: !user, user };\r\n    });\r\n\r\n    const onChange = (user: firebase.User | null) => {\r\n        setState({ initialising: false, user });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // listen for auth state changes\r\n        const unsubscribe = auth().onAuthStateChanged(onChange);\r\n        // unsubscribe to the listener when unmounting\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return state;\r\n};\r\n\r\nconst facebook = new auth.FacebookAuthProvider();\r\n\r\nexport const loginWithFacebook = async () => {\r\n    try {\r\n        return await auth().signInWithPopup(facebook);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const loginWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().signInWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const createUserWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().createUserWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const resetPassword = async (email: string) => {\r\n    try {\r\n        return await auth().sendPasswordResetEmail(email);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\n// export const updateUser = async (user: firebase.User | null, displayName: string) => {\r\n//     try {\r\n//         await user?.updateProfile({ displayName: displayName });\r\n\r\n//         const config = ConfigurationManager.get();\r\n//         const userObj = user as firebase.User;\r\n\r\n//         return await new UserService(config).addOrUpdate({\r\n//             id: userObj.uid,\r\n//             email: userObj.email,\r\n//             displayName: userObj.displayName,\r\n//             photoUrl: userObj.photoURL\r\n//         } as UserModel);\r\n//     } catch (err) {\r\n//         console.error(err);\r\n//         throw err;\r\n//     }\r\n// };\r\n\r\nexport const signOut = () => firebase.auth().signOut();\r\n","import { UserModel } from '../models/user';\r\nimport { hasValue } from './util';\r\n\r\nexport const getUserDisplayName = (user: firebase.User | UserModel) => {\r\n    if (!hasValue(user)) {\r\n        return '';\r\n    }\r\n\r\n    if (hasValue(user.displayName)) {\r\n        return user.displayName?.split(' ')[0];\r\n    }\r\n\r\n    return user.email?.split('@')[0];\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Routes } from '../../pages/routes';\r\nimport { userContext } from '../../contexts/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { signOut } from '../../services/auth';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\n\r\nconst HeaderStyle = createGlobalStyle`\r\n        .navbar-brand {\r\n            cursor: pointer;\r\n        };\r\n    `;\r\n\r\nexport type HeaderProps = {};\r\n\r\nexport const HeaderComponent: React.FC<HeaderProps> = React.memo((props: HeaderProps) => {\r\n    const { user, initialising } = useContext(userContext);\r\n    const history = useHistory();\r\n    const [t] = useTranslation();\r\n\r\n    const handleRedirectTo = React.useCallback(\r\n        (path: string) => {\r\n            if (hasValue(history.location.search)) {\r\n                history.push({ pathname: path, search: history.location.search });\r\n            } else {\r\n                history.push(path);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    const handleLogout = React.useCallback(async () => {\r\n        await signOut();\r\n        setTimeout(() => history.push(Routes.home));\r\n    }, [history]);\r\n\r\n    const authElement = React.useMemo(() => {\r\n        if (hasValue(user)) {\r\n            const displayName = getUserDisplayName(user as firebase.User);\r\n            return (\r\n                <Nav>\r\n                    <NavDropdown title={displayName} id=\"collasible-nav-dropdown\">\r\n                        <NavDropdown.Item onClick={() => handleRedirectTo(Routes.settings)}>\r\n                            {t('HEADER.SETTINGS')}\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={handleLogout}>{t('HEADER.LOGOUT')}</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Nav>\r\n                <Nav.Link onClick={() => handleRedirectTo(Routes.auth)}>{t('HEADER.LOGIN')}</Nav.Link>\r\n            </Nav>\r\n        );\r\n    }, [user, handleRedirectTo, handleLogout, t]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderStyle />\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\r\n                <Container>\r\n                    <Navbar.Brand onClick={() => handleRedirectTo(Routes.home)}>{t('HEADER.TITLE')}</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"mr-auto \">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.group)}>{t('HEADER.GROUP')}</Nav.Link>\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.label)}>{t('HEADER.LABEL')}</Nav.Link>\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.expense)}>{t('HEADER.EXPENSE')}</Nav.Link>\r\n                        </Nav>\r\n                        {!initialising && authElement}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n});\r\n","import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .card {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .card-header {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n\r\n  .form-control {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .modal-content {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-header {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-body {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-footer {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .close {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n    text-shadow: none;\r\n  }\r\n  `","export const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#363537',\r\n    toggleBorder: '#595959',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)'\r\n};\r\n\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#646464',\r\n    gradient: 'linear-gradient(#091236, #1E215D)'\r\n};\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { Routes } from '../routes';\r\nimport { loginWithEmail, loginWithFacebook } from '../../services/auth';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst AuthStyle = createGlobalStyle`\r\n    `;\r\n\r\nexport type AuthProps = {};\r\n\r\nexport const AuthPage: React.FC<AuthProps> = React.memo((props: AuthProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [hasError, setError] = React.useState<boolean>(false);\r\n\r\n    const [email, setEmail] = React.useState<string>('');\r\n    const [password, setPassword] = React.useState<string>('');\r\n\r\n    const handleFacebook = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError(false);\r\n        try {\r\n            await loginWithFacebook();\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch (error) {\r\n            setError(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [history]);\r\n\r\n    const handleChangeEmail = React.useCallback((value: any) => {\r\n        setEmail(value.target.value);\r\n    }, []);\r\n    const handleChangePassword = React.useCallback((value: any) => {\r\n        setPassword(value.target.value);\r\n    }, []);\r\n\r\n    const handleLogin = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        try {\r\n            await loginWithEmail(email, password);\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch {\r\n            setError(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [email, password, history]);\r\n\r\n    return (\r\n        <>\r\n            <AuthStyle />\r\n            <Container className=\"p-4\">\r\n                {hasError && (\r\n                    <Alert key=\"AUTH.ERROR\" variant=\"danger\">\r\n                        {t('AUTH.ERROR')}\r\n                    </Alert>\r\n                )}\r\n\r\n                <Row>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_FACEBOOK')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Button onClick={handleFacebook}>{t('AUTH.FACEBOOK')}</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_EMAIL')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>{t('AUTH.EMAIL')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder={t('AUTH.EMAIL_PLACEHOLDER')}\r\n                                            onChange={handleChangeEmail}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>{t('AUTH.PASSWORD')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder={t('AUTH.PASSWORD_PLACEHOLDER')}\r\n                                            onChange={handleChangePassword}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Button variant=\"primary\" onClick={handleLogin} disabled={isLoading}>\r\n                                        {t('AUTH.LOGIN')}\r\n                                    </Button>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { GroupModel } from '../models/group';\r\n\r\ninterface GlobalContext {\r\n    isLoading: boolean;\r\n\r\n    groups: GroupModel[];\r\n    years: number[];\r\n\r\n    group: number;\r\n    month: number;\r\n    year: number;\r\n}\r\n\r\nexport const globalContext = React.createContext<GlobalContext>({\r\n    isLoading: true,\r\n\r\n    groups: [],\r\n    years: [],\r\n\r\n    group: 0,\r\n    month: 0,\r\n    year: 0\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { globalContext } from '../../contexts/global';\r\n\r\nexport type SearchProps = {};\r\n\r\nconst SearchStyle = createGlobalStyle`\r\n    .card-header {\r\n        padding: 5px;\r\n        border: none;\r\n    }\r\n    .card-body {\r\n        padding-top: 0;\r\n        padding-bottom: 0;\r\n        padding-right: 10px;\r\n        padding-left: 10px;\r\n    }\r\n    .search-header {\r\n        margin: 0px;\r\n    }\r\n    `;\r\n\r\nexport const SearchComponent: React.FC<SearchProps> = React.memo((props: SearchProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n    const global = useContext(globalContext);\r\n\r\n    const [months] = React.useState<number[]>([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\r\n    const [group, setGroup] = React.useState<number>(global.group);\r\n    const [month, setMonth] = React.useState<number>(global.month);\r\n    const [year, setYear] = React.useState<number>(global.year);\r\n    const [isExpanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n    React.useEffect(() => {\r\n        setGroup(global.group);\r\n        setMonth(global.month);\r\n        setYear(global.year);\r\n    }, [global.group, global.month, global.year]);\r\n\r\n    const handleOnChangeGroup = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setGroup(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeMonth = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setMonth(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeYear = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setYear(event.target.value as number);\r\n    }, []);\r\n\r\n    const handleOnSearch = React.useCallback(() => {\r\n        history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify({\r\n                group: group,\r\n                month: month,\r\n                year: year\r\n            })\r\n        });\r\n    }, [history, group, month, year]);\r\n\r\n    const handleExpandCollapse = React.useCallback(() => {\r\n        setExpanded(!isExpanded);\r\n    }, [isExpanded]);\r\n\r\n    const groupsOptions = React.useMemo(\r\n        () =>\r\n            global.groups.map(x => (\r\n                <option key={'GROUP_' + x.id} value={x.id}>\r\n                    {x.name}\r\n                </option>\r\n            )),\r\n        [global.groups]\r\n    );\r\n\r\n    const monthsOptions = React.useMemo(\r\n        () =>\r\n            months.map(x => (\r\n                <option key={'MONTH_' + x} value={x}>\r\n                    {t('MONTHS.' + x)}\r\n                </option>\r\n            )),\r\n        [months, t]\r\n    );\r\n\r\n    const yearsOptions = React.useMemo(\r\n        () =>\r\n            global.years.map(x => (\r\n                <option key={'YEAR_' + x} value={x}>\r\n                    {x}\r\n                </option>\r\n            )),\r\n        [global.years]\r\n    );\r\n\r\n    const headerElement = React.useMemo(() => {\r\n        if (global.isLoading) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (isExpanded) {\r\n            return (\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <strong>\r\n                        <p className=\"search-header\">{t('SEARCH.HEADER')}</p>\r\n                    </strong>\r\n                    <Button onClick={handleOnSearch} size=\"sm\">\r\n                        {t('SEARCH.ACTION')}\r\n                    </Button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const selectedGroup = global.groups.find(g => g.id === group);\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-around\">\r\n                <p className=\"search-header\">{selectedGroup?.name}</p>\r\n                <p className=\"search-header\">{t('MONTHS.' + month)}</p>\r\n                <p className=\"search-header\">{year}</p>\r\n            </div>\r\n        );\r\n    }, [isExpanded, global.isLoading, global.groups, group, month, year, t, handleOnSearch]);\r\n\r\n    return (\r\n        <>\r\n            <SearchStyle />\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={handleExpandCollapse}>\r\n                            {headerElement}\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs={12} sm={5}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.GROUP')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={group}\r\n                                            onChange={handleOnChangeGroup}\r\n                                        >\r\n                                            {groupsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.MONTH')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={month}\r\n                                            onChange={handleOnChangeMonth}\r\n                                        >\r\n                                            {monthsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={3}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.YEAR')}</Form.Label>\r\n                                        <Form.Control as=\"select\" size=\"sm\" value={year} onChange={handleOnChangeYear}>\r\n                                            {yearsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <div className=\"d-flex justify-content-end\">\r\n                                <Button onClick={handleOnSearch} size=\"sm\">\r\n                                    Search\r\n                                </Button>\r\n                            </div> */}\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n            <br></br>\r\n        </>\r\n    );\r\n});\r\n","import axios, { AxiosError } from 'axios';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport enum StatusCodes {\r\n    OK = 200,\r\n    ERROR = 500\r\n}\r\n\r\nconst handleError = async (error: AxiosError) => {\r\n    if (error.response && error.response.status >= StatusCodes.OK) {\r\n        if (process.env.NODE_ENV !== 'test') {\r\n            // avoid show this when is running test\r\n            console.error('Request Failed:', error.config);\r\n            console.error('Status:', error.response.status);\r\n            console.error('Data:', error.response.data);\r\n            console.error('Headers:', error.response.headers);\r\n        }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n};\r\n\r\nexport class ServiceBase {\r\n    constructor(protected config: ConfigModel) {}\r\n\r\n    protected async resolveMockData<T>(data: T): Promise<T> {\r\n        return new Promise((resolve, _reject) => {\r\n            setTimeout(() => {\r\n                resolve(data);\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async rejectMockData<T>(): Promise<T> {\r\n        return new Promise((_resolve, reject) => {\r\n            setTimeout(() => {\r\n                reject();\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async get<TResponse>(url: string, params?: { [key: string]: any }): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.get(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async post<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.post(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async put<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.put(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async delete<TResponse>(url: string): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.delete(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                }\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { SearchComponent } from '../../components/search/search';\r\n\r\nexport type ExpenseProps = {};\r\n\r\nexport const ExpensePage: React.FC<ExpenseProps> = React.memo((props: ExpenseProps) => {\r\n    return (\r\n        <>\r\n            Expense page\r\n            <br></br>\r\n            <SearchComponent />\r\n        </>\r\n    );\r\n});\r\n","import { UserModel } from '../models/user';\r\n\r\nexport const usersMockData: UserModel[] = [\r\n    { id: '1', displayName: 'User 1', email: 'user1@email.com' },\r\n    { id: '2', displayName: 'User 2', email: 'user2@email.com' },\r\n    { id: '3', displayName: 'User 3', email: 'user3@email.com' },\r\n    { id: '4', displayName: 'User 4', email: 'user4@email.com' },\r\n    { id: '5', displayName: 'User 5', email: 'user5@email.com' }\r\n];\r\n","import { GroupFullModel, GroupModel } from '../models/group';\r\nimport { usersMockData } from './user';\r\n\r\nexport const groupsMockData: GroupModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData.map(x => x.id) },\r\n    { id: 2, name: 'Group 2', users: usersMockData.map(x => x.id) },\r\n    { id: 3, name: 'Group 3', users: usersMockData.map(x => x.id) },\r\n    { id: 4, name: 'Group 4', users: usersMockData.map(x => x.id) }\r\n];\r\n\r\nexport const groupsFullMockData: GroupFullModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData },\r\n    { id: 2, name: 'Group 2', users: usersMockData },\r\n    { id: 3, name: 'Group 3', users: usersMockData },\r\n    { id: 4, name: 'Group 4', users: usersMockData }\r\n];\r\n","import { groupsFullMockData, groupsMockData } from '../mockData/group';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { GroupFullModel, GroupModel } from '../models/group';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class GroupService extends ServiceBase {\r\n    private baseUrl = '/api/group';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(user: string): Promise<GroupFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsFullMockData);\r\n            //return this.rejectMockData();\r\n        }\r\n        return await this.get<GroupFullModel[]>(this.baseUrl + '/full', { user: user });\r\n    }\r\n\r\n    async getAll(userId: string): Promise<GroupModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData);\r\n        }\r\n        return await this.get<GroupModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<GroupModel>): Promise<GroupModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData[0]);\r\n        }\r\n        return await this.post<GroupModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: GroupModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import { usersMockData } from '../mockData/user';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { UserModel } from '../models/user';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class UserService extends ServiceBase {\r\n    private baseUrl = '/api/user';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAll(): Promise<UserModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(usersMockData);\r\n        }\r\n        return await this.get<UserModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<UserModel>): Promise<UserModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(usersMockData[0]);\r\n        }\r\n        return await this.post<UserModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: UserModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: string): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { UserService } from '../../services/user';\r\nimport { UserModel } from '../../models/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\n\r\nexport type GroupModalProps = {\r\n    show: boolean;\r\n    group?: GroupFullModel;\r\n    onHide: () => void;\r\n    onAction: () => void;\r\n};\r\n\r\nexport const GroupModalPage: React.FC<GroupModalProps> = React.memo((props: GroupModalProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { user } = useContext(userContext);\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [name, setName] = React.useState<string>('');\r\n    const [selectedUsers, setSelectedUsers] = React.useState<string[]>([]);\r\n    const [users, setUsers] = React.useState<UserModel[]>([]);\r\n    const [isLoadingUsers, setLoadingUsers] = React.useState(false);\r\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\r\n\r\n    const handleOnChangeName = React.useCallback(event => {\r\n        setName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnChangeUsers = React.useCallback(event => {\r\n        setSelectedUsers(Array.from(event.target.selectedOptions, (option: any) => option.value));\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoadingAction(true);\r\n\r\n        if (hasValue(props.group)) {\r\n            try {\r\n                await new GroupService(config).update({\r\n                    id: props.group?.id as number,\r\n                    name: name,\r\n                    users: selectedUsers\r\n                });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        } else {\r\n            setLoadingAction(true);\r\n            try {\r\n                await new GroupService(config).add({ name: name, users: selectedUsers });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        }\r\n    }, [name, selectedUsers, t, config, props]);\r\n\r\n    React.useEffect(() => {\r\n        if (!props.show) {\r\n            return;\r\n        }\r\n\r\n        if (props.group) {\r\n            setName(props.group?.name);\r\n            setSelectedUsers(props.group?.users.map(x => x.id));\r\n        } else {\r\n            setName('');\r\n            setSelectedUsers([]);\r\n        }\r\n    }, [props]);\r\n\r\n    React.useEffect(() => {\r\n        const runAsync = async () => {\r\n            setLoadingUsers(true);\r\n            setError('');\r\n            try {\r\n                const data = await new UserService(config).getAll();\r\n                setUsers(data);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingUsers(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [t, config]);\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (isLoadingAction) {\r\n            return true;\r\n        }\r\n\r\n        if (hasValue(error)) {\r\n            return true;\r\n        }\r\n\r\n        if (!hasValue(name) || !hasValue(selectedUsers)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [error, name, selectedUsers, isLoadingAction]);\r\n\r\n    const usersOption = React.useMemo(\r\n        () =>\r\n            users.map(u =>\r\n                user?.uid === u.id ? (\r\n                    <option key={u.id} value={u.id}>\r\n                        {t('GROUP.YOU')}\r\n                    </option>\r\n                ) : (\r\n                    <option key={u.id} value={u.id}>{`${u.displayName} (${u.email})`}</option>\r\n                )\r\n            ),\r\n        [users, user, t]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_TITLE') : t('GROUP.MODAL.ADD_TITLE')}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {hasValue(error) && (\r\n                        <Alert key=\"GROUP.MODAL.ERROR\" variant=\"danger\">\r\n                            {error}\r\n                        </Alert>\r\n                    )}\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>{t('GROUP.MODAL.NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-name-field\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                placeholder={t('GROUP.MODAL.NAME_PLACEHOLDER')}\r\n                                onChange={handleOnChangeName}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                            <Form.Label>{t('GROUP.MODAL.USERS')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-users-field\"\r\n                                as=\"select\"\r\n                                multiple\r\n                                value={selectedUsers}\r\n                                readOnly={isLoadingUsers && hasValue(error)}\r\n                                onChange={handleOnChangeUsers}\r\n                            >\r\n                                {usersOption}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_ACTION') : t('GROUP.MODAL.ADD_ACTION')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Card from 'react-bootstrap/Card';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { GroupModalPage } from './groupModal';\r\n\r\nconst GroupStyle = createGlobalStyle`\r\n    .card-body {\r\n        padding: 10px;\r\n    };\r\n    `;\r\n\r\nexport type GroupProps = {};\r\n\r\nexport const GroupPage: React.FC<GroupProps> = React.memo((props: GroupProps) => {\r\n    const [t] = useTranslation();\r\n    const { user } = useContext(userContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [group, setGroup] = React.useState<GroupFullModel>();\r\n    const [groups, setGroups] = React.useState<GroupFullModel[]>([]);\r\n    const [error, setError] = React.useState<string>('');\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setGroup(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback((group: GroupFullModel) => {\r\n        setGroup(group);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (group: GroupFullModel) => {\r\n            try {\r\n                await new GroupService(config).remove(group?.id as number);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            }\r\n        },\r\n        [config, refresh, t]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n\r\n    React.useEffect(() => {\r\n        const setup = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new GroupService(config).getAllFull(user?.uid ?? '');\r\n                setGroups(data);\r\n            } catch {\r\n                setGroups([]);\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        setup();\r\n    }, [config, user, refresh, t]);\r\n\r\n    const groupElements = React.useMemo(\r\n        () =>\r\n            groups.map((group, index) => (\r\n                <Card key={`GROUP_${index}`} className=\"mb-1\">\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                {group.name}\r\n                                <DropdownButton size=\"sm\" variant=\"secondary\" title=\"\" id={`group-menu-${group.id}`}>\r\n                                    <Dropdown.Item eventKey=\"1\" onClick={() => handleOnEdit(group)}>\r\n                                        {t('GROUP.EDIT')}\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item eventKey=\"2\" onClick={() => handleOnDelete(group)}>\r\n                                        {t('GROUP.DELETE')}\r\n                                    </Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </div>\r\n                        </Card.Title>\r\n                        <Card.Body>\r\n                            <div key={`GROUP_USERS_${index}`} className=\"d-flex flex-wrap justify-content-start\">\r\n                                {group.users.map((user, indexUser) => (\r\n                                    <small key={`GROUP_SMALL_${index}_${indexUser}`} className=\"mr-2\">\r\n                                        {getUserDisplayName(user)}\r\n                                    </small>\r\n                                ))}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n            )),\r\n        [groups, handleOnEdit, handleOnDelete, t]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <GroupStyle />\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n                <h4>{t('GROUP.TITLE')}</h4>\r\n                <Button onClick={handleOnAdd}>{t('GROUP.ADD')}</Button>\r\n            </div>\r\n            {hasValue(error) && (\r\n                <Alert key=\"GROUP.ERROR\" variant=\"danger\">\r\n                    {error}\r\n                </Alert>\r\n            )}\r\n            {isLoading && (\r\n                <div className=\"d-flex justify-content-center m-4\">\r\n                    <Spinner className=\"group-loading\" animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )}\r\n            {!isLoading && groupElements}\r\n            <GroupModalPage show={showModal} group={group} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import { LabelModel } from '../models/label';\r\n\r\nexport const labelsMockData: LabelModel[] = [\r\n    { id: 1, name: 'Label 1' },\r\n    { id: 2, name: 'Label 2' },\r\n    { id: 3, name: 'Label 3' },\r\n    { id: 4, name: 'Label 4' }\r\n];\r\n\r\nexport const labelsFullMockData: LabelModel[] = [\r\n    { id: 1, name: 'Label 1' },\r\n    { id: 2, name: 'Label 2' },\r\n    { id: 3, name: 'Label 3' },\r\n    { id: 4, name: 'Label 4' }\r\n];\r\n","import { labelsFullMockData, labelsMockData } from '../mockData/label';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { LabelFullModel, LabelModel } from '../models/label';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class LabelService extends ServiceBase {\r\n    private baseUrl = '/api/label';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(group: number, month: number, year: number): Promise<LabelFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsFullMockData);\r\n        }\r\n        return await this.get<LabelFullModel[]>(this.baseUrl + '/full', {\r\n            group: group,\r\n            month: month,\r\n            year: year\r\n        });\r\n    }\r\n\r\n    async getAll(group: number): Promise<LabelModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData);\r\n        }\r\n        return await this.get<LabelModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<LabelModel>): Promise<LabelModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData[0]);\r\n        }\r\n        return await this.post<LabelModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: LabelModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { SearchComponent } from '../../components/search/search';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { LabelFullModel } from '../../models/label';\r\nimport { LabelService } from '../../services/label';\r\nimport { hasValue } from '../../helpers/util';\r\n\r\nexport type LabelProps = {};\r\n\r\nconst LabelStyle = createGlobalStyle`\r\n    `;\r\n\r\nexport const LabelPage: React.FC<LabelProps> = React.memo((props: LabelProps) => {\r\n    const [t] = useTranslation();\r\n    const global = useContext(globalContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [labels, setLabels] = React.useState<LabelFullModel[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        if (global.isLoading) {\r\n            return;\r\n        }\r\n\r\n        console.log(global);\r\n\r\n        const runAsync = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new LabelService(config).getAllFull(global.group, global.month, global.year);\r\n                setLabels(data);\r\n            } catch {\r\n                setLabels([]);\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [global, config, t]);\r\n\r\n    const handleOnAdd = React.useCallback(() => {\r\n        // setGroup(undefined);\r\n        // setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback((label: LabelFullModel) => {\r\n        // setGroup(group);\r\n        // setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnDelete = React.useCallback((label: LabelFullModel) => {\r\n        // setGroup(group);\r\n        // setShowModal(true);\r\n    }, []);\r\n\r\n    const labelElements = React.useMemo(\r\n        () =>\r\n            labels.map((label, index) => (\r\n                <Card key={`LABEL_${index}`} className=\"mb-1\">\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                {label.name}\r\n                                <DropdownButton size=\"sm\" variant=\"secondary\" title=\"\" id={`group-menu-${label.id}`}>\r\n                                    <Dropdown.Item eventKey=\"1\" onClick={() => handleOnEdit(label)}>\r\n                                        {t('LABEL.EDIT')}\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item eventKey=\"2\" onClick={() => handleOnDelete(label)}>\r\n                                        {t('LABEL.DELETE')}\r\n                                    </Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </div>\r\n                        </Card.Title>\r\n                        <Card.Body></Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n            )),\r\n        [labels, handleOnEdit, handleOnDelete, t]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <LabelStyle />\r\n            <SearchComponent />\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n                <h4>{t('LABEL.TITLE')}</h4>\r\n                <Button onClick={handleOnAdd}>{t('LABEL.ADD')}</Button>\r\n            </div>\r\n            {hasValue(error) && (\r\n                <Alert key=\"LABEL.ERROR\" variant=\"danger\">\r\n                    {error}\r\n                </Alert>\r\n            )}\r\n            <div>{!isLoading && labelElements}</div>\r\n            {isLoading && (\r\n                <div className=\"text-center\">\r\n                    <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n});\r\n","export const getFirebaseConfig = (projectId: string, apiKey: string) => ({\r\n    apiKey: apiKey,\r\n    authDomain: `${projectId}.firebaseapp.com`,\r\n    databaseURL: `https://${projectId}.firebaseio.com`,\r\n    projectId: projectId,\r\n    storageBucket: projectId,\r\n    messagingSenderId: 'my-sender-id'\r\n});\r\n","import React from 'react';\r\n\r\nexport type SettingsProps = {};\r\n\r\nexport const SettingsPage: React.FC<SettingsProps> = React.memo((props: SettingsProps) => {\r\n    return <>Settings page</>;\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { userContext } from '../contexts/user';\r\n\r\ninterface PrivateRouteProps {\r\n    component: any;\r\n    path?: string;\r\n}\r\n\r\nexport const PrivateRoute = ({ component: Component, path, ...other }: PrivateRouteProps) => {\r\n    const { user } = useContext(userContext);\r\n    return user ? <Component /> : <Redirect to=\"/auth\" />;\r\n};\r\n","import { ExpenseModel } from '../models/expense';\r\n\r\nexport const expensesMockData: ExpenseModel[] = [\r\n    { id: 1, name: 'Expense 1' },\r\n    { id: 2, name: 'Expense 2' },\r\n    { id: 3, name: 'Expense 3' },\r\n    { id: 4, name: 'Expense 4' }\r\n];\r\n\r\nexport const yearsMockData: number[] = [2015, 2016, 2017, 2018, 2019, 2020];\r\n","import { expensesMockData, yearsMockData } from '../mockData/expense';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { ExpenseModel } from '../models/expense';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class ExpenseService extends ServiceBase {\r\n    private baseUrl = '/api/expense';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getYears(group: number): Promise<number[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(yearsMockData);\r\n        }\r\n        return await this.get<number[]>(this.baseUrl + '/years');\r\n    }\r\n\r\n    async getAll(): Promise<ExpenseModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData);\r\n        }\r\n        return await this.get<ExpenseModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<ExpenseModel>): Promise<ExpenseModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData[0]);\r\n        }\r\n        return await this.post<ExpenseModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: ExpenseModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport { ConfigManager } from '../configurations/configManager';\r\nimport { ConfigModel } from '../models/config';\r\nimport { AuthPage } from './auth/auth';\r\nimport { ExpensePage } from './expense/expense';\r\nimport { GroupPage } from './group/group';\r\nimport { LabelPage } from './label/label';\r\nimport { Routes } from './routes';\r\nimport { SettingsPage } from './settings/settings';\r\n\r\nimport { userContext } from '../contexts/user';\r\nimport { PrivateRoute } from '../helpers/privateRouter';\r\nimport { GroupModel } from '../models/group';\r\nimport { GroupService } from '../services/group';\r\nimport { ExpenseService } from '../services/expense';\r\nimport { globalContext } from '../contexts/global';\r\nimport { SearchModel } from '../models/search';\r\nimport { hasValue } from '../helpers/util';\r\n\r\nexport type MainProps = {};\r\n\r\nexport const MainPage: React.FC<MainProps> = React.memo((_props: MainProps) => {\r\n    const { user, isReady } = useContext(userContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n\r\n    const [isLoading, setLoading] = React.useState<boolean>(true);\r\n\r\n    const [groups, setGroups] = React.useState<GroupModel[]>([]);\r\n    const [years, setYears] = React.useState<number[]>([]);\r\n\r\n    const [group, setGroup] = React.useState<GroupModel>();\r\n    const [month, setMonth] = React.useState<number>(new Date().getMonth());\r\n    const [year, setYear] = React.useState<number>(0);\r\n\r\n    React.useEffect(() => {\r\n        if (!isReady) {\r\n            return;\r\n        }\r\n\r\n        const jsonString = JSON.stringify(queryString.parse(location.search));\r\n        const searchParams = JSON.parse(jsonString) as SearchModel;\r\n        setLoading(true);\r\n\r\n        const setup = async () => {\r\n            let groupsResults: GroupModel[];\r\n            let groupResults: GroupModel | undefined;\r\n            let monthResults: number;\r\n            let yearsResults: number[];\r\n            let yearResults: number;\r\n\r\n            if (groups.length > 0) {\r\n                groupsResults = groups;\r\n            } else {\r\n                try {\r\n                    groupsResults = await new GroupService(config).getAll(user?.uid ?? '');\r\n                } catch {\r\n                    groupsResults = [];\r\n                }\r\n\r\n                console.log('load again ', groupsResults);\r\n            }\r\n\r\n            const lastGroup = localStorage.getItem('group') as string;\r\n            setGroups(groupsResults);\r\n            if (hasValue(searchParams.group) && groupsResults.some(x => x.id === +searchParams.group)) {\r\n                groupResults = groupsResults.find(x => x.id === +searchParams.group) as GroupModel;\r\n            } else if (hasValue(lastGroup) && groupsResults.some(x => x.id === +lastGroup)) {\r\n                groupResults = groupsResults.find(x => x.id === +lastGroup) as GroupModel;\r\n            } else if (hasValue(groupsResults)) {\r\n                groupResults = groupsResults[0];\r\n            } else {\r\n                // groupResults = {} as Partial<GroupModel>;\r\n                // show error - does not have groups loaded\r\n            }\r\n\r\n            setGroup(groupResults);\r\n            localStorage.setItem('group', groupResults?.id.toString() as string);\r\n\r\n            const lastMonth = localStorage.getItem('month') as string;\r\n            if (hasValue(searchParams.month) && searchParams.month >= 1 && searchParams.month <= 12) {\r\n                monthResults = searchParams.month;\r\n            } else if (hasValue(lastMonth) && +lastMonth >= 1 && +lastMonth <= 12) {\r\n                monthResults = +lastMonth;\r\n            } else {\r\n                monthResults = new Date().getMonth();\r\n            }\r\n            setMonth(monthResults);\r\n            localStorage.setItem('month', monthResults.toString());\r\n\r\n            if (years.length > 0) {\r\n                yearsResults = years;\r\n            } else {\r\n                try {\r\n                    yearsResults = await new ExpenseService(config).getYears(groupResults?.id ?? 0);\r\n                } catch {\r\n                    yearsResults = [];\r\n                }\r\n            }\r\n\r\n            // TODO get years from expenses\r\n            const lastYear = localStorage.getItem('year') as string;\r\n            setYears(yearsResults);\r\n            if (hasValue(searchParams.year) && yearsResults.some(x => x === +searchParams.year)) {\r\n                yearResults = searchParams.year;\r\n            } else if (hasValue(lastYear) && yearsResults.some(x => x === +lastYear)) {\r\n                yearResults = +lastYear;\r\n            } else {\r\n                yearResults = new Date().getFullYear();\r\n            }\r\n            setYear(yearResults);\r\n            localStorage.setItem('year', yearResults.toString());\r\n\r\n            history.push({\r\n                pathname: location.pathname,\r\n                search: queryString.stringify({\r\n                    group: groupResults?.id,\r\n                    month: monthResults,\r\n                    year: yearResults\r\n                })\r\n            });\r\n\r\n            setLoading(false);\r\n        };\r\n        setup();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [config, history, location, isReady, user]);\r\n\r\n    return (\r\n        <>\r\n            <globalContext.Provider\r\n                value={{\r\n                    isLoading: isLoading,\r\n\r\n                    groups: groups,\r\n                    years: years,\r\n\r\n                    group: group?.id ?? 0,\r\n                    month: month,\r\n                    year: year\r\n                }}\r\n            >\r\n                <Container className=\"mt-2\">\r\n                    <Switch>\r\n                        {isReady && <PrivateRoute key={Routes.group} path={Routes.group} component={GroupPage} />}\r\n                        {isReady && <PrivateRoute key={Routes.label} path={Routes.label} component={LabelPage} />}\r\n                        {isReady && <PrivateRoute key={Routes.expense} path={Routes.expense} component={ExpensePage} />}\r\n                        <PrivateRoute key={Routes.settings} path={Routes.settings} component={SettingsPage} />\r\n                        <Route key={Routes.auth} path={Routes.auth} component={AuthPage} />\r\n                        <Route key={Routes.home} exact path={Routes.home}>\r\n                            <>\r\n                                <h3>HOME</h3>\r\n                                <h6>Build Version: {config.buildVersion}</h6>\r\n                            </>\r\n                        </Route>\r\n                        <Route key={'*'} path=\"*\">\r\n                            <h1> 404 </h1>\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n            </globalContext.Provider>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\n\nimport { HeaderComponent } from '../components/header/header';\nimport { ConfigManager } from '../configurations/configManager';\nimport { ConfigModel } from '../models/config';\nimport { useAuth } from '../services/auth';\n\nimport { GlobalStyles } from './globalSyles';\nimport { darkTheme } from './theme';\nimport { hasValue } from '../helpers/util';\nimport { userContext } from '../contexts/user';\nimport { MainPage } from './main';\n\nexport type AppProps = {};\n\nexport const AppPage: React.FC<AppProps> = React.memo((_props: AppProps) => {\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\n    const isDarkMode = React.useMemo(\n        () => window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches,\n        []\n    );\n    const { user, initialising } = useAuth();\n\n    const [isReady, setReady] = React.useState<boolean>(false);\n\n    React.useEffect(() => {\n        if (initialising || !user) {\n            return;\n        }\n\n        if (hasValue(user)) {\n            user.getIdTokenResult().then((value: any) => {\n                axios.defaults.headers.common.Authorization = value.token;\n                // new UserService(config).addOrUpdate({\n                //     id: user.uid,\n                //     email: user.email,\n                //     displayName: user.displayName,\n                //     photoUrl: user.photoURL\n                // } as UserModel);\n                setReady(true);\n            });\n        }\n    }, [user, initialising, config]);\n\n    return (\n        <>\n            <ThemeProvider theme={isDarkMode ? darkTheme : {}}>\n                <>\n                    <GlobalStyles />\n                    <userContext.Provider\n                        value={{\n                            user: user,\n                            initialising: initialising,\n                            isReady: isReady\n                        }}\n                    >\n                        <HashRouter basename=\"/\">\n                            <HeaderComponent />\n                            <MainPage />\n                        </HashRouter>\n                    </userContext.Provider>\n                </>\n            </ThemeProvider>\n        </>\n    );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeApp } from 'firebase';\nimport * as serviceWorker from './serviceWorker';\n\nimport './configurations/i18n';\nimport './index.scss';\n\nimport { setConfiguration } from './configurations/configManager';\nimport { AppPage } from './pages/app';\nimport { getFirebaseConfig } from './configurations/firebase';\nimport { getValueOrDefault } from './helpers/util';\n\nconst config = setConfiguration();\n\n// initialize firebase\ninitializeApp({\n    ...getFirebaseConfig(\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_PROJECT, config.firebaseProject),\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_API_KEY, config.firebaseApiKey)\n    )\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppPage />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}