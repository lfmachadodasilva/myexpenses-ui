{"version":3,"sources":["serviceWorker.ts","configurations/i18n.ts","models/config.ts","helpers/util.ts","configurations/configManager.ts","pages/routes.ts","contexts/user.ts","services/base.ts","mockData/user.ts","services/user.ts","services/auth.ts","helpers/user.ts","components/header/header.tsx","pages/globalSyles.js","pages/theme.ts","components/error/error.tsx","pages/auth/auth.tsx","components/itemsHeader/itemsHeader.tsx","components/loading/loading.tsx","contexts/global.ts","components/search/search.tsx","models/expense.ts","mockData/group.ts","mockData/label.ts","mockData/expense.ts","services/expense.ts","components/item/item.tsx","pages/expense/expenseItems.tsx","pages/expense/expenseSummary.tsx","services/label.ts","pages/expenseModal/expenseModal.tsx","pages/expense/expense.tsx","services/group.ts","pages/groupModal/groupModal.tsx","pages/group/group.tsx","pages/label/label.tsx","pages/labelModal/labelModal.tsx","configurations/firebase.ts","pages/settings/settings.tsx","helpers/privateRouter.tsx","pages/main.tsx","pages/app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","resources","en","translation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","ApiType","hasValue","value","undefined","Array","isArray","length","getValueOrDefault","values","find","x","ConfigModel","apiUrl","buildVersion","requestDelay","firebaseApiKey","firebaseProject","useHashRouter","ConfigManager","configurationObject","config","get","configurationSettings","Object","assign","set","ApplicationConfiguration","freeze","Routes","home","auth","settings","group","label","expense","StatusCodes","userContext","React","createContext","initialising","isReady","isDarkTheme","setDarkTheme","dark","usersMockData","id","displayName","email","handleError","error","a","response","status","OK","console","data","headers","Promise","reject","ServiceBase","resolve","_reject","setTimeout","_resolve","url","params","axios","baseURL","this","withCredentials","process","Accept","Authorization","defaults","common","post","put","delete","UserService","baseUrl","user","FIREBASE","LOCAL_STORAGE","TOTAL_FAKE","resolveMockData","facebook","FacebookAuthProvider","loginWithFacebook","signInWithPopup","loginWithEmail","password","signInWithEmailAndPassword","updateUser","updateProfile","addOrUpdate","uid","photoUrl","photoURL","getUserDisplayName","split","HeaderStyle","createGlobalStyle","HeaderComponent","memo","props","useContext","history","useHistory","useTranslation","t","useState","expanded","setExpand","handleToggle","useCallback","handleRedirectTo","path","search","push","pathname","handleLogout","firebase","signOut","authElement","useMemo","Nav","NavDropdown","title","Item","onClick","Divider","Link","Navbar","bg","variant","expand","onToggle","Container","Brand","Toggle","aria-controls","Collapse","className","GlobalStyles","theme","body","text","toggleBorder","lightTheme","gradient","darkTheme","ErrorComponent","message","role","AuthStyle","AuthPage","isLoading","setLoading","setError","setEmail","setPassword","handleFacebook","handleChangeEmail","target","handleChangePassword","handleLogin","Row","Col","xs","sm","Card","Title","Body","Button","Form","Group","controlId","Label","Control","type","placeholder","onChange","disabled","ItemsHeaderComponent","onAction","disableAction","action","LoadingComponent","children","globalContext","groups","years","month","year","ExpenseType","SearchStyle","SearchComponent","global","months","setGroup","setMonth","setYear","isExpanded","setExpanded","useEffect","handleOnChangeGroup","event","handleOnChangeMonth","handleOnChangeYear","handleOnSearch","queryString","stringify","handleExpandCollapse","groupsOptions","map","key","name","monthsOptions","yearsOptions","headerElement","Spinner","data-testid","animation","size","selectedGroup","g","Accordion","Header","as","eventKey","groupsMockData","users","groupsFullMockData","labelsMockData","groupId","labelsFullMockData","currValue","lastValue","avgValue","expensesMockData","OUTCOMING","date","Date","comments","labelId","INCOMING","expensesFullMockData","yearsMockData","ExpenseService","obj","ItemComponent","DropdownButton","Dropdown","onEdit","onDelete","ExpenseItemsPage","items","item","toFixed","format","ExpenseSummaryPage","incoming","outcoming","totalIncoming","setTotalIncoming","totalOutcoming","setTotalOutcoming","totalLeft","setTotalLeft","totalLeftPer","setTotalLeftPer","tmpTotalIncoming","reduce","sum","current","tmpTotalOutcoming","tmpTotalLeft","LabelService","ExpenseModalPage","setName","setValue","setDate","setLabel","labels","setLabels","isLoadingLabels","setLoadingLabels","setComments","isLoadingAction","setLoadingAction","handleOnChangeName","handleOnChangeValue","handleOnChangeDate","handleOnChangeLabel","handleOnChangeComments","handleOnAction","update","add","show","getAll","runAsync","disabledAction","labelOptions","l","Modal","onHide","centered","closeButton","rows","Footer","ExpenseStyle","ExpensePage","expenses","setExpenses","setExpense","showModal","setShowModal","refresh","setRefresh","getAllFull","handleOnAdd","handleOnEdit","handleOnDelete","remove","handleOnHide","incomingItems","filter","outcomingItems","Tabs","defaultActiveKey","Tab","GroupService","userId","GroupModalPage","selectedUsers","setSelectedUsers","setUsers","isLoadingUsers","setLoadingUsers","handleOnChangeUsers","from","selectedOptions","option","usersOption","u","multiple","readOnly","LabelGrapyType","GroupStyle","GroupPage","setGroups","setup","groupElements","index","indexUser","LabelModalPage","projectId","LabelStyle","LabelPage","_props","CURRENT_MONTH","graphType","setGrahType","handleOnGraphType","itemsElements","currValueClass","lastValueClass","graphElement","datasets","LAST_MONTH","borderWidth","options","plugins","colorschemes","scheme","width","height","ToggleButtonGroup","ToggleButton","AVERAGE","SettingsPage","setDisplayName","handleOnChangeDarkTheme","checked","handleOnChangeDisplayName","handleOnUpdate","Check","PrivateRoute","Component","component","to","MainPage","useLocation","setYears","getMonth","jsonString","JSON","parse","searchParams","groupsResults","log","lastGroup","localStorage","getItem","some","groupResults","setItem","toString","lastMonth","monthResults","yearsResults","getYears","lastYear","yearResults","getFullYear","Provider","exact","AppPage","currentUser","state","setState","unsubscribe","onAuthStateChanged","useAuth","matchMedia","matches","setReady","handleDarkTheme","getIdTokenResult","then","token","basename","overrides","configDefault","setConfiguration","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"w/EAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qBCbAC,EAAY,CACdC,GAAI,CACAC,Y,SAIRC,IAAKC,IAAIC,KACJC,KAAK,CACFN,YACAO,IAAK,KACLC,YAAa,KAIbC,cAAe,CACXC,aAAa,KAIVP,EAAf,E,OAAeA,ICxBHQ,E,kCCACC,EAAW,SAACC,GACrB,OAAc,OAAVA,QAA4BC,IAAVD,IAID,kBAAVA,IAAsBE,MAAMC,QAAQH,IACpCA,EAAMI,OAAS,IAUjBC,EAAoB,WAAuB,IAAD,uBAAlBC,EAAkB,yBAAlBA,EAAkB,gBACnD,OAAOA,EAAOC,MAAK,SAAAC,GAAC,OAAIT,EAASS,Q,SDjBzBV,K,oBAAAA,E,8BAAAA,E,wBAAAA,E,qBAAAA,M,KAOL,IAAMW,EAAb,sCAEIC,OAAiB,aAFrB,KAKIC,aAAuB,QAL3B,KAQIC,aAAuB,IAR3B,KAWIC,eAAyB,0CAX7B,KAYIC,gBAA0B,uBAZ9B,KAcIC,eAAyB,GEhBhBC,EAAb,mGAMQ,IAAMC,EAAsBC,IAAOC,IAAI,4BAEjCC,EAAwB,IAAIX,EAGlC,OAFAY,OAAOC,OAAOF,EAAuBH,GAE9BG,MAXf,KAAaJ,EACFO,IAAM,SAACH,GACVF,IAAOK,IAAI,CAAEC,yBAA0BJ,GAAyB,CAAEK,QAAQ,KAa3E,I,wHCpBMC,EAAb,kCAAaA,EACFC,KAAO,IADLD,EAEFE,KAAO,QAFLF,EAGFG,SAAW,YAHTH,EAIFI,MAAQ,SAJNJ,EAKFK,MAAQ,SALNL,EAMFM,QAAU,WCMd,ICTKC,EDiBCC,EAAcC,IAAMC,cARc,CAC3CC,cAAc,EACdC,SAAS,EAETC,aAAa,EACbC,aAAc,SAACC,O,0CEfNC,EAA6B,CACtC,CAAEC,GAAI,IAAKC,YAAa,SAAUC,MAAO,mBACzC,CAAEF,GAAI,IAAKC,YAAa,SAAUC,MAAO,mBACzC,CAAEF,GAAI,IAAKC,YAAa,SAAUC,MAAO,mBACzC,CAAEF,GAAI,IAAKC,YAAa,SAAUC,MAAO,mBACzC,CAAEF,GAAI,IAAKC,YAAa,SAAUC,MAAO,qB,SDJjCZ,O,aAAAA,I,oBAAAA,M,KAKZ,IAAMa,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACZD,EAAME,UAAYF,EAAME,SAASC,QAAUjB,EAAYkB,KAGnDC,QAAQL,MAAM,kBAAmBA,EAAM7B,QACvCkC,QAAQL,MAAM,UAAWA,EAAME,SAASC,QACxCE,QAAQL,MAAM,QAASA,EAAME,SAASI,MACtCD,QAAQL,MAAM,WAAYA,EAAME,SAASK,UAPjC,kBAWTC,QAAQC,OAAOT,IAXN,2CAAH,sDAcJU,EAAb,WACI,WAAsBvC,GAAsB,yBAAtBA,SAD1B,qGAGuCmC,GAHvC,qGAIe,IAAIE,SAAQ,SAACG,EAASC,GACzBC,YAAW,WACPF,EAAQL,KACT,EAAKnC,OAAON,kBAP3B,uRAYe,IAAI2C,SAAQ,SAACM,EAAUL,GAC1BI,YAAW,WACPJ,MACD,EAAKtC,OAAON,kBAf3B,oKAmBmCkD,EAAaC,GAnBhD,gGAqBmCC,IAAM7C,IAAI2C,EAAK,CAClCG,QAASC,KAAKhD,OAAOR,OACrByD,iBAAiBC,EACjBd,QAAS,CACLe,OAAQ,kCACRC,cAAe,UAAYN,IAAMO,SAASjB,QAAQkB,OAAOF,eAE7DP,WA5BhB,cAqBkBd,EArBlB,yBA8BmBA,EAASI,MA9B5B,yDAgCmBP,EAAY,EAAD,KAhC9B,sLAoCoCgB,EAAaC,EAAiCV,GApClF,gGAsCmCW,IAAMS,KAAKX,EAAKT,EAAM,CACzCY,QAASC,KAAKhD,OAAOR,OACrByD,iBAAiBC,EACjBd,QAAS,CACLe,OAAQ,kCACRC,cAAe,UAAYN,IAAMO,SAASjB,QAAQkB,OAAOF,eAE7DP,WA7ChB,cAsCkBd,EAtClB,yBA+CmBA,EAASI,MA/C5B,yDAiDmBP,EAAY,EAAD,KAjD9B,uLAqDmCgB,EAAaC,EAAiCV,GArDjF,gGAuDmCW,IAAMU,IAAIZ,EAAKT,EAAM,CACxCY,QAASC,KAAKhD,OAAOR,OACrByD,iBAAiBC,EACjBd,QAAS,CACLe,OAAQ,kCACRC,cAAe,UAAYN,IAAMO,SAASjB,QAAQkB,OAAOF,eAE7DP,WA9DhB,cAuDkBd,EAvDlB,yBAgEmBA,EAASI,MAhE5B,yDAkEmBP,EAAY,EAAD,KAlE9B,0LAsEsCgB,GAtEtC,gGAwEmCE,IAAMW,OAAOb,EAAK,CACrCG,QAASC,KAAKhD,OAAOR,OACrByD,iBAAiBC,EACjBd,QAAS,CACLe,OAAQ,kCACRC,cAAe,UAAYN,IAAMO,SAASjB,QAAQkB,OAAOF,iBA7E7E,cAwEkBrB,EAxElB,yBAgFmBA,EAASI,MAhF5B,yDAkFmBP,EAAY,EAAD,KAlF9B,uHEjBa8B,EAAb,kDAGI,WAAsB1D,GAAsB,IAAD,8BACvC,cAAMA,IADYA,SAAqB,EAFnC2D,QAAU,YAEyB,EAH/C,iGAOsBC,GAPtB,oEAQYZ,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAR3C,yCASmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cATlD,yCAUmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAVlD,yCAWmBf,KAAKgB,gBAA2BxC,EAAc,KAXjE,wBAaqBwB,KAAKO,KAAgB,YAAa,GAAIK,GAb3D,6RAiBYZ,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAjB3C,yCAkBmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cAlBlD,yCAmBmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAnBlD,yCAoBmBf,KAAKgB,gBAAgBxC,IApBxC,wBAsBqBwB,KAAK/C,IAAiB+C,KAAKW,SAtBhD,sNA2CiBlC,GA3CjB,oEA4CYuB,KAAKhD,OAAOR,SAAWZ,EAAQiF,SA5C3C,yCA6CmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cA7ClD,yCA8CmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WA9ClD,yCA+CmBf,KAAKgB,qBAAsBjF,IA/C9C,wBAiDqBiE,KAAKS,OAAaT,KAAKW,QAAU,IAAMlC,GAjD5D,sJAAiCc,GCyB3B0B,EAAW,IAAIvD,OAAKwD,qBAEbC,EAAiB,uCAAG,sBAAArC,EAAA,+EAEZpB,iBAAO0D,gBAAgBH,GAFX,8EAIzB/B,QAAQL,MAAR,MAJyB,8DAAH,qDASjBwC,EAAc,uCAAG,WAAO1C,EAAe2C,GAAtB,SAAAxC,EAAA,+EAEhBpB,iBAAO6D,2BAA2B5C,EAAO2C,GAFzB,4DAItBpC,QAAQL,MAAR,MAJsB,6DAAH,wDA2Bd2C,EAAU,uCAAG,WAAOxE,EAAqB4D,EAAqBlC,GAAjD,SAAAI,EAAA,sFAEZ8B,QAFY,IAEZA,OAFY,EAEZA,EAAMa,cAAc,CAAE/C,YAAaA,IAFvB,uBAIZ,IAAIgC,EAAY1D,GAAQ0E,YAAY,CACtCjD,GAAImC,EAAKe,IACThD,MAAOiC,EAAKjC,MACZD,YAAakC,EAAKlC,YAClBkD,SAAUhB,EAAKiB,WARD,6DAWlB3C,QAAQL,MAAR,MAXkB,8DAAH,0DCjEViD,EAAqB,SAAClB,GAAqC,IAAD,EAKnC,EAJhC,OAAK/E,EAAS+E,GAIV/E,EAAS+E,EAAKlC,aACd,UAAOkC,EAAKlC,mBAAZ,aAAO,EAAkBqD,MAAM,KAAK,GAGxC,UAAOnB,EAAKjC,aAAZ,aAAO,EAAYoD,MAAM,KAAK,GAPnB,I,8HCWf,IAAMC,EAAcC,YAAH,KAQJC,GAAyCjE,IAAMkE,MAAK,SAACC,GAAwB,IAAD,EACtDC,qBAAWrE,GAAlC4C,EAD6E,EAC7EA,KAAMzC,EADuE,EACvEA,aACRmE,EAAUC,cAFqE,EAGzEC,cAALC,EAH8E,sBAIvDxE,IAAMyE,UAAkB,GAJ+B,mBAI9EC,EAJ8E,KAIpEC,EAJoE,KAM/EC,EAAe5E,IAAM6E,aAAY,SAACH,GACpCC,EAAUD,KACX,IAEGI,EAAmB9E,IAAM6E,aAC3B,SAACE,GACGJ,GAAU,GACN/G,EAASyG,EAAQxH,SAASmI,QAC1BX,EAAQY,KAAK,CAAEC,SAAUH,EAAMC,OAAQX,EAAQxH,SAASmI,SAExDX,EAAQY,KAAKF,KAGrB,CAACV,IAGCc,EAAenF,IAAM6E,YAAN,sBAAkB,sBAAAhE,EAAA,sEFsCduE,IAAS3F,OAAO4F,UEtCF,OAEnC5D,YAAW,kBAAM4C,EAAQY,KAAK1F,EAAOC,SAFF,2CAGpC,CAAC6E,IAEEiB,EAActF,IAAMuF,SAAQ,WAC9B,GAAI3H,EAAS+E,GAAO,CAChB,IAAMlC,EAAcoD,EAAmBlB,GACvC,OACI,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaC,MAAOjF,EAAaD,GAAG,2BAChC,kBAACiF,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMd,EAAiBvF,EAAOG,YACpD8E,EAAE,oBAEP,kBAACiB,EAAA,EAAYI,QAAb,MACA,kBAACJ,EAAA,EAAYE,KAAb,CAAkBC,QAAST,GAAeX,EAAE,oBAM5D,OACI,kBAACgB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAIM,KAAL,CAAUF,QAAS,kBAAMd,EAAiBvF,EAAOE,QAAQ+E,EAAE,oBAGpE,CAAC7B,EAAMmC,EAAkBK,EAAcX,IAE1C,OACI,oCACI,kBAACT,EAAD,MACA,kBAACgC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,SAAUvB,EAAcF,SAAUA,GAC3E,kBAAC0B,EAAA,EAAD,KACI,kBAACL,EAAA,EAAOM,MAAR,CAAcT,QAAS,kBAAMd,EAAiBvF,EAAOC,QAAQgF,EAAE,iBAE/D,kBAACuB,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAE7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBhG,GAAG,wBAAwBiG,UAAU,YAClD,kBAACjB,EAAA,EAAD,CAAKiB,UAAU,WACX,kBAACjB,EAAA,EAAIM,KAAL,CAAUF,QAAS,kBAAMd,EAAiBvF,EAAOI,SAAS6E,EAAE,iBAC5D,kBAACgB,EAAA,EAAIM,KAAL,CAAUF,QAAS,kBAAMd,EAAiBvF,EAAOK,SAAS4E,EAAE,iBAC5D,kBAACgB,EAAA,EAAIM,KAAL,CAAUF,QAAS,kBAAMd,EAAiBvF,EAAOM,WAAW2E,EAAE,qBAEhEtE,GAAgBoF,S,w6BCxFnC,IAAMoB,GAAe1C,YAAH,MAEP,qBAAG2C,MAAkBC,QAC1B,qBAAGD,MAAkBE,QAIhB,qBAAGF,MAAkBC,QAC1B,qBAAGD,MAAkBE,QACf,qBAAGF,MAAkBG,gBAGtB,qBAAGH,MAAkBC,QAC1B,qBAAGD,MAAkBE,QACf,qBAAGF,MAAkBG,gBAIhB,qBAAGH,MAAkBC,QAChC,qBAAGD,MAAkBE,QAIV,qBAAGF,MAAkBC,QAC1B,qBAAGD,MAAkBG,gBAGhB,qBAAGH,MAAkBC,QAC1B,qBAAGD,MAAkBG,gBAGhB,qBAAGH,MAAkBC,QAC1B,qBAAGD,MAAkBG,gBAGhB,qBAAGH,MAAkBC,QAC1B,qBAAGD,MAAkBG,gBAGhB,qBAAGH,MAAkBC,QAChC,qBAAGD,MAAkBE,QACf,qBAAGF,MAAkBG,gBAKd,qBAAGH,MAAkBC,QAChC,qBAAGD,MAAkBE,QACd,qBAAGF,MAAkBG,gBCjD9BC,GAAa,CACtBH,KAAM,UACNC,KAAM,UACNC,aAAc,UACdE,SAAU,qCAGDC,GAAY,CACrBL,KAAM,UACNC,KAAM,UACNC,aAAc,UACdE,SAAU,qC,kECJDE,GAAuClH,IAAMkE,MAAK,SAACC,GAC5D,OAAKvG,EAASuG,EAAMgD,SAKhB,yBAAKV,UAAU,qBAAqBW,KAAK,SACpCjD,EAAMgD,SALJ,wC,uECOf,IAAME,GAAYrD,YAAH,MAIFsD,GAAgCtH,IAAMkE,MAAK,SAACC,GAAsB,IAAD,EAC9DI,cAALC,EADmE,oBAEpEH,EAAUC,cAF0D,EAI1CtE,IAAMyE,UAAkB,GAJkB,mBAInE8C,EAJmE,KAIxDC,EAJwD,OAKhDxH,IAAMyE,SAAiB,IALyB,mBAKnE7D,EALmE,KAK5D6G,EAL4D,OAOhDzH,IAAMyE,SAAiB,IAPyB,mBAOnE/D,EAPmE,KAO5DgH,EAP4D,OAQ1C1H,IAAMyE,SAAiB,IARmB,mBAQnEpB,EARmE,KAQzDsE,EARyD,KAUpEC,EAAiB5H,IAAM6E,YAAN,sBAAkB,sBAAAhE,EAAA,6DACrC2G,GAAW,GACXC,EAAS,IAF4B,kBAI3BvE,IAJ2B,OAKjCzB,YAAW,kBAAM4C,EAAQY,KAAK1F,EAAOC,SALJ,gDAOjCiI,EAASjD,EAAE,eAPsB,yBASjCgD,GAAW,GATsB,4EAWtC,CAACnD,EAASG,IAEPqD,EAAoB7H,IAAM6E,aAAY,SAAChH,GACzC6J,EAAS7J,EAAMiK,OAAOjK,SACvB,IACGkK,EAAuB/H,IAAM6E,aAAY,SAAChH,GAC5C8J,EAAY9J,EAAMiK,OAAOjK,SAC1B,IAEGmK,EAAchI,IAAM6E,YAAN,sBAAkB,sBAAAhE,EAAA,6DAClC2G,GAAW,GACXC,EAAS,IAFyB,kBAIxBrE,EAAe1C,EAAO2C,GAJE,OAK9B5B,YAAW,kBAAM4C,EAAQY,KAAK1F,EAAOC,SALP,gDAO9BiI,EAASjD,EAAE,eAPmB,yBAS9BgD,GAAW,GATmB,4EAWnC,CAAC9G,EAAO2C,EAAUgB,EAASG,IAE9B,OACI,oCACI,kBAAC6C,GAAD,MACA,kBAACjB,EAAA,EAAD,CAAWK,UAAU,OACjB,kBAACS,GAAD,CAAgBC,QAASvG,IACzB,kBAACqH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKzB,UAAU,MAAM0B,GAAI,GAAIC,GAAI,GAC7B,kBAACC,GAAA,EAAD,CAAM5B,UAAU,OACZ,kBAAC4B,GAAA,EAAKC,MAAN,KAAa9D,EAAE,qBACf,kBAAC6D,GAAA,EAAKE,KAAN,KACI,kBAACC,GAAA,EAAD,CAAQ5C,QAASgC,GAAiBpD,EAAE,qBAIhD,kBAAC0D,GAAA,EAAD,CAAKzB,UAAU,MAAM0B,GAAI,GAAIC,GAAI,GAC7B,kBAACC,GAAA,EAAD,CAAM5B,UAAU,OACZ,kBAAC4B,GAAA,EAAKC,MAAN,KAAa9D,EAAE,kBACf,kBAAC6D,GAAA,EAAKE,KAAN,KACI,kBAACE,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,eACf,kBAACiE,GAAA,EAAKI,QAAN,CACIC,KAAK,QACLC,YAAavE,EAAE,0BACfwE,SAAUnB,KAGlB,kBAACY,GAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,kBACf,kBAACiE,GAAA,EAAKI,QAAN,CACIC,KAAK,WACLC,YAAavE,EAAE,6BACfwE,SAAUjB,KAGlB,kBAACS,GAAA,EAAD,CAAQvC,QAAQ,UAAUL,QAASoC,EAAaiB,SAAU1B,GACrD/C,EAAE,yB,mBC1F9B0E,GAAmDlJ,IAAMkE,MAAK,SAACC,GAA6B,IAAD,EACpG,OACI,yBAAKsC,UAAU,uCACX,4BAAKtC,EAAMuB,OACX,4BACIoD,KAAK,SACLrC,UAAU,kBACVb,QAASzB,EAAMgF,SACfF,SAAQ,UAAE9E,EAAMiF,qBAAR,UAEPjF,EAAMkF,YCbVC,GAAoEtJ,IAAMkE,MACnF,SAACC,GACG,OAAIA,EAAMoD,UAEF,yBAAKd,UAAU,mBACX,yBAAKA,UAAU,iBAAiBW,KAAK,UACjC,0BAAMX,UAAU,WAAhB,gBAMT,oCAAGtC,EAAMoF,a,oBCOXC,GAAgBxJ,IAAMC,cAXgB,CAC/CsH,WAAW,EAEXkC,OAAQ,GACRC,MAAO,GAEP/J,MAAO,EACPgK,MAAO,EACPC,KAAM,O,kaCJV,IChBYC,GDgBNC,GAAc9F,YAAH,MAkBJ+F,GAAyC/J,IAAMkE,MAAK,SAACC,GAAwB,IAAD,EACzEI,cAALC,EAD8E,oBAE/EH,EAAUC,cACV0F,EAAS5F,qBAAWoF,IAH2D,EAKpExJ,IAAMyE,SAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAAvEwF,EAL8E,sBAM3DjK,IAAMyE,SAAiBuF,EAAOrK,OAN6B,mBAM9EA,EAN8E,KAMvEuK,EANuE,OAO3DlK,IAAMyE,SAAiBuF,EAAOL,OAP6B,mBAO9EA,EAP8E,KAOvEQ,EAPuE,OAQ7DnK,IAAMyE,SAAiBuF,EAAOJ,MAR+B,mBAQ9EA,EAR8E,KAQxEQ,EARwE,OASnDpK,IAAMyE,UAAkB,GAT2B,mBAS9E4F,EAT8E,KASlEC,EATkE,KAWrFtK,IAAMuK,WAAU,WACZL,EAASF,EAAOrK,OAChBwK,EAASH,EAAOL,OAChBS,EAAQJ,EAAOJ,QAChB,CAACI,EAAOrK,MAAOqK,EAAOL,MAAOK,EAAOJ,OAEvC,IAAMY,EAAsBxK,IAAM6E,aAAY,SAAC4F,GAC3CP,EAASO,EAAM3C,OAAOjK,SACvB,IACG6M,EAAsB1K,IAAM6E,aAAY,SAAC4F,GAC3CN,EAASM,EAAM3C,OAAOjK,SACvB,IACG8M,EAAqB3K,IAAM6E,aAAY,SAAC4F,GAC1CL,EAAQK,EAAM3C,OAAOjK,SACtB,IAEG+M,EAAiB5K,IAAM6E,aAAY,WACrCR,EAAQY,KAAK,CACTC,SAAUb,EAAQxH,SAASqI,SAC3BF,OAAQ6F,KAAYC,UAAU,CAC1BnL,MAAOA,EACPgK,MAAOA,EACPC,KAAMA,QAGf,CAACvF,EAAS1E,EAAOgK,EAAOC,IAErBmB,EAAuB/K,IAAM6E,aAAY,WAC3CyF,GAAaD,KACd,CAACA,IAEEW,EAAgBhL,IAAMuF,SACxB,kBACIyE,EAAOP,OAAOwB,KAAI,SAAA5M,GAAC,OACf,4BAAQ6M,IAAK,SAAW7M,EAAEmC,GAAI3C,MAAOQ,EAAEmC,IAClCnC,EAAE8M,WAGf,CAACnB,EAAOP,SAGN2B,EAAgBpL,IAAMuF,SACxB,kBACI0E,EAAOgB,KAAI,SAAA5M,GAAC,OACR,4BAAQ6M,IAAK,SAAW7M,EAAGR,MAAOQ,GAC7BmG,EAAE,UAAYnG,SAG3B,CAAC4L,EAAQzF,IAGP6G,EAAerL,IAAMuF,SACvB,kBACIyE,EAAON,MAAMuB,KAAI,SAAA5M,GAAC,OACd,4BAAQ6M,IAAK,QAAU7M,EAAGR,MAAOQ,GAC5BA,QAGb,CAAC2L,EAAON,QAGN4B,EAAgBtL,IAAMuF,SAAQ,WAChC,GAAIyE,EAAOzC,UACP,OACI,yBAAKd,UAAU,eACX,kBAAC8E,GAAA,EAAD,CAASC,cAAY,iBAAiBC,UAAU,SAASrE,KAAK,SAASsE,KAAK,MACxE,0BAAMjF,UAAU,WAAhB,gBAMhB,GAAI4D,EACA,OACI,gCACI,uBAAG5D,UAAU,iBAAiBjC,EAAE,mBAK5C,IAAMmH,EAAgB3B,EAAOP,OAAOrL,MAAK,SAAAwN,GAAC,OAAIA,EAAEpL,KAAOb,KAEvD,OACI,yBAAK8G,UAAU,iCACX,uBAAGA,UAAU,iBAAb,OAA8BkF,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAeR,MAC7C,uBAAG1E,UAAU,iBAAiBjC,EAAE,UAAYmF,IAC5C,uBAAGlD,UAAU,iBAAiBmD,MAGvC,CAACS,EAAYL,EAAOzC,UAAWyC,EAAOP,OAAQ9J,EAAOgK,EAAOC,EAAMpF,IAErE,OACI,yBAAKiC,UAAU,yBACX,kBAACqD,GAAD,MACA,kBAAC+B,GAAA,EAAD,KACI,kBAACxD,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKyD,OAAN,KACI,kBAACD,GAAA,EAAUvF,OAAX,CAAkByF,GAAI1D,KAAKyD,OAAQE,SAAS,IAAIpG,QAASmF,GACpDO,IAGT,kBAACO,GAAA,EAAUrF,SAAX,CAAoBwF,SAAS,KACzB,kBAAC3D,GAAA,EAAKE,KAAN,KACI,kBAACN,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACb,kBAACK,GAAA,EAAKC,MAAN,KACI,kBAACD,GAAA,EAAKG,MAAN,KAAapE,EAAE,iBACf,kBAACiE,GAAA,EAAKI,QAAN,CACIkD,GAAG,SACHL,KAAK,KACL7N,MAAO8B,EACPqJ,SAAUwB,GAETQ,KAIb,kBAAC9C,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACb,kBAACK,GAAA,EAAKC,MAAN,KACI,kBAACD,GAAA,EAAKG,MAAN,KAAapE,EAAE,iBACf,kBAACiE,GAAA,EAAKI,QAAN,CACIkD,GAAG,SACHL,KAAK,KACL7N,MAAO8L,EACPX,SAAU0B,GAETU,KAIb,kBAAClD,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACb,kBAACK,GAAA,EAAKC,MAAN,KACI,kBAACD,GAAA,EAAKG,MAAN,KAAapE,EAAE,gBACf,kBAACiE,GAAA,EAAKI,QAAN,CAAckD,GAAG,SAASL,KAAK,KAAK7N,MAAO+L,EAAMZ,SAAU2B,GACtDU,MAKjB,yBAAK5E,UAAU,8BACX,kBAAC+B,GAAA,EAAD,CAAQ/B,UAAU,OAAOb,QAASgF,EAAgBc,KAAK,MAAvD,oB,SCzLpB7B,O,uBAAAA,I,0BAAAA,Q,KCCL,IAAMoC,GAA+B,CACxC,CAAEzL,GAAI,EAAG2K,KAAM,UAAWe,MAAO3L,EAAc0K,KAAI,SAAA5M,GAAC,OAAIA,EAAEmC,OAC1D,CAAEA,GAAI,EAAG2K,KAAM,UAAWe,MAAO3L,EAAc0K,KAAI,SAAA5M,GAAC,OAAIA,EAAEmC,OAC1D,CAAEA,GAAI,EAAG2K,KAAM,UAAWe,MAAO3L,EAAc0K,KAAI,SAAA5M,GAAC,OAAIA,EAAEmC,OAC1D,CAAEA,GAAI,EAAG2K,KAAM,UAAWe,MAAO3L,EAAc0K,KAAI,SAAA5M,GAAC,OAAIA,EAAEmC,QAGjD2L,GAAuC,CAChD,CAAE3L,GAAI,EAAG2K,KAAM,UAAWe,MAAO3L,GACjC,CAAEC,GAAI,EAAG2K,KAAM,UAAWe,MAAO3L,GACjC,CAAEC,GAAI,EAAG2K,KAAM,UAAWe,MAAO3L,GACjC,CAAEC,GAAI,EAAG2K,KAAM,UAAWe,MAAO3L,ICZxB6L,GAA+B,CACxC,CAAE5L,GAAI,EAAG2K,KAAM,UAAWkB,QAAS,GACnC,CAAE7L,GAAI,EAAG2K,KAAM,UAAWkB,QAAS,GACnC,CAAE7L,GAAI,EAAG2K,KAAM,UAAWkB,QAAS,GACnC,CAAE7L,GAAI,EAAG2K,KAAM,UAAWkB,QAAS,IAG1BC,GAAuC,CAChD,CAAE9L,GAAI,EAAG2K,KAAM,UAAWkB,QAAS,EAAGE,UAAW,KAAMC,UAAW,EAAGC,SAAU,MAC/E,CAAEjM,GAAI,EAAG2K,KAAM,UAAWkB,QAAS,EAAGE,UAAW,KAAMC,UAAW,EAAGC,SAAU,MAC/E,CAAEjM,GAAI,EAAG2K,KAAM,UAAWkB,QAAS,EAAGE,UAAW,KAAMC,UAAW,EAAGC,SAAU,MAC/E,CAAEjM,GAAI,EAAG2K,KAAM,UAAWkB,QAAS,EAAGE,UAAW,KAAMC,UAAW,EAAGC,SAAU,OCTtEC,GAAmC,CAC5C,CACIlM,GAAI,EACJ2K,KAAM,YACNrC,KAAMe,GAAY8C,UAClB9O,MAAO,KACP+O,KAAM,IAAIC,KAAK,KAAM,EAAG,GACxBC,SAAU,aACVT,QAASJ,GAAe,GAAGzL,GAC3BuM,QAASX,GAAe,GAAG5L,IAE/B,CACIA,GAAI,EACJ2K,KAAM,YACNrC,KAAMe,GAAY8C,UAClB9O,MAAO,KACP+O,KAAM,IAAIC,KACVC,SAAU,aACVT,QAASJ,GAAe,GAAGzL,GAC3BuM,QAASX,GAAe,GAAG5L,IAE/B,CACIA,GAAI,EACJ2K,KAAM,YACNrC,KAAMe,GAAYmD,SAClBnP,MAAO,KACP+O,KAAM,IAAIC,KACVC,SAAU,aACVT,QAASJ,GAAe,GAAGzL,GAC3BuM,QAASX,GAAe,GAAG5L,IAE/B,CACIA,GAAI,EACJ2K,KAAM,YACNrC,KAAMe,GAAYmD,SAClBnP,MAAO,KACP+O,KAAM,IAAIC,KACVC,SAAU,aACVT,QAASJ,GAAe,GAAGzL,GAC3BuM,QAASX,GAAe,GAAG5L,KAItByM,GAA2C,CACpD,CACIzM,GAAI,EACJ2K,KAAM,YACNrC,KAAMe,GAAY8C,UAClB9O,MAAO,KACP+O,KAAM,IAAIC,KAAK,KAAM,EAAG,GACxBC,SAAU,aACVT,QAASJ,GAAe,GAAGzL,GAC3BZ,MAAOwM,GAAe,IAE1B,CACI5L,GAAI,EACJ2K,KAAM,YACNrC,KAAMe,GAAY8C,UAClB9O,MAAO,KACP+O,KAAM,IAAIC,KACVC,SAAU,aACVT,QAASJ,GAAe,GAAGzL,GAC3BZ,MAAOwM,GAAe,IAE1B,CACI5L,GAAI,EACJ2K,KAAM,YACNrC,KAAMe,GAAYmD,SAClBnP,MAAO,KACP+O,KAAM,IAAIC,KACVC,SAAU,aACVT,QAASJ,GAAe,GAAGzL,GAC3BZ,MAAOwM,GAAe,IAE1B,CACI5L,GAAI,EACJ2K,KAAM,YACNrC,KAAMe,GAAYmD,SAClBnP,MAAO,KACP+O,KAAM,IAAIC,KACVC,SAAU,aACVT,QAASJ,GAAe,GAAGzL,GAC3BZ,MAAOwM,GAAe,KAIjBc,GAA0B,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MCrFzDC,GAAb,kDAGI,WAAsBpO,GAAsB,IAAD,8BACvC,cAAMA,IADYA,SAAqB,EAFnC2D,QAAU,eAEyB,EAH/C,8FAOmB/C,GAPnB,oEAQYoC,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAR3C,yCASmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cATlD,yCAUmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAVlD,yCAWmBf,KAAKgB,gBAAgBmK,KAXxC,wBAaqBnL,KAAK/C,IAAc+C,KAAKW,QAAU,UAbvD,2NAgBqB/C,EAAegK,EAAeC,GAhBnD,oEAiBY7H,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAjB3C,yCAkBmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cAlBlD,yCAmBmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAnBlD,yCAoBmBf,KAAKgB,gBAAgBkK,KApBxC,wBAsBqBlL,KAAK/C,IAAwB+C,KAAKW,QAAU,QAAS,CAAE/C,MAAOA,EAAOgK,MAAOA,EAAOC,KAAMA,IAtB9G,2NAyBiBjK,GAzBjB,oEA0BYoC,KAAKhD,OAAOR,SAAWZ,EAAQiF,SA1B3C,yCA2BmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cA3BlD,yCA4BmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WA5BlD,yCA6BmBf,KAAKgB,gBAAgB2J,KA7BxC,wBA+BqB3K,KAAK/C,IAAoB+C,KAAKW,QAAS,CAAE/C,MAAOA,IA/BrE,oNAkCcyN,GAlCd,oEAmCYrL,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAnC3C,yCAoCmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cApClD,yCAqCmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WArClD,yCAsCmBf,KAAKgB,gBAAgB2J,GAAiB,KAtCzD,wBAwCqB3K,KAAKO,KAAmBP,KAAKW,QAAS,GAAI0K,GAxC/D,uNA2CiBA,GA3CjB,oEA4CYrL,KAAKhD,OAAOR,SAAWZ,EAAQiF,SA5C3C,yCA6CmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cA7ClD,yCA8CmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WA9ClD,yCA+CmBf,KAAKgB,qBAAsBjF,IA/C9C,wBAiDqBiE,KAAKQ,IAAUR,KAAKW,QAAS,GAAI0K,GAjDtD,uNAoDiB5M,GApDjB,oEAqDYuB,KAAKhD,OAAOR,SAAWZ,EAAQiF,SArD3C,yCAsDmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cAtDlD,yCAuDmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAvDlD,yCAwDmBf,KAAKgB,qBAAsBjF,IAxD9C,wBA0DqBiE,KAAKS,OAAaT,KAAKW,QAAU,IAAMlC,GA1D5D,sJAAoCc,G,6BCSvB+L,GAA8DrN,IAAMkE,MAC7E,SAACC,GAA+C,IAAD,EAC/BI,cAALC,EADoC,oBAG3C,OACI,yBAAKiC,UAAU,kBACX,kBAAC4B,GAAA,EAAD,CAAM6C,IAAG,UAAK/G,EAAM3D,GAAX,YAAiB2D,EAAMgH,MAAQ1E,UAAU,QAC9C,kBAAC4B,GAAA,EAAKC,MAAN,CAAY7B,UAAU,uBAClB,yBAAKA,UAAU,kCACVtC,EAAMgH,KACP,kBAACmC,GAAA,EAAD,CAAgB5B,KAAK,KAAKzF,QAAQ,YAAYP,MAAM,GAAGlF,GAAE,eAAU2D,EAAM3D,KACrE,kBAAC+M,GAAA,EAAS5H,KAAV,CAAeqG,SAAS,IAAIpG,QAAS,kBAAMzB,EAAMqJ,OAAOrJ,EAAM3D,MACzDgE,EAAE,eAEP,kBAAC+I,GAAA,EAAS1H,QAAV,MACA,kBAAC0H,GAAA,EAAS5H,KAAV,CAAeqG,SAAS,IAAIpG,QAAS,kBAAMzB,EAAMsJ,SAAStJ,EAAM3D,MAC3DgE,EAAE,oBAKnB,kBAAC6D,GAAA,EAAKE,KAAN,CAAW9B,UAAU,OAAOtC,EAAMoF,eCtBzCmE,GAAgD1N,IAAMkE,MAAK,SAACC,GAA8B,IAAD,EACtFI,cAALC,EAD2F,oBAGlG,OACI,oCACKL,EAAMwJ,MAAM1C,KAAI,SAAA2C,GAAI,OACjB,kBAACP,GAAD,CACInC,IAAK0C,EAAKpN,GACVA,GAAIoN,EAAKpN,GACT2K,KAAMyC,EAAKzC,KACXqC,OAAQ,kBAAMrJ,EAAMqJ,OAAOI,EAAKpN,KAChCiN,SAAU,kBAAMtJ,EAAMsJ,SAASG,EAAKpN,MAEpC,yBAAKiG,UAAU,kCACX,uBAAGA,UAAU,aACT,+BAAQjC,EAAE,kBACV,6BACCoJ,EAAK/P,MAAMgQ,QAAQ,IAExB,uBAAGpH,UAAU,aACT,+BAAQjC,EAAE,iBACV,6BACCsJ,aAAO,IAAIjB,KAAKe,EAAKhB,MAAOpI,EAAE,yBAEnC,uBAAGiC,UAAU,aACT,+BAAQjC,EAAE,kBACV,6BACCoJ,EAAKhO,MAAMuL,eC9B3B4C,GAAoD/N,IAAMkE,MAAK,SAACC,GAAgC,IAAD,EAC5FI,cAALC,EADiG,oBAGhGwJ,EAAwB7J,EAAxB6J,SAAUC,EAAc9J,EAAd8J,UAHsF,EAK9DjO,IAAMyE,SAAiB,GALuC,mBAKjGyJ,EALiG,KAKlFC,EALkF,OAM5DnO,IAAMyE,SAAiB,GANqC,mBAMjG2J,EANiG,KAMjFC,EANiF,OAOtErO,IAAMyE,SAAiB,GAP+C,mBAOjG6J,EAPiG,KAOtFC,EAPsF,OAQhEvO,IAAMyE,SAAiB,GARyC,mBAQjG+J,EARiG,KAQnFC,EARmF,KAuBxG,OAbAzO,IAAMuK,WAAU,WACZ,IAAMmE,EAAmBV,EAASW,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,EAAQhR,QAAO,GAC1EiR,EAAoBb,EAAUU,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,EAAQhR,QAAO,GAElFsQ,EAAiBO,GACjBL,EAAkBS,GAElB,IAAMC,EAAeL,EAAmBI,EAExCP,EAAaQ,GACbN,EAAiBM,EAAeL,EAAoB,OACrD,CAACV,EAAUC,IAGV,oCACI,yBAAKxH,UAAU,YACX,yBAAKA,UAAU,OACX,2BAAIjC,EAAE,4BAEV,yBAAKiC,UAAU,OAAOyH,EAAcL,QAAQ,KAEhD,yBAAKpH,UAAU,OACX,yBAAKA,UAAU,OACX,2BAAIjC,EAAE,6BAEV,yBAAKiC,UAAU,OAAO2H,EAAeP,QAAQ,KAEjD,yBAAKpH,UAAU,OACX,yBAAKA,UAAU,OACX,2BAAIjC,EAAE,wBAEV,yBAAKiC,UAAU,OAAf,UAAyB6H,EAAUT,QAAQ,GAA3C,cAAmDW,EAAaX,QAAQ,GAAxE,W,SC9CHmB,GAAb,kDAGI,WAAsBjQ,GAAsB,IAAD,8BACvC,cAAMA,IADYA,SAAqB,EAFnC2D,QAAU,aAEyB,EAH/C,gGAOqB/C,EAAegK,EAAeC,GAPnD,oEAQY7H,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAR3C,yCASmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cATlD,yCAUmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAVlD,yCAWmBf,KAAKgB,gBAAgBuJ,KAXxC,wBAaqBvK,KAAK/C,IAAsB+C,KAAKW,QAAU,QAAS,CAC5D/C,MAAOA,EACPgK,MAAOA,EACPC,KAAMA,IAhBlB,2NAoBiBjK,GApBjB,oEAqBYoC,KAAKhD,OAAOR,SAAWZ,EAAQiF,SArB3C,yCAsBmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cAtBlD,yCAuBmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAvBlD,yCAwBmBf,KAAKgB,gBAAgBqJ,KAxBxC,wBA0BqBrK,KAAK/C,IAAkB+C,KAAKW,QAAS,CAAE/C,MAAOA,IA1BnE,oNA6BcyN,GA7Bd,oEA8BYrL,KAAKhD,OAAOR,SAAWZ,EAAQiF,SA9B3C,yCA+BmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cA/BlD,yCAgCmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAhClD,yCAiCmBf,KAAKgB,gBAAgBqJ,GAAe,KAjCvD,wBAmCqBrK,KAAKO,KAAiBP,KAAKW,QAAS,GAAI0K,GAnC7D,uNAsCiBA,GAtCjB,oEAuCYrL,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAvC3C,yCAwCmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cAxClD,yCAyCmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAzClD,yCA0CmBf,KAAKgB,qBAAsBjF,IA1C9C,wBA4CqBiE,KAAKQ,IAAUR,KAAKW,QAAS,GAAI0K,GA5CtD,uNA+CiB5M,GA/CjB,oEAgDYuB,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAhD3C,yCAiDmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cAjDlD,yCAkDmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAlDlD,yCAmDmBf,KAAKgB,qBAAsBjF,IAnD9C,wBAqDqBiE,KAAKS,OAAaT,KAAKW,QAAU,IAAMlC,GArD5D,sJAAkCc,GCqBrB2N,GAAgDjP,IAAMkE,MAAK,SAACC,GAA8B,IAAD,EACtFI,cAALC,EAD2F,oBAG1F7E,EAAUyE,qBAAWoF,IAArB7J,MAH0F,EAKxEK,IAAMyE,SAAS,IALyD,mBAK3F7D,EAL2F,KAKpF6G,EALoF,OAMjFzH,IAAMyE,SAAsB5F,EAAcG,OAApDD,EAN2F,sBAO1EiB,IAAMyE,SAAiB,IAPmD,mBAO3F0G,EAP2F,KAOrF+D,EAPqF,OAQxElP,IAAMyE,WARkE,mBAQ3F5G,EAR2F,KAQpFsR,EARoF,OAS1EnP,IAAMyE,SAAe,IAAIoI,MATiD,mBAS3FD,EAT2F,KASrFwC,EATqF,OAUxEpP,IAAMyE,WAVkE,mBAU3F7E,EAV2F,KAUpFyP,EAVoF,OAWtErP,IAAMyE,SAAuB,IAXyC,mBAW3F6K,EAX2F,KAWnFC,EAXmF,OAYtDvP,IAAMyE,UAAkB,GAZ8B,mBAY3F+K,EAZ2F,KAY1EC,EAZ0E,OAalEzP,IAAMyE,SAAiB,IAb2C,mBAa3FqI,EAb2F,KAajF4C,EAbiF,OActD1P,IAAMyE,UAAS,GAduC,mBAc3FkL,EAd2F,KAc1EC,EAd0E,KAiB5FC,EAAqB7P,IAAM6E,aAAY,SAAA4F,GACzCyE,EAAQzE,EAAM3C,OAAOjK,SACtB,IAEGiS,EAAsB9P,IAAM6E,aAAY,SAAA4F,GAC1C0E,EAAS1E,EAAM3C,OAAOjK,SACvB,IAEGkS,EAAqB/P,IAAM6E,aAAY,SAAA4F,GACzC2E,EAAQ3E,EAAM3C,OAAOjK,SACtB,IAEGmS,GAAsBhQ,IAAM6E,aAAY,SAAA4F,GAC1C4E,EAAS5E,EAAM3C,OAAOjK,SACvB,IAEGoS,GAAyBjQ,IAAM6E,aAAY,SAAA4F,GAC7CiF,EAAYjF,EAAM3C,OAAOjK,SAC1B,IAEGqS,GAAiBlQ,IAAM6E,YAAN,sBAAkB,sBAAAhE,EAAA,yDACrC+O,GAAiB,IAEbhS,EAASuG,EAAMtE,SAHkB,0CAKvB,IAAIsN,GAAepO,GAAQoR,OAA3B,2BACEhM,EAAMtE,SADR,IAEFsL,KAAMA,EACNtN,MAAOA,EACP+O,KAAMA,EACNG,QAASnN,EACTkN,SAAUA,KAXe,OAa7B3I,EAAMgF,WAbuB,gDAe7B1B,EAASjD,EAAE,kBAfkB,yBAiB7BoL,GAAiB,GAjBY,oDAoBjCA,GAAiB,GApBgB,oBAsBvB,IAAIzC,GAAepO,GAAQqR,IAAI,CACjCjF,KAAMA,EACNtN,MAAOA,EACP+O,KAAMA,EACNG,QAASnN,EACTkN,SAAUA,EACVT,QAAS1M,IA5BgB,QA8B7BwE,EAAMgF,WA9BuB,mDAgC7B1B,EAASjD,EAAE,kBAhCkB,yBAkC7BoL,GAAiB,GAlCY,0FAqCtC,CAACzE,EAAMtN,EAAO+O,EAAMhN,EAAOkN,EAAUtI,EAAGzF,EAAQoF,EAAOxE,IAG1DK,IAAMuK,WAAU,WAKQ,IAAD,UAJdpG,EAAMkM,OAIPlM,EAAMtE,SACNqP,EAAO,UAAC/K,EAAMtE,eAAP,aAAC,EAAesL,MACvBgE,EAAQ,UAAChL,EAAMtE,eAAP,aAAC,EAAehC,OACxBuR,EAAO,UAACjL,EAAMtE,eAAP,aAAC,EAAe+M,MACvByC,EAAQ,UAAClL,EAAMtE,eAAP,aAAC,EAAeD,MAAMY,IAC9BkP,EAAW,UAACvL,EAAMtE,eAAP,aAAC,EAAeiN,YAE3BoC,EAAQ,IACRC,OAASrR,GACTsR,EAAQ,IAAIvC,MACZwC,EAASC,EAAOrR,OAAS,EAAIqR,EAAO,GAAG9O,QAAK1C,GAC5C4R,EAAY,QAEjB,CAACvL,EAAOmL,IAEXtP,IAAMuK,WAAU,YACE,uCAAG,4BAAA1J,EAAA,6DACb4O,GAAiB,GACjBhI,EAAS,IAFI,kBAIU,IAAIuH,GAAajQ,GAAQuR,OAAO3Q,GAJ1C,OAIHuB,EAJG,OAKTqO,EAAUrO,GALD,gDAOTuG,EAASjD,EAAE,kBAPF,yBASTiL,GAAiB,GATR,4EAAH,qDAYdc,KACD,CAAC/L,EAAGzF,EAAQY,IAEf,IAAM6Q,GAAiBxQ,IAAMuF,SAAQ,WACjC,UACIoK,GACAH,GACA5R,EAASgD,KACRhD,EAASuN,IACTvN,EAASC,IACTD,EAASgP,IACThP,EAASgC,MAMf,CAACgB,EAAOuK,EAAMtN,EAAO+O,EAAMhN,EAAO+P,EAAiBH,IAEhDiB,GAAezQ,IAAMuF,SACvB,kBACI+J,EAAOrE,KAAI,SAAAyF,GAAC,OACR,4BAAQxF,IAAKwF,EAAElQ,GAAI3C,MAAO6S,EAAElQ,IACvBkQ,EAAEvF,WAGf,CAACmE,IAGL,OACI,oCACI,kBAACqB,GAAA,EAAD,CAAON,KAAMlM,EAAMkM,KAAMO,OAAQzM,EAAMyM,OAAQlF,KAAK,KAAKmF,UAAQ,GAC7D,kBAACF,GAAA,EAAM7E,OAAP,CAAcgF,aAAW,GACrB,kBAACH,GAAA,EAAMrI,MAAP,KACK1K,EAASuG,EAAMtE,SAAW2E,EAAE,4BAA8BA,EAAE,6BAGrE,kBAACmM,GAAA,EAAMpI,KAAP,KACI,kBAACrB,GAAD,CAAgBC,QAASvG,IACzB,kBAAC6H,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,YAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,uBACf,kBAACiE,GAAA,EAAKI,QAAN,CACI2C,cAAY,qBACZ1C,KAAK,OACLjL,MAAOsN,EACPpC,YAAavE,EAAE,kCACfwE,SAAU6G,KAGlB,kBAACpH,GAAA,EAAKC,MAAN,CAAYC,UAAU,aAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,wBACf,kBAACiE,GAAA,EAAKI,QAAN,CACI2C,cAAY,sBACZ1C,KAAK,SACLjL,MAAK,OAAEA,QAAF,IAAEA,IAAS,GAChBkL,YAAavE,EAAE,mCACfwE,SAAU8G,KAGlB,kBAACrH,GAAA,EAAKC,MAAN,CAAYC,UAAU,YAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,uBACf,kBAACiE,GAAA,EAAKI,QAAN,CACI2C,cAAY,qBACZ1C,KAAK,OACLjL,MAAOiQ,aAAO,IAAIjB,KAAKD,GAAOpI,EAAE,8BAChCwE,SAAU+G,KAGlB,kBAACtH,GAAA,EAAKC,MAAN,CAAYC,UAAU,aAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,wBACf,kBAAC8E,GAAD,CAAkB/B,UAAWiI,GACzB,kBAAC/G,GAAA,EAAKI,QAAN,CAAckD,GAAG,SAASlO,MAAK,OAAE+B,QAAF,IAAEA,IAAS,GAAIoJ,SAAUgH,IACnDS,MAIb,kBAAChI,GAAA,EAAKC,MAAN,CAAYC,UAAU,gBAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,2BACf,kBAACiE,GAAA,EAAKI,QAAN,CACI2C,cAAY,yBACZO,GAAG,WACHgF,KAAM,EACNlT,MAAOiP,EACP/D,YAAavE,EAAE,sCACfwE,SAAUiH,QAK1B,kBAACU,GAAA,EAAMK,OAAP,KACI,kBAACxI,GAAA,EAAD,CAAQvC,QAAQ,UAAUL,QAASsK,GAAgBjH,SAAUuH,IACxD5S,EAASuG,EAAMtE,SAAW2E,EAAE,6BAA+BA,EAAE,mC,2NC9MtF,IAAMyM,GAAejN,YAAH,MAYLkN,GAAsClR,IAAMkE,MAAK,SAACC,GAAyB,IAAD,EACvEI,cAALC,EAD4E,oBAE7EwF,EAAS5F,qBAAWoF,IAFyD,EAIlExJ,IAAMyE,SAAsB5F,EAAcG,OAApDD,EAJ4E,sBAKzDiB,IAAMyE,SAAiB,IALkC,mBAK5E7D,EAL4E,KAKrE6G,EALqE,OAMnDzH,IAAMyE,UAAkB,GAN2B,mBAM5E8C,EAN4E,KAMjEC,EANiE,OAOnDxH,IAAMyE,SAA6B,IAPgB,mBAO5E0M,EAP4E,KAOlEC,EAPkE,OAQrDpR,IAAMyE,WAR+C,mBAQ5E5E,EAR4E,KAQnEwR,EARmE,OASjDrR,IAAMyE,UAAkB,GATyB,mBAS5E6M,EAT4E,KASjEC,EATiE,OAUrDvR,IAAMyE,UAAkB,GAV6B,mBAU5E+M,EAV4E,KAUnEC,EAVmE,KAanFzR,IAAMuK,WAAU,WACRP,EAAOzC,WAIG,uCAAG,4BAAA1G,EAAA,6DACb2G,GAAW,GADE,kBAGU,IAAI2F,GAAepO,GAAQ2S,WAAW1H,EAAOrK,MAAOqK,EAAOL,MAAOK,EAAOJ,MAHnF,OAGH1I,EAHG,OAITkQ,EAAYlQ,GAJH,gDAMTkQ,EAAY,IACZ3J,EAASjD,EAAE,gBAPF,yBASTgD,GAAW,GATF,4EAAH,oDAYd+I,KACD,CAACvG,EAAQjL,EAAQyF,EAAGgN,IAIvB,IAAMG,EAAc3R,IAAM6E,aAAY,WAClCwM,OAAWvT,GACXyT,GAAa,KACd,IAEGK,EAAe5R,IAAM6E,aACvB,SAACrE,GACG6Q,EAAWF,EAAS/S,MAAK,SAAAC,GAAC,OAAIA,EAAEmC,KAAOA,MACvC+Q,GAAa,KAEjB,CAACJ,IAGCU,EAAiB7R,IAAM6E,YAAN,uCACnB,WAAOrE,GAAP,SAAAK,EAAA,+EAEc,IAAIsM,GAAepO,GAAQ+S,OAAOtR,GAFhD,OAGQiB,YAAW,WACPgQ,GAAYD,KACbzS,EAAON,cALlB,+CAOQgJ,EAASjD,EAAE,gBAPnB,wDADmB,sDAWnB,CAACzF,EAAQyF,EAAGgN,IAGVO,EAAe/R,IAAM6E,aAAY,WACnC0M,GAAa,KACd,IAEGrB,EAAiBlQ,IAAM6E,aAAY,WACrC0M,GAAa,GACb9P,YAAW,WACPgQ,GAAYD,KACbzS,EAAON,gBACX,CAACM,EAAQyS,IAINQ,EAAgBhS,IAAMuF,SAAQ,WAChC,OAAO4L,EAASc,QAAO,SAAA5T,GAAC,OAAIA,EAAEyK,OAASe,GAAYmD,cACpD,CAACmE,IAEEe,EAAiBlS,IAAMuF,SAAQ,WACjC,OAAO4L,EAASc,QAAO,SAAA5T,GAAC,OAAIA,EAAEyK,OAASe,GAAY8C,eACpD,CAACwE,IAGJ,OACI,oCACI,kBAACF,GAAD,MACA,kBAAClH,GAAD,MACA,kBAACb,GAAD,CACIxD,MAAOlB,EAAE,iBACT6E,OAAQ7E,EAAE,eACV2E,SAAUwI,EACVvI,cAAe7B,GAAayC,EAAOzC,YAEvC,kBAACL,GAAD,CAAgBC,QAASvG,IACzB,kBAAC0I,GAAD,CAAkB/B,UAAWA,GAAayC,EAAOzC,WAC7C,kBAAC4K,GAAA,EAAD,CAAMC,iBAAiB,WACnB,kBAACC,GAAA,EAAD,CAAKrG,SAAS,UAAUtG,MAAOlB,EAAE,oBAC7B,kBAACuJ,GAAD,CAAoBC,SAAUgE,EAAe/D,UAAWiE,KAE5D,kBAACG,GAAA,EAAD,CAAKrG,SAAS,WAAWtG,MAAOlB,EAAE,qBAC9B,kBAACkJ,GAAD,CAAkBC,MAAOqE,EAAexE,OAAQoE,EAAcnE,SAAUoE,KAE5E,kBAACQ,GAAA,EAAD,CAAKrG,SAAS,YAAYtG,MAAOlB,EAAE,sBAC/B,kBAACkJ,GAAD,CAAkBC,MAAOuE,EAAgB1E,OAAQoE,EAAcnE,SAAUoE,OAIrF,kBAAC5C,GAAD,CAAkBoB,KAAMiB,EAAWzR,QAASA,EAAS+Q,OAAQmB,EAAc5I,SAAU+G,QCzIpFoC,GAAb,kDAGI,WAAsBvT,GAAsB,IAAD,8BACvC,cAAMA,IADYA,SAAqB,EAFnC2D,QAAU,aAEyB,EAH/C,gGAOqBC,GAPrB,oEAQYZ,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAR3C,yCASmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cATlD,yCAUmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAVlD,yCAWmBf,KAAKgB,gBAAgBoJ,KAXxC,wBAcqBpK,KAAK/C,IAAsB+C,KAAKW,QAAU,QAAS,CAAEC,KAAMA,IAdhF,uNAiBiB4P,GAjBjB,oEAkBYxQ,KAAKhD,OAAOR,SAAWZ,EAAQiF,SAlB3C,yCAmBmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cAnBlD,yCAoBmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WApBlD,yCAqBmBf,KAAKgB,gBAAgBkJ,KArBxC,wBAuBqBlK,KAAK/C,IAAkB+C,KAAKW,SAvBjD,oNA0Bc0K,GA1Bd,oEA2BYrL,KAAKhD,OAAOR,SAAWZ,EAAQiF,SA3B3C,yCA4BmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cA5BlD,yCA6BmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WA7BlD,yCA8BmBf,KAAKgB,gBAAgBkJ,GAAe,KA9BvD,wBAgCqBlK,KAAKO,KAAiBP,KAAKW,QAAS,GAAI0K,GAhC7D,uNAmCiBA,GAnCjB,oEAoCYrL,KAAKhD,OAAOR,SAAWZ,EAAQiF,SApC3C,yCAqCmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cArClD,yCAsCmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WAtClD,yCAuCmBf,KAAKgB,qBAAsBjF,IAvC9C,wBAyCqBiE,KAAKQ,IAAUR,KAAKW,QAAS,GAAI0K,GAzCtD,uNA4CiB5M,GA5CjB,oEA6CYuB,KAAKhD,OAAOR,SAAWZ,EAAQiF,SA7C3C,yCA8CmBb,KAAKhD,OAAOR,SAAWZ,EAAQkF,cA9ClD,yCA+CmBd,KAAKhD,OAAOR,SAAWZ,EAAQmF,WA/ClD,yCAgDmBf,KAAKgB,qBAAsBjF,IAhD9C,wBAkDqBiE,KAAKS,OAAaT,KAAKW,QAAU,IAAMlC,GAlD5D,sJAAkCc,GCmBrBkR,GAA4CxS,IAAMkE,MAAK,SAACC,GAA4B,IAAD,EAChFI,cAALC,EADqF,oBAGpF7B,EAASyB,qBAAWrE,GAApB4C,KAHoF,EAKlE3C,IAAMyE,SAAS,IALmD,mBAKrF7D,EALqF,KAK9E6G,EAL8E,OAM3EzH,IAAMyE,SAAsB5F,EAAcG,OAApDD,EANqF,sBAOpEiB,IAAMyE,SAAiB,IAP6C,mBAOrF0G,EAPqF,KAO/E+D,EAP+E,OAQlDlP,IAAMyE,SAAmB,IARyB,mBAQrFgO,EARqF,KAQtEC,EARsE,OASlE1S,IAAMyE,SAAsB,IATsC,mBASrFyH,EATqF,KAS9EyG,EAT8E,OAUlD3S,IAAMyE,UAAS,GAVmC,mBAUrFmO,EAVqF,KAUrEC,EAVqE,OAWhD7S,IAAMyE,UAAS,GAXiC,mBAWrFkL,EAXqF,KAWpEC,EAXoE,KAatFC,EAAqB7P,IAAM6E,aAAY,SAAA4F,GACzCyE,EAAQzE,EAAM3C,OAAOjK,SACtB,IAEGiV,EAAsB9S,IAAM6E,aAAY,SAAA4F,GAC1CiI,EAAiB3U,MAAMgV,KAAKtI,EAAM3C,OAAOkL,iBAAiB,SAACC,GAAD,OAAiBA,EAAOpV,YACnF,IAEGqS,EAAiBlQ,IAAM6E,YAAN,sBAAkB,4BAAAhE,EAAA,yDACrC+O,GAAiB,IAEbhS,EAASuG,EAAMxE,OAHkB,0CAKvB,IAAI2S,GAAavT,GAAQoR,OAAO,CAClC3P,GAAE,UAAE2D,EAAMxE,aAAR,aAAE,EAAaa,GACjB2K,KAAMA,EACNe,MAAOuG,IARkB,OAU7BtO,EAAMgF,WAVuB,gDAY7B1B,EAASjD,EAAE,gBAZkB,yBAc7BoL,GAAiB,GAdY,oDAiBjCA,GAAiB,GAjBgB,oBAmBvB,IAAI0C,GAAavT,GAAQqR,IAAI,CAAEjF,KAAMA,EAAMe,MAAOuG,IAnB3B,QAoB7BtO,EAAMgF,WApBuB,mDAsB7B1B,EAASjD,EAAE,gBAtBkB,yBAwB7BoL,GAAiB,GAxBY,0FA2BtC,CAACzE,EAAMsH,EAAejO,EAAGzF,EAAQoF,IAEpCnE,IAAMuK,WAAU,WAKM,IAAD,IAJZpG,EAAMkM,OAIPlM,EAAMxE,OACNuP,EAAO,UAAC/K,EAAMxE,aAAP,aAAC,EAAawL,MACrBuH,EAAgB,UAACvO,EAAMxE,aAAP,aAAC,EAAauM,MAAMjB,KAAI,SAAA5M,GAAC,OAAIA,EAAEmC,SAE/C0O,EAAQ,IACRwD,EAAiB,QAEtB,CAACvO,IAEJnE,IAAMuK,WAAU,YACE,uCAAG,4BAAA1J,EAAA,6DACbgS,GAAgB,GAChBpL,EAAS,IAFI,kBAIU,IAAIhF,EAAY1D,GAAQuR,SAJlC,OAIHpP,EAJG,OAKTyR,EAASzR,GALA,gDAOTuG,EAASjD,EAAE,gBAPF,yBASTqO,GAAgB,GATP,4EAAH,qDAYdtC,KACD,CAAC/L,EAAGzF,IAEP,IAAMyR,EAAiBxQ,IAAMuF,SAAQ,WACjC,QAAIoK,MAIA/R,EAASgD,MAIRhD,EAASuN,KAAUvN,EAAS6U,OAKlC,CAAC7R,EAAOuK,EAAMsH,EAAe9C,IAE1BuD,EAAclT,IAAMuF,SACtB,kBACI2G,EAAMjB,KAAI,SAAAkI,GAAC,OACH,OAAJxQ,QAAI,IAAJA,OAAA,EAAAA,EAAMe,OAAQyP,EAAE3S,GACZ,4BAAQ0K,IAAKiI,EAAE3S,GAAI3C,MAAOsV,EAAE3S,IACvBgE,EAAE,cAGP,4BAAQ0G,IAAKiI,EAAE3S,GAAI3C,MAAOsV,EAAE3S,IAA5B,UAAoC2S,EAAE1S,YAAtC,aAAsD0S,EAAEzS,MAAxD,WAGZ,CAACwL,EAAOvJ,EAAM6B,IAGlB,OACI,oCACI,kBAACmM,GAAA,EAAD,CAAON,KAAMlM,EAAMkM,KAAMO,OAAQzM,EAAMyM,OAAQlF,KAAK,KAAKmF,UAAQ,GAC7D,kBAACF,GAAA,EAAM7E,OAAP,CAAcgF,aAAW,GACrB,kBAACH,GAAA,EAAMrI,MAAP,KACK1K,EAASuG,EAAMxE,OAAS6E,EAAE,0BAA4BA,EAAE,2BAGjE,kBAACmM,GAAA,EAAMpI,KAAP,KACI,kBAACrB,GAAD,CAAgBC,QAASvG,IACzB,kBAAC6H,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,6BAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,qBACf,kBAACiE,GAAA,EAAKI,QAAN,CACI2C,cAAY,mBACZ1C,KAAK,OACLjL,MAAOsN,EACPpC,YAAavE,EAAE,gCACfwE,SAAU6G,KAGlB,kBAACpH,GAAA,EAAKC,MAAN,CAAYC,UAAU,8BAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,sBACf,kBAACiE,GAAA,EAAKI,QAAN,CACI2C,cAAY,oBACZO,GAAG,SACHqH,UAAQ,EACRvV,MAAO4U,EACPY,SAAUT,GAAkBhV,EAASgD,GACrCoI,SAAU8J,GAETI,MAKjB,kBAACvC,GAAA,EAAMK,OAAP,KACI,kBAACxI,GAAA,EAAD,CAAQvC,QAAQ,UAAUL,QAASsK,EAAgBjH,SAAUuH,GACxD5S,EAASuG,EAAMxE,OAAS6E,EAAE,2BAA6BA,EAAE,iC,uEC5JlF,ICSK8O,GDTCC,GAAavP,YAAH,MAIHwP,GAAkCxT,IAAMkE,MAAK,SAACC,GAAuB,IAAD,EACjEI,cAALC,EADsE,oBAErE7B,EAASyB,qBAAWrE,GAApB4C,KAFqE,EAI5D3C,IAAMyE,SAAsB5F,EAAcG,OAApDD,EAJsE,sBAK7CiB,IAAMyE,UAAkB,GALqB,mBAKtE8C,EALsE,KAK3DC,EAL2D,OAMnDxH,IAAMyE,WAN6C,mBAMtE9E,EANsE,KAM/DuK,EAN+D,OAOjDlK,IAAMyE,SAA2B,IAPgB,mBAOtEgF,EAPsE,KAO9DgK,EAP8D,OAQnDzT,IAAMyE,SAAiB,IAR4B,mBAQtE7D,EARsE,KAQ/D6G,EAR+D,OAS3CzH,IAAMyE,UAAkB,GATmB,mBAStE6M,EATsE,KAS3DC,EAT2D,OAU/CvR,IAAMyE,UAAkB,GAVuB,mBAUtE+M,EAVsE,KAU7DC,EAV6D,KAYvEE,EAAc3R,IAAM6E,aAAY,WAClCqF,OAASpM,GACTyT,GAAa,KACd,IAEGK,EAAe5R,IAAM6E,aACvB,SAACrE,GACG0J,EAAST,EAAOrL,MAAK,SAAAwN,GAAC,OAAIA,EAAEpL,KAAOA,MACnC+Q,GAAa,KAEjB,CAAC9H,IAGCoI,EAAiB7R,IAAM6E,YAAN,uCACnB,WAAOrE,GAAP,SAAAK,EAAA,+EAEc,IAAIyR,GAAavT,GAAQ+S,OAAOtR,GAF9C,OAGQiB,YAAW,WACPgQ,GAAYD,KACbzS,EAAON,cALlB,+CAOQgJ,EAASjD,EAAE,gBAPnB,wDADmB,sDAWnB,CAACzF,EAAQyS,EAAShN,IAGhBuN,EAAe/R,IAAM6E,aAAY,WACnC0M,GAAa,KACd,IAEGrB,EAAiBlQ,IAAM6E,aAAY,WACrC0M,GAAa,GACb9P,YAAW,WACPgQ,GAAYD,KACbzS,EAAON,gBACX,CAACM,EAAQyS,IAEZxR,IAAMuK,WAAU,YACD,uCAAG,8BAAA1J,EAAA,6DACV2G,GAAW,GADD,kBAGa,IAAI8K,GAAavT,GAAQ2S,WAAzB,iBAAoC/O,QAApC,IAAoCA,OAApC,EAAoCA,EAAMe,WAA1C,QAAiD,IAH9D,OAGAxC,EAHA,OAINuS,EAAUvS,GAJJ,gDAMNuS,EAAU,IACVhM,EAASjD,EAAE,gBAPL,yBASNgD,GAAW,GATL,4EAAH,qDAYXkM,KACD,CAAC3U,EAAQ4D,EAAM6O,EAAShN,IAE3B,IAAMmP,EAAgB3T,IAAMuF,SACxB,kBACIkE,EAAOwB,KAAI,SAACtL,EAAOiU,GAAR,OACP,kBAACvG,GAAD,CACInC,IAAKvL,EAAMa,GACXA,GAAIb,EAAMa,GACV2K,KAAMxL,EAAMwL,KACZqC,OAAQoE,EACRnE,SAAUoE,GAEV,yBAAK3G,IAAG,sBAAiB0I,GAASnN,UAAU,0CACvC9G,EAAMuM,MAAMjB,KAAI,SAACtI,EAAMkR,GAAP,OACb,2BAAO3I,IAAG,sBAAiB0I,EAAjB,YAA0BC,GAAapN,UAAU,QACtD5C,EAAmBlB,cAM5C,CAAC8G,EAAQmI,EAAcC,IAG3B,OACI,oCACI,kBAAC0B,GAAD,MACA,kBAACrK,GAAD,CACIxD,MAAOlB,EAAE,eACT6E,OAAQ7E,EAAE,aACV2E,SAAUwI,EACVvI,cAAe7B,IAEnB,kBAACL,GAAD,CAAgBC,QAASvG,IACzB,kBAAC0I,GAAD,CAAkB/B,UAAWA,GAAYoM,GACzC,kBAACnB,GAAD,CAAgBnC,KAAMiB,EAAW3R,MAAOA,EAAOiR,OAAQmB,EAAc5I,SAAU+G,Q,sCEjG9E4D,GAA4C9T,IAAMkE,MAAK,SAACC,GAA4B,IAAD,EAChFI,cAALC,EADqF,oBAGpF7E,EAAUyE,qBAAWoF,IAArB7J,MAHoF,EAKlEK,IAAMyE,SAAS,IALmD,mBAKrF7D,EALqF,KAK9E6G,EAL8E,OAM3EzH,IAAMyE,SAAsB5F,EAAcG,OAApDD,EANqF,sBAOpEiB,IAAMyE,SAAiB,IAP6C,mBAOrF0G,EAPqF,KAO/E+D,EAP+E,OAQhDlP,IAAMyE,UAAS,GARiC,mBAQrFkL,EARqF,KAQpEC,EARoE,KAUtFC,EAAqB7P,IAAM6E,aAAY,SAAA4F,GACzCyE,EAAQzE,EAAM3C,OAAOjK,SACtB,IAEGqS,EAAiBlQ,IAAM6E,YAAN,sBAAkB,sBAAAhE,EAAA,yDACrC+O,GAAiB,IAEbhS,EAASuG,EAAMvE,OAHkB,0CAKvB,IAAIoP,GAAajQ,GAAQoR,OAAzB,2BACEhM,EAAMvE,OADR,IAEFuL,KAAMA,KAPmB,OAS7BhH,EAAMgF,WATuB,gDAW7B1B,EAASjD,EAAE,gBAXkB,yBAa7BoL,GAAiB,GAbY,oDAgBjCA,GAAiB,GAhBgB,oBAkBvB,IAAIZ,GAAajQ,GAAQqR,IAAI,CAAEjF,KAAMA,EAAMkB,QAAS1M,IAlB7B,QAmB7BwE,EAAMgF,WAnBuB,mDAqB7B1B,EAASjD,EAAE,gBArBkB,yBAuB7BoL,GAAiB,GAvBY,0FA0BtC,CAACzE,EAAM3G,EAAGzF,EAAQoF,EAAOxE,IAE5BK,IAAMuK,WAAU,WAKM,IAAD,EAJZpG,EAAMkM,OAIPlM,EAAMvE,MACNsP,EAAO,UAAC/K,EAAMvE,aAAP,aAAC,EAAauL,MAErB+D,EAAQ,OAEb,CAAC/K,IAEJ,IAAMqM,EAAiBxQ,IAAMuF,SAAQ,WACjC,SAAIoK,IAAmB/R,EAASgD,IAAWhD,EAASuN,MAKrD,CAACvK,EAAOuK,EAAMwE,IAEjB,OACI,oCACI,kBAACgB,GAAA,EAAD,CAAON,KAAMlM,EAAMkM,KAAMO,OAAQzM,EAAMyM,OAAQlF,KAAK,KAAKmF,UAAQ,GAC7D,kBAACF,GAAA,EAAM7E,OAAP,CAAcgF,aAAW,GACrB,kBAACH,GAAA,EAAMrI,MAAP,KACK1K,EAASuG,EAAMvE,OAAS4E,EAAE,0BAA4BA,EAAE,2BAGjE,kBAACmM,GAAA,EAAMpI,KAAP,KACI,kBAACrB,GAAD,CAAgBC,QAASvG,IACzB,kBAAC6H,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,6BAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,qBACf,kBAACiE,GAAA,EAAKI,QAAN,CACI2C,cAAY,mBACZ1C,KAAK,OACLjL,MAAOsN,EACPpC,YAAavE,EAAE,gCACfwE,SAAU6G,OAK1B,kBAACc,GAAA,EAAMK,OAAP,KACI,kBAACxI,GAAA,EAAD,CAAQvC,QAAQ,UAAUL,QAASsK,EAAgBjH,SAAUuH,GACxD5S,EAASuG,EAAMvE,OAAS4E,EAAE,2BAA6BA,EAAE,iC,qODpF7E8O,O,iCAAAA,I,2BAAAA,I,sBAAAA,Q,KAML,IE/BkCS,GF+B5BC,GAAahQ,YAAH,MAYHiQ,GAAkCjU,IAAMkE,MAAK,SAACgQ,GAAwB,IAAD,EAClE3P,cAALC,EADuE,oBAExEwF,EAAS5F,qBAAWoF,IAFoD,EAI7DxJ,IAAMyE,SAAsB5F,EAAcG,OAApDD,EAJuE,sBAKpDiB,IAAMyE,SAAiB,IAL6B,mBAKvE7D,EALuE,KAKhE6G,EALgE,OAM9CzH,IAAMyE,UAAkB,GANsB,mBAMvE8C,EANuE,KAM5DC,EAN4D,OAOlDxH,IAAMyE,SAA2B,IAPiB,mBAOvE6K,EAPuE,KAO/DC,EAP+D,OAQpDvP,IAAMyE,WAR8C,mBAQvE7E,EARuE,KAQhEyP,EARgE,OAS5CrP,IAAMyE,UAAkB,GAToB,mBASvE6M,EATuE,KAS5DC,EAT4D,OAUhDvR,IAAMyE,UAAkB,GAVwB,mBAUvE+M,EAVuE,KAU9DC,EAV8D,OAW7CzR,IAAMyE,SAAS6O,GAAea,eAXe,mBAWvEC,EAXuE,KAW5DC,EAX4D,KAc9ErU,IAAMuK,WAAU,WACRP,EAAOzC,WAIG,uCAAG,4BAAA1G,EAAA,6DACb2G,GAAW,GADE,kBAGU,IAAIwH,GAAajQ,GAAQ2S,WAAW1H,EAAOrK,MAAOqK,EAAOL,MAAOK,EAAOJ,MAHjF,OAGH1I,EAHG,OAITqO,EAAUrO,GAJD,gDAMTqO,EAAU,IACV9H,EAASjD,EAAE,gBAPF,yBASTgD,GAAW,GATF,4EAAH,oDAYd+I,KACD,CAACvG,EAAQjL,EAAQyF,EAAGgN,IAIvB,IAAMG,EAAc3R,IAAM6E,aAAY,WAClCwK,OAASvR,GACTyT,GAAa,KACd,IAEGK,EAAe5R,IAAM6E,aACvB,SAACrE,GACG6O,EAASC,EAAOlR,MAAK,SAAAwN,GAAC,OAAIA,EAAEpL,KAAOA,MACnC+Q,GAAa,KAEjB,CAACjC,IAGCuC,EAAiB7R,IAAM6E,YAAN,uCACnB,WAAOrE,GAAP,SAAAK,EAAA,+EAEc,IAAImO,GAAajQ,GAAQ+S,OAAOtR,GAF9C,OAGQiB,YAAW,WACPgQ,GAAYD,KACbzS,EAAON,cALlB,+CAOQgJ,EAASjD,EAAE,gBAPnB,wDADmB,sDAWnB,CAACzF,EAAQyF,EAAGgN,IAGVO,EAAe/R,IAAM6E,aAAY,WACnC0M,GAAa,KACd,IAEGrB,EAAiBlQ,IAAM6E,aAAY,WACrC0M,GAAa,GACb9P,YAAW,WACPgQ,GAAYD,KACbzS,EAAON,gBACX,CAACM,EAAQyS,IAEN8C,EAAoBtU,IAAM6E,aAAY,SAAChH,GACzCwW,EAAYxW,KACb,IAIG0W,EAAgBvU,IAAMuF,SACxB,kBACI+J,EAAOrE,KAAI,SAAArL,GACP,IAAM4U,EACF5U,EAAM2M,UAAY3M,EAAM4M,WAAa5M,EAAM2M,UAAY3M,EAAM6M,SAAW,WAAa,GACnFgI,EAAiB7U,EAAM4M,UAAY5M,EAAM6M,SAAW,WAAa,GAEvE,OACI,kBAACY,GAAD,CACInC,IAAKtL,EAAMY,GACXA,GAAIZ,EAAMY,GACV2K,KAAMvL,EAAMuL,KACZqC,OAAQoE,EACRnE,SAAUoE,GAEV,yBAAKpL,UAAU,kCACX,uBAAGA,UAAS,oBAAe+N,IACvB,+BAAQhQ,EAAE,wBACV,6BACC5E,EAAM2M,UAAUsB,QAAQ,IAE7B,uBAAGpH,UAAS,oBAAegO,IACvB,+BAAQjQ,EAAE,qBACV,6BACC5E,EAAM4M,UAAUqB,QAAQ,IAE7B,uBAAGpH,UAAU,aACT,+BAAQjC,EAAE,kBACV,6BACC5E,EAAM6M,SAASoB,QAAQ,WAMhD,CAACyB,EAAQsC,EAAcC,EAAgBrN,IAKrCkQ,EAAe1U,IAAMuF,SACvB,kBACI,oCACI,kBAAC,OAAD,CACI2F,IAAKkJ,EACLlT,KACIoO,EAAOrR,OAAS,EACV,CACIqR,OAAQA,EAAOrE,KAAI,SAAArL,GAAK,OAAIA,EAAMuL,QAClCwJ,SAAU,CACN,CACIzT,KAAMoO,EAAOrE,KAAI,SAAArL,GAAK,OAClBwU,IAAcd,GAAea,cACvBvU,EAAM2M,UACN6H,IAAcd,GAAesB,WAC7BhV,EAAM4M,UACN5M,EAAM6M,YAEhBoI,YAAa,KAIzB,CACIvF,OAAQ,CAAC,SACTqF,SAAU,CACN,CACIzT,KAAM,CAAC,GACP2T,YAAa,KAKnCC,QAAS,CACLC,QAAS,CACLC,aAAc,CACVC,OAAQ,oBAIpBC,MAAO,IACPC,OAAQ,SAIpB,CAAC7F,EAAQ8E,IAIb,OACI,oCACI,kBAACJ,GAAD,MACA,kBAACjK,GAAD,MACA,kBAACb,GAAD,CACIxD,MAAOlB,EAAE,eACT6E,OAAQ7E,EAAE,aACV2E,SAAUwI,EACVvI,cAAe7B,GAAayC,EAAOzC,YAEvC,kBAACL,GAAD,CAAgBC,QAASvG,IACzB,kBAAC0I,GAAD,CAAkB/B,UAAWA,GAAayC,EAAOzC,WAC7C,kBAAC4K,GAAA,EAAD,CAAMC,iBAAiB,SACnB,kBAACC,GAAA,EAAD,CAAKrG,SAAS,QAAQtG,MAAOlB,EAAE,oBAC1B+P,GAEL,kBAAClC,GAAA,EAAD,CAAKrG,SAAS,QAAQtG,MAAOlB,EAAE,oBAC3B,yBAAKiC,UAAU,qCACX,kBAAC2O,GAAA,EAAD,CACItM,KAAK,QACLqC,KAAK,UACLtN,MAAOuW,EACPpL,SAAUsL,GAEV,kBAACe,GAAA,EAAD,CAAcxX,MAAOyV,GAAea,eAC/B3P,EAAE,wBAEP,kBAAC6Q,GAAA,EAAD,CAAcxX,MAAOyV,GAAesB,YAAapQ,EAAE,qBACnD,kBAAC6Q,GAAA,EAAD,CAAcxX,MAAOyV,GAAegC,SAAU9Q,EAAE,oBAGxD,yBAAKiC,UAAU,iCAEyBiO,MAKpD,kBAACZ,GAAD,CAAgBzD,KAAMiB,EAAW1R,MAAOA,EAAOgR,OAAQmB,EAAc5I,SAAU+G,QG3O9EqF,GAAwCvV,IAAMkE,MAAK,SAACC,GAC7D,IAAMxB,EAAOyB,qBAAWrE,GAD8D,EAE1EwE,cAALC,EAF+E,sBAGhDxE,IAAMyE,SAAiB,IAHyB,mBAG/EhE,EAH+E,KAGlE+U,EAHkE,OAItDxV,IAAMyE,UAAkB,GAJ8B,mBAI/E8C,EAJ+E,KAIpEC,EAJoE,OAKrExH,IAAMyE,SAAsB5F,EAAcG,OAApDD,EAL+E,sBAM5DiB,IAAMyE,SAAiB,IANqC,mBAM/E7D,EAN+E,KAMxE6G,EANwE,KAQhFgO,EAA0BzV,IAAM6E,aAClC,SAAC4F,GACG9H,EAAKtC,aAAaoK,EAAM3C,OAAO4N,WAEnC,CAAC/S,IAGCgT,EAA4B3V,IAAM6E,aAAY,SAAC4F,GACjD+K,EAAe/K,EAAM3C,OAAOjK,SAC7B,IAEG+X,EAAiB5V,IAAM6E,YAAN,sBAAkB,sBAAAhE,EAAA,6DACrC2G,GAAW,GAD0B,kBAG3BjE,EAAWxE,EAAQ4D,EAAKA,KAAuBlC,GAHpB,sDAKjCgH,EAASjD,EAAE,mBALsB,uBAOjCgD,GAAW,GAPsB,0EAStC,CAAC/G,EAAa1B,EAAQ4D,EAAKA,KAAM6B,IAMpC,OAJAxE,IAAMuK,WAAU,WAAO,IAAD,IAClBiL,EAAc,oBAAC7S,EAAKA,YAAN,aAAC,EAAWlC,mBAAZ,QAA2B,MAC1C,CAACkC,EAAKA,OAGL,oCACI,yBAAK8D,UAAU,qCACX,yBAAKA,UAAU,+BACX,kBAACyC,GAAD,CACIxD,MAAOlB,EAAE,kBACT6E,OAAQ7E,EAAE,mBACV2E,SAAUyM,EACVxM,cAAe7B,IAEnB,kBAACL,GAAD,CAAgBC,QAASvG,IACzB,kBAAC6H,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKoN,MAAN,CACIpP,UAAU,OACVqC,KAAK,SACLtI,GAAG,gBACHZ,MAAO4E,EAAE,uBACTkR,QAAS/S,EAAKvC,YACd4I,SAAUyM,IAEd,kBAAChN,GAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,GAAA,EAAKG,MAAN,KAAapE,EAAE,0BACf,kBAACiE,GAAA,EAAKI,QAAN,CACIC,KAAK,OACLC,YAAavE,EAAE,qCACf3G,MAAO4C,EACPuI,SAAU2M,Y,UCjE7BG,GAAe,SAAC,GAAiE,IAApDC,EAAmD,EAA9DC,UAA8D,EAAxCjR,KAAwC,qCAEzF,OADiBX,qBAAWrE,GAApB4C,KACM,kBAACoT,EAAD,MAAgB,kBAAC,IAAD,CAAUE,GAAG,WCclCC,GAAgClW,IAAMkE,MAAK,SAACgQ,GAAuB,IAAD,IACjD9P,qBAAWrE,GAA7B4C,EADmE,EACnEA,KAAMxC,EAD6D,EAC7DA,QACRkE,EAAUC,cACVzH,EAAWsZ,cAH0D,EAK1DnW,IAAMyE,SAAsB5F,EAAcG,OAApDD,EALoE,sBAO3CiB,IAAMyE,UAAkB,GAPmB,mBAOpE8C,EAPoE,KAOzDC,EAPyD,OAS/CxH,IAAMyE,SAAuB,IATkB,mBASpEgF,EAToE,KAS5DgK,EAT4D,OAUjDzT,IAAMyE,SAAmB,IAVwB,mBAUpEiF,EAVoE,KAU7D0M,EAV6D,OAYjDpW,IAAMyE,WAZ2C,mBAYpE9E,EAZoE,KAY7DuK,EAZ6D,OAajDlK,IAAMyE,UAAiB,IAAIoI,MAAOwJ,YAbe,mBAapE1M,EAboE,KAa7DQ,EAb6D,OAcnDnK,IAAMyE,SAAiB,GAd4B,mBAcpEmF,EAdoE,KAc9DQ,EAd8D,KA6G3E,OA7FApK,IAAMuK,WAAU,WACZ,GAAKpK,EAAL,CAIA,IAAMmW,EAAaC,KAAKzL,UAAUD,KAAY2L,MAAM3Z,EAASmI,SACvDyR,EAAeF,KAAKC,MAAMF,GAChC9O,GAAW,GAEA,uCAAG,oDAAA3G,EAAA,2DAON4I,EAAOxL,OAAS,GAPV,gBAQNyY,EAAgBjN,EARV,gDAWoB,IAAI6I,GAAavT,GAAQuR,OAAzB,iBAAgC3N,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAMe,WAAtC,QAA6C,IAXjE,OAWFgT,EAXE,yDAaFA,EAAgB,GAbd,QAgBNzV,QAAQ0V,IAAI,cAAeD,GAhBrB,WAmBJE,EAAYC,aAAaC,QAAQ,SACvCrD,EAAUiD,GACN9Y,EAAS6Y,EAAa9W,QAAU+W,EAAcK,MAAK,SAAA1Y,GAAC,OAAIA,EAAEmC,MAAQiW,EAAa9W,SAC/EqX,EAAeN,EAActY,MAAK,SAAAC,GAAC,OAAIA,EAAEmC,MAAQiW,EAAa9W,SACvD/B,EAASgZ,IAAcF,EAAcK,MAAK,SAAA1Y,GAAC,OAAIA,EAAEmC,MAAQoW,KAChEI,EAAeN,EAActY,MAAK,SAAAC,GAAC,OAAIA,EAAEmC,MAAQoW,KAC1ChZ,EAAS8Y,KAChBM,EAAeN,EAAc,IAMjCxM,EAAS8M,GACTH,aAAaI,QAAQ,QAArB,UAA8BD,SAA9B,aAA8B,EAAcxW,GAAG0W,YAEzCC,EAAYN,aAAaC,QAAQ,SAEnCM,EADAxZ,EAAS6Y,EAAa9M,QAAU8M,EAAa9M,OAAS,GAAK8M,EAAa9M,OAAS,GAClE8M,EAAa9M,MACrB/L,EAASuZ,KAAeA,GAAa,IAAMA,GAAa,IAC/CA,GAED,IAAItK,MAAOwJ,WAE9BlM,EAASiN,GACTP,aAAaI,QAAQ,QAASG,EAAaF,cAEvCxN,EAAMzL,OAAS,GA9CT,iBA+CNoZ,EAAe3N,EA/CT,mDAkDmB,IAAIyD,GAAepO,GAAQuY,SAA3B,oBAAoCN,SAApC,aAAoC,EAAcxW,UAAlD,QAAwD,GAlD3E,QAkDF6W,EAlDE,0DAoDFA,EAAe,GApDb,QAyDJE,EAAWV,aAAaC,QAAQ,QACtCV,EAASiB,GAELG,EADA5Z,EAAS6Y,EAAa7M,OAASyN,EAAaN,MAAK,SAAA1Y,GAAC,OAAIA,KAAOoY,EAAa7M,QAC5D6M,EAAa7M,KACpBhM,EAAS2Z,IAAaF,EAAaN,MAAK,SAAA1Y,GAAC,OAAIA,KAAOkZ,MAC5CA,GAED,IAAI1K,MAAO4K,cAE7BrN,EAAQoN,GACRX,aAAaI,QAAQ,OAAQO,EAAYN,YAEzC7S,EAAQY,KAAK,CACTC,SAAUrI,EAASqI,SACnBF,OAAQ6F,KAAYC,UAAU,CAC1BnL,MAAK,UAAEqX,SAAF,aAAE,EAAcxW,GACrBmJ,MAAOyN,EACPxN,KAAM4N,MAIdhQ,GAAW,GA9ED,kEAAH,oDAgFXkM,MAED,CAAC3U,EAAQsF,EAASxH,EAAUsD,EAASwC,IAGpC,oCACI,kBAAC6G,GAAckO,SAAf,CACI7Z,MAAO,CACH0J,UAAWA,EAEXkC,OAAQA,EACRC,MAAOA,EAEP/J,MAAK,iBAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAOa,UAAT,QAAe,EACpBmJ,MAAOA,EACPC,KAAMA,IAGV,kBAACxD,EAAA,EAAD,CAAWK,UAAU,QACjB,kBAAC,IAAD,KACKtG,GAAW,kBAAC,GAAD,CAAc+K,IAAK3L,EAAOI,MAAOoF,KAAMxF,EAAOI,MAAOqW,UAAWxC,KAC3ErT,GAAW,kBAAC,GAAD,CAAc+K,IAAK3L,EAAOK,MAAOmF,KAAMxF,EAAOK,MAAOoW,UAAW/B,KAC3E9T,GAAW,kBAAC,GAAD,CAAc+K,IAAK3L,EAAOM,QAASkF,KAAMxF,EAAOM,QAASmW,UAAW9E,KAC/E/Q,GACG,kBAAC,GAAD,CAAc+K,IAAK3L,EAAOG,SAAUqF,KAAMxF,EAAOG,SAAUsW,UAAWT,KAE1E,kBAAC,IAAD,CAAOrK,IAAK3L,EAAOE,KAAMsF,KAAMxF,EAAOE,KAAMuW,UAAW1O,KACvD,kBAAC,IAAD,CAAO4D,IAAK3L,EAAOC,KAAMmY,OAAK,EAAC5S,KAAMxF,EAAOC,MACxC,oCACI,oCACA,8CAAoBT,EAAOP,gBAGnC,kBAAC,IAAD,CAAO0M,IAAK,IAAKnG,KAAK,KAClB,6CChJf6S,GAA8B5X,IAAMkE,MAAK,SAACgQ,GAAsB,IAAD,EACvDlU,IAAMyE,SAAsB5F,EAAcG,OAApDD,EADiE,sB/BVrD,WAAO,IAAD,EACC0F,oBAAS,WAC/B,IAAM9B,EAAOlD,iBAAOoY,YACpB,MAAO,CAAE3X,cAAeyC,EAAMA,WAHT,mBAClBmV,EADkB,KACXC,EADW,KAMnB/O,EAAW,SAACrG,GACdoV,EAAS,CAAE7X,cAAc,EAAOyC,UAUpC,OAPA3C,IAAMuK,WAAU,WAEZ,IAAMyN,EAAcvY,iBAAOwY,mBAAmBjP,GAE9C,OAAO,kBAAMgP,OACd,IAEIF,E+BLwBI,GAAvBvV,EAFgE,EAEhEA,KAAMzC,EAF0D,EAE1DA,aAF0D,EAGpCF,IAAMyE,SACtC7H,OAAOub,YAAcvb,OAAOub,WAAW,gCAAgCC,SAJH,mBAGjEhY,EAHiE,KAGpDC,EAHoD,OAM5CL,IAAMyE,UAAkB,GANoB,mBAMjEtE,EANiE,KAMxDkY,EANwD,KAQlEC,EAAkBtY,IAAM6E,aAAY,SAACvE,GACvCD,EAAaC,KACd,IAEGqG,EAAQ3G,IAAMuF,SAAQ,WACxB,IAAIoB,EAAQ/J,OAAOub,YAAcvb,OAAOub,WAAW,gCAAgCC,QAanF,OAXIxa,EAASiZ,aAAaC,QAAQ,gBAC9BnQ,EAAQ4P,KAAKC,MAAMK,aAAaC,QAAQ,cACxCzW,EAAasG,IAGb/I,EAASwC,IAAgBA,IAAgBuG,IAEzCtG,EADAsG,EAAQvG,GAERyW,aAAaI,QAAQ,YAAatQ,EAAMuQ,aAGrC9W,EAAc6G,GAAYF,KAClC,CAAC3G,IAqBJ,OAnBAJ,IAAMuK,WAAU,YACRrK,GAAiByC,GAIjB/E,EAAS+E,IACTA,EAAK4V,mBAAmBC,MAAK,SAAC3a,GAC1BgE,IAAMO,SAASjB,QAAQkB,OAAOF,cAAgBtE,EAAM4a,MACpD,IAAIhW,EAAY1D,GAAQ0E,YAAY,CAChCjD,GAAImC,EAAKe,IACThD,MAAOiC,EAAKjC,MACZD,YAAakC,EAAKlC,YAClBkD,SAAUhB,EAAKiB,WAEnByU,GAAS,QAGlB,CAAC1V,EAAMzC,EAAcnB,IAGpB,oCACI,kBAAC,IAAD,CAAe4H,MAAOA,GAClB,oCACI,kBAACD,GAAD,MACA,kBAAC3G,EAAY2X,SAAb,CACI7Z,MAAO,CACH8E,KAAMA,EACNzC,aAAcA,EACdC,QAASA,EACTC,YAAW,OAAEA,QAAF,IAAEA,KACbC,aAAciY,IAGjBvZ,EAAOH,eACJ,kBAAC,IAAD,CAAY8Z,SAAS,KACjB,kBAACzU,GAAD,MACA,kBAACiS,GAAD,QAGNnX,EAAOH,eACL,kBAAC,IAAD,CAAe8Z,SAAS,KACpB,kBAACzU,GAAD,MACA,kBAACiS,GAAD,cC9E1BnX,GtCO0B,WAAwD,IAAD,EAAtD4Z,EAAsD,uDAApB,GAC3DC,EAA6B,IAAIta,EAoBrC,OAlBAsa,EAAa,2BACNA,GADM,IAETpa,aAAcN,EACV+D,KACA0W,EAAUna,aACVoa,EAAcpa,cAElBD,OAAQL,EAAkB+D,aAA+B0W,EAAUpa,OAAQqa,EAAcra,QACzFK,cAKU,SAJNV,EACI+D,OADa,OAEb0W,QAFa,IAEbA,GAFa,UAEbA,EAAW/Z,qBAFE,aAEb,EAA0BsY,WAC1B0B,EAAcha,cAAcsY,cAIxCrY,EAAcO,IAAd,2BAAuBwZ,GAAkBD,IAElC9Z,EAAcG,MsC5BV6Z,GAGfC,wBAAc,gBLhBoB/E,GKkB1B7V,EAAkB+D,uBAAwClD,GAAOJ,iBLlBA,CACrEoa,OKkBI7a,EAAkB+D,0CAAwClD,GAAOL,gBLjBrEsa,WAAW,GAAD,OAAKjF,GAAL,oBACVkF,YAAY,WAAD,OAAalF,GAAb,mBACXA,UAAWA,GACXmF,cAAenF,GACfoF,kBAAmB,mBKiBvBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC1B,GAAD,OAEJ2B,SAASC,eAAe,S1CgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnB,MAAK,SAAAoB,GACJA,EAAaC,gBAEdC,OAAM,SAAAlZ,GACLK,QAAQL,MAAMA,EAAMuG,c","file":"static/js/main.d0f6a95d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport translationEN from '../locales/en.json';\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: translationEN\r\n    }\r\n};\r\n\r\ni18n.use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: 'en',\r\n        fallbackLng: 'en', // use en if detected lng is not available\r\n\r\n        // keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","export enum ApiType {\r\n    FIREBASE = 'FIREBASE',\r\n    LOCAL_STORAGE = 'LOCAL_STORAGE',\r\n    TOTAL_FAKE = 'TOTAL_FAKE',\r\n    TEST_API = 'TEST_API'\r\n}\r\n\r\nexport class ConfigModel {\r\n    /** api backend url */\r\n    apiUrl: string = 'TOTAL_FAKE';\r\n\r\n    /** build version */\r\n    buildVersion: string = 'local';\r\n\r\n    /** request delay time */\r\n    requestDelay: number = 1000;\r\n\r\n    /** firebase */\r\n    firebaseApiKey: string = 'AIzaSyDMDE7eTQbjwkQglMJf5KnFtMr48-pAoVM';\r\n    firebaseProject: string = 'lfmachadodasilva-dev';\r\n\r\n    useHashRouter: boolean = true;\r\n}\r\n","export const hasValue = (value: any): boolean => {\r\n    if (value === null || value === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (typeof value === 'string' || Array.isArray(value)) {\r\n        return value.length > 0;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n// export const getValueOrDefault = (value?: string, defaultValue?: string) => {\r\n//     return hasValue(value) ? value : defaultValue;\r\n// };\r\n\r\nexport const getValueOrDefault = (...values: any[]) => {\r\n    return values.find(x => hasValue(x));\r\n};\r\n","import config, { Options } from 'react-global-configuration';\r\n\r\nimport { getValueOrDefault } from '../helpers/util';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport class ConfigManager {\r\n    static set = (configurationSettings: ConfigModel) => {\r\n        config.set({ ApplicationConfiguration: configurationSettings }, { freeze: false } as Options);\r\n    };\r\n\r\n    static get(): ConfigModel {\r\n        const configurationObject = config.get('ApplicationConfiguration');\r\n\r\n        const configurationSettings = new ConfigModel();\r\n        Object.assign(configurationSettings, configurationObject);\r\n\r\n        return configurationSettings;\r\n    }\r\n}\r\n\r\nexport const setConfiguration = (overrides: Partial<ConfigModel> = {}): ConfigModel => {\r\n    let configDefault: ConfigModel = new ConfigModel();\r\n\r\n    configDefault = {\r\n        ...configDefault,\r\n        buildVersion: getValueOrDefault(\r\n            process.env.REACT_APP_BUILD_VERSION,\r\n            overrides.buildVersion,\r\n            configDefault.buildVersion\r\n        ),\r\n        apiUrl: getValueOrDefault(process.env.REACT_APP_API_URL, overrides.apiUrl, configDefault.apiUrl),\r\n        useHashRouter:\r\n            getValueOrDefault(\r\n                process.env.REACT_APP_USE_HASH_ROUTER,\r\n                overrides?.useHashRouter?.toString(),\r\n                configDefault.useHashRouter.toString()\r\n            ) === 'true'\r\n    };\r\n\r\n    ConfigManager.set({ ...configDefault, ...overrides });\r\n\r\n    return ConfigManager.get();\r\n};\r\n","export class Routes {\r\n    static home = '/';\r\n    static auth = '/auth';\r\n    static settings = '/settings';\r\n    static group = '/group';\r\n    static label = '/label';\r\n    static expense = '/expense';\r\n}\r\n","import React from 'react';\r\nimport { User } from 'firebase/app';\r\n\r\nexport type UserContext = {\r\n    user?: User | null;\r\n    initialising: boolean;\r\n    isReady: boolean;\r\n\r\n    isDarkTheme: boolean;\r\n    setDarkTheme: (dark: boolean) => void;\r\n};\r\n\r\nexport const defaultUserContext: UserContext = {\r\n    initialising: false,\r\n    isReady: false,\r\n\r\n    isDarkTheme: false,\r\n    setDarkTheme: (dark: boolean) => {}\r\n};\r\n\r\nexport const userContext = React.createContext<UserContext>(defaultUserContext);\r\n","import axios, { AxiosError } from 'axios';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport enum StatusCodes {\r\n    OK = 200,\r\n    ERROR = 500\r\n}\r\n\r\nconst handleError = async (error: AxiosError) => {\r\n    if (error.response && error.response.status >= StatusCodes.OK) {\r\n        if (process.env.NODE_ENV !== 'test') {\r\n            // avoid show this when is running test\r\n            console.error('Request Failed:', error.config);\r\n            console.error('Status:', error.response.status);\r\n            console.error('Data:', error.response.data);\r\n            console.error('Headers:', error.response.headers);\r\n        }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n};\r\n\r\nexport class ServiceBase {\r\n    constructor(protected config: ConfigModel) {}\r\n\r\n    protected async resolveMockData<T>(data: T): Promise<T> {\r\n        return new Promise((resolve, _reject) => {\r\n            setTimeout(() => {\r\n                resolve(data);\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async rejectMockData<T>(): Promise<T> {\r\n        return new Promise((_resolve, reject) => {\r\n            setTimeout(() => {\r\n                reject();\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async get<TResponse>(url: string, params?: { [key: string]: any }): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.get(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async post<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.post(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async put<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.put(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async delete<TResponse>(url: string): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.delete(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                }\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n}\r\n","import { UserModel } from '../models/user';\r\n\r\nexport const usersMockData: UserModel[] = [\r\n    { id: '1', displayName: 'User 1', email: 'user1@email.com' },\r\n    { id: '2', displayName: 'User 2', email: 'user2@email.com' },\r\n    { id: '3', displayName: 'User 3', email: 'user3@email.com' },\r\n    { id: '4', displayName: 'User 4', email: 'user4@email.com' },\r\n    { id: '5', displayName: 'User 5', email: 'user5@email.com' }\r\n];\r\n","import { usersMockData } from '../mockData/user';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { UserModel } from '../models/user';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class UserService extends ServiceBase {\r\n    private baseUrl = '/api/user';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async addOrUpdate(user: UserModel): Promise<UserModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<UserModel>(usersMockData[0]);\r\n        }\r\n        return await this.post<UserModel>('/api/user', {}, user);\r\n    }\r\n\r\n    async getAll(): Promise<UserModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(usersMockData);\r\n        }\r\n        return await this.get<UserModel[]>(this.baseUrl);\r\n    }\r\n\r\n    // async add(obj: Partial<UserModel>): Promise<UserModel> {\r\n    //     if (this.config.apiUrl === ApiType.FIREBASE) {\r\n    //     } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n    //     } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n    //         return this.resolveMockData(usersMockData[0]);\r\n    //     }\r\n    //     return await this.post<UserModel>(this.baseUrl, {}, obj);\r\n    // }\r\n\r\n    // async update(obj: UserModel): Promise<void> {\r\n    //     if (this.config.apiUrl === ApiType.FIREBASE) {\r\n    //     } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n    //     } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n    //         return this.resolveMockData<void>(undefined);\r\n    //     }\r\n    //     return await this.put<void>(this.baseUrl, {}, obj);\r\n    // }\r\n\r\n    async remove(id: string): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport firebase, { auth } from 'firebase/app';\r\nimport 'firebase/auth'; // If using Firebase auth\r\nimport { UserService } from './user';\r\nimport { UserModel } from '../models/user';\r\nimport { ConfigModel } from '../models/config';\r\n// import { UserService } from './userService';\r\n// import { ConfigurationManager } from '../configurations/configurationManager';\r\n// import { UserModel } from '../models/user';\r\n\r\nexport const useAuth = () => {\r\n    const [state, setState] = useState(() => {\r\n        const user = auth().currentUser;\r\n        return { initialising: !user, user };\r\n    });\r\n\r\n    const onChange = (user: firebase.User | null) => {\r\n        setState({ initialising: false, user });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // listen for auth state changes\r\n        const unsubscribe = auth().onAuthStateChanged(onChange);\r\n        // unsubscribe to the listener when unmounting\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return state;\r\n};\r\n\r\nconst facebook = new auth.FacebookAuthProvider();\r\n\r\nexport const loginWithFacebook = async () => {\r\n    try {\r\n        return await auth().signInWithPopup(facebook);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const loginWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().signInWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const createUserWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().createUserWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const resetPassword = async (email: string) => {\r\n    try {\r\n        return await auth().sendPasswordResetEmail(email);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const updateUser = async (config: ConfigModel, user: firebase.User, displayName: string) => {\r\n    try {\r\n        await user?.updateProfile({ displayName: displayName });\r\n\r\n        await new UserService(config).addOrUpdate({\r\n            id: user.uid,\r\n            email: user.email,\r\n            displayName: user.displayName,\r\n            photoUrl: user.photoURL\r\n        } as UserModel);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const signOut = () => firebase.auth().signOut();\r\n","import { UserModel } from '../models/user';\r\nimport { hasValue } from './util';\r\n\r\nexport const getUserDisplayName = (user: firebase.User | UserModel) => {\r\n    if (!hasValue(user)) {\r\n        return '';\r\n    }\r\n\r\n    if (hasValue(user.displayName)) {\r\n        return user.displayName?.split(' ')[0];\r\n    }\r\n\r\n    return user.email?.split('@')[0];\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Routes } from '../../pages/routes';\r\nimport { userContext } from '../../contexts/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { signOut } from '../../services/auth';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\n\r\nconst HeaderStyle = createGlobalStyle`\r\n    .navbar-brand {\r\n        cursor: pointer;\r\n    };\r\n`;\r\n\r\nexport type HeaderProps = {};\r\n\r\nexport const HeaderComponent: React.FC<HeaderProps> = React.memo((props: HeaderProps) => {\r\n    const { user, initialising } = useContext(userContext);\r\n    const history = useHistory();\r\n    const [t] = useTranslation();\r\n    const [expanded, setExpand] = React.useState<boolean>(false);\r\n\r\n    const handleToggle = React.useCallback((expanded: boolean) => {\r\n        setExpand(expanded);\r\n    }, []);\r\n\r\n    const handleRedirectTo = React.useCallback(\r\n        (path: string) => {\r\n            setExpand(false);\r\n            if (hasValue(history.location.search)) {\r\n                history.push({ pathname: path, search: history.location.search });\r\n            } else {\r\n                history.push(path);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    const handleLogout = React.useCallback(async () => {\r\n        await signOut();\r\n        setTimeout(() => history.push(Routes.home));\r\n    }, [history]);\r\n\r\n    const authElement = React.useMemo(() => {\r\n        if (hasValue(user)) {\r\n            const displayName = getUserDisplayName(user as firebase.User);\r\n            return (\r\n                <Nav>\r\n                    <NavDropdown title={displayName} id=\"collasible-nav-dropdown\">\r\n                        <NavDropdown.Item onClick={() => handleRedirectTo(Routes.settings)}>\r\n                            {t('HEADER.SETTINGS')}\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={handleLogout}>{t('HEADER.LOGOUT')}</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Nav>\r\n                <Nav.Link onClick={() => handleRedirectTo(Routes.auth)}>{t('HEADER.LOGIN')}</Nav.Link>\r\n            </Nav>\r\n        );\r\n    }, [user, handleRedirectTo, handleLogout, t]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderStyle />\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" onToggle={handleToggle} expanded={expanded}>\r\n                <Container>\r\n                    <Navbar.Brand onClick={() => handleRedirectTo(Routes.home)}>{t('HEADER.TITLE')}</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"mr-auto \">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.group)}>{t('HEADER.GROUP')}</Nav.Link>\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.label)}>{t('HEADER.LABEL')}</Nav.Link>\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.expense)}>{t('HEADER.EXPENSE')}</Nav.Link>\r\n                        </Nav>\r\n                        {!initialising && authElement}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n});\r\n","import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .card {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .card-header {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n\r\n  .form-control {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .modal-content {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-header {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-body {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-footer {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .close {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n    text-shadow: none;\r\n  };\r\n\r\n  .nav-tabs .nav-link.active, .nav-tabs .nav-item.show .nav-link  {\r\n      background-color: ${({ theme }) => theme.body};\r\n      color: ${({ theme }) => theme.text};\r\n      border-color: ${({ theme }) => theme.toggleBorder};\r\n  };\r\n  `","export const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#363537',\r\n    toggleBorder: '#595959',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)'\r\n};\r\n\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#646464',\r\n    gradient: 'linear-gradient(#091236, #1E215D)'\r\n};\r\n","import React from 'react';\r\nimport { hasValue } from '../../helpers/util';\r\n\r\nexport interface ErrorProps {\r\n    message: string;\r\n}\r\n\r\nexport const ErrorComponent: React.FC<ErrorProps> = React.memo((props: ErrorProps) => {\r\n    if (!hasValue(props.message)) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            {props.message}\r\n        </div>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport { Routes } from '../routes';\r\nimport { loginWithEmail, loginWithFacebook } from '../../services/auth';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nconst AuthStyle = createGlobalStyle``;\r\n\r\nexport type AuthProps = {};\r\n\r\nexport const AuthPage: React.FC<AuthProps> = React.memo((props: AuthProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [error, setError] = React.useState<string>('');\r\n\r\n    const [email, setEmail] = React.useState<string>('');\r\n    const [password, setPassword] = React.useState<string>('');\r\n\r\n    const handleFacebook = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            await loginWithFacebook();\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch (error) {\r\n            setError(t('AUTH.ERROR'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [history, t]);\r\n\r\n    const handleChangeEmail = React.useCallback((value: any) => {\r\n        setEmail(value.target.value);\r\n    }, []);\r\n    const handleChangePassword = React.useCallback((value: any) => {\r\n        setPassword(value.target.value);\r\n    }, []);\r\n\r\n    const handleLogin = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            await loginWithEmail(email, password);\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch {\r\n            setError(t('AUTH.ERROR'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [email, password, history, t]);\r\n\r\n    return (\r\n        <>\r\n            <AuthStyle />\r\n            <Container className=\"p-4\">\r\n                <ErrorComponent message={error} />\r\n                <Row>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_FACEBOOK')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Button onClick={handleFacebook}>{t('AUTH.FACEBOOK')}</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_EMAIL')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>{t('AUTH.EMAIL')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder={t('AUTH.EMAIL_PLACEHOLDER')}\r\n                                            onChange={handleChangeEmail}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>{t('AUTH.PASSWORD')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder={t('AUTH.PASSWORD_PLACEHOLDER')}\r\n                                            onChange={handleChangePassword}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Button variant=\"primary\" onClick={handleLogin} disabled={isLoading}>\r\n                                        {t('AUTH.LOGIN')}\r\n                                    </Button>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\r\n\r\nexport interface ItemsHeaderProps {\r\n    title: string;\r\n    action: string;\r\n    onAction: () => void;\r\n    disableAction?: boolean;\r\n}\r\n\r\nexport const ItemsHeaderComponent: React.FC<ItemsHeaderProps> = React.memo((props: ItemsHeaderProps) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-between mb-2\">\r\n            <h4>{props.title}</h4>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={props.onAction}\r\n                disabled={props.disableAction ?? false}\r\n            >\r\n                {props.action}\r\n            </button>\r\n        </div>\r\n    );\r\n});\r\n","import React from 'react';\r\n\r\nexport type LoadingProps = {\r\n    isLoading: boolean;\r\n};\r\n\r\nexport const LoadingComponent: React.FC<React.PropsWithChildren<LoadingProps>> = React.memo(\r\n    (props: React.PropsWithChildren<LoadingProps>) => {\r\n        if (props.isLoading) {\r\n            return (\r\n                <div className=\"m-2 text-center\">\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <>{props.children}</>;\r\n    }\r\n);\r\n","import React from 'react';\r\nimport { GroupModel } from '../models/group';\r\n\r\nexport interface GlobalContext {\r\n    isLoading: boolean;\r\n\r\n    groups: GroupModel[];\r\n    years: number[];\r\n\r\n    group: number;\r\n    month: number;\r\n    year: number;\r\n}\r\n\r\nexport const defaultGlobalContext: GlobalContext = {\r\n    isLoading: true,\r\n\r\n    groups: [],\r\n    years: [],\r\n\r\n    group: 0,\r\n    month: 1,\r\n    year: 2020\r\n};\r\n\r\nexport const globalContext = React.createContext<GlobalContext>(defaultGlobalContext);\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { globalContext } from '../../contexts/global';\r\n\r\nexport type SearchProps = {};\r\n\r\nconst SearchStyle = createGlobalStyle`\r\n    .search-component {\r\n        .card-header {\r\n            padding: 5px;\r\n            border: none;\r\n        }\r\n        .card-body {\r\n            padding-top: 0;\r\n            padding-bottom: 0;\r\n            padding-right: 10px;\r\n            padding-left: 10px;\r\n        }\r\n        .search-header {\r\n            margin: 0px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SearchComponent: React.FC<SearchProps> = React.memo((props: SearchProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n    const global = useContext(globalContext);\r\n\r\n    const [months] = React.useState<number[]>([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\r\n    const [group, setGroup] = React.useState<number>(global.group);\r\n    const [month, setMonth] = React.useState<number>(global.month);\r\n    const [year, setYear] = React.useState<number>(global.year);\r\n    const [isExpanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n    React.useEffect(() => {\r\n        setGroup(global.group);\r\n        setMonth(global.month);\r\n        setYear(global.year);\r\n    }, [global.group, global.month, global.year]);\r\n\r\n    const handleOnChangeGroup = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setGroup(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeMonth = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setMonth(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeYear = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setYear(event.target.value as number);\r\n    }, []);\r\n\r\n    const handleOnSearch = React.useCallback(() => {\r\n        history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify({\r\n                group: group,\r\n                month: month,\r\n                year: year\r\n            })\r\n        });\r\n    }, [history, group, month, year]);\r\n\r\n    const handleExpandCollapse = React.useCallback(() => {\r\n        setExpanded(!isExpanded);\r\n    }, [isExpanded]);\r\n\r\n    const groupsOptions = React.useMemo(\r\n        () =>\r\n            global.groups.map(x => (\r\n                <option key={'GROUP_' + x.id} value={x.id}>\r\n                    {x.name}\r\n                </option>\r\n            )),\r\n        [global.groups]\r\n    );\r\n\r\n    const monthsOptions = React.useMemo(\r\n        () =>\r\n            months.map(x => (\r\n                <option key={'MONTH_' + x} value={x}>\r\n                    {t('MONTHS.' + x)}\r\n                </option>\r\n            )),\r\n        [months, t]\r\n    );\r\n\r\n    const yearsOptions = React.useMemo(\r\n        () =>\r\n            global.years.map(x => (\r\n                <option key={'YEAR_' + x} value={x}>\r\n                    {x}\r\n                </option>\r\n            )),\r\n        [global.years]\r\n    );\r\n\r\n    const headerElement = React.useMemo(() => {\r\n        if (global.isLoading) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <Spinner data-testid=\"search-loading\" animation=\"border\" role=\"status\" size=\"sm\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (isExpanded) {\r\n            return (\r\n                <strong>\r\n                    <p className=\"search-header\">{t('SEARCH.HEADER')}</p>\r\n                </strong>\r\n            );\r\n        }\r\n\r\n        const selectedGroup = global.groups.find(g => g.id === group);\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-around\">\r\n                <p className=\"search-header\">{selectedGroup?.name}</p>\r\n                <p className=\"search-header\">{t('MONTHS.' + month)}</p>\r\n                <p className=\"search-header\">{year}</p>\r\n            </div>\r\n        );\r\n    }, [isExpanded, global.isLoading, global.groups, group, month, year, t]);\r\n\r\n    return (\r\n        <div className=\"search-component mb-2\">\r\n            <SearchStyle />\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={handleExpandCollapse}>\r\n                            {headerElement}\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs={12} sm={5}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.GROUP')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={group}\r\n                                            onChange={handleOnChangeGroup}\r\n                                        >\r\n                                            {groupsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.MONTH')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={month}\r\n                                            onChange={handleOnChangeMonth}\r\n                                        >\r\n                                            {monthsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={3}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.YEAR')}</Form.Label>\r\n                                        <Form.Control as=\"select\" size=\"sm\" value={year} onChange={handleOnChangeYear}>\r\n                                            {yearsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Button className=\"mb-2\" onClick={handleOnSearch} size=\"sm\">\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n});\r\n","import { LabelModel } from './label';\r\n\r\nexport enum ExpenseType {\r\n    INCOMING = 1,\r\n    OUTCOMING\r\n}\r\n\r\nexport interface ExpenseModel {\r\n    id: number;\r\n    name: string;\r\n\r\n    type: ExpenseType;\r\n\r\n    value: number;\r\n    date: Date;\r\n    comments: string;\r\n\r\n    /** relations */\r\n    groupId: number;\r\n    labelId: number;\r\n}\r\n\r\nexport interface ExpenseFullModel {\r\n    id: number;\r\n    name: string;\r\n\r\n    type: ExpenseType;\r\n\r\n    value: number;\r\n    date: Date;\r\n    comments: string;\r\n\r\n    /** relations */\r\n    groupId: number;\r\n    label: LabelModel;\r\n}\r\n","import { GroupFullModel, GroupModel } from '../models/group';\r\nimport { usersMockData } from './user';\r\n\r\nexport const groupsMockData: GroupModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData.map(x => x.id) },\r\n    { id: 2, name: 'Group 2', users: usersMockData.map(x => x.id) },\r\n    { id: 3, name: 'Group 3', users: usersMockData.map(x => x.id) },\r\n    { id: 4, name: 'Group 4', users: usersMockData.map(x => x.id) }\r\n];\r\n\r\nexport const groupsFullMockData: GroupFullModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData },\r\n    { id: 2, name: 'Group 2', users: usersMockData },\r\n    { id: 3, name: 'Group 3', users: usersMockData },\r\n    { id: 4, name: 'Group 4', users: usersMockData }\r\n];\r\n","import { LabelFullModel, LabelModel } from '../models/label';\r\n\r\nexport const labelsMockData: LabelModel[] = [\r\n    { id: 1, name: 'Label 1', groupId: 1 },\r\n    { id: 2, name: 'Label 2', groupId: 1 },\r\n    { id: 3, name: 'Label 3', groupId: 2 },\r\n    { id: 4, name: 'Label 4', groupId: 2 }\r\n];\r\n\r\nexport const labelsFullMockData: LabelFullModel[] = [\r\n    { id: 1, name: 'Label 1', groupId: 1, currValue: 1.11, lastValue: 5, avgValue: 6.33 },\r\n    { id: 2, name: 'Label 2', groupId: 1, currValue: 2.11, lastValue: 4, avgValue: 5.33 },\r\n    { id: 3, name: 'Label 3', groupId: 2, currValue: 3.11, lastValue: 3, avgValue: 4.33 },\r\n    { id: 4, name: 'Label 4', groupId: 2, currValue: 4.11, lastValue: 2, avgValue: 3.33 }\r\n];\r\n","import { ExpenseFullModel, ExpenseModel, ExpenseType } from '../models/expense';\r\nimport { groupsMockData } from './group';\r\nimport { labelsMockData } from './label';\r\n\r\nexport const expensesMockData: ExpenseModel[] = [\r\n    {\r\n        id: 1,\r\n        name: 'Expense 1',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 1.11,\r\n        date: new Date(2020, 0, 1),\r\n        comments: 'Comments 1',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[0].id\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Expense 2',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 2.11,\r\n        date: new Date(),\r\n        comments: 'Comments 2',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[1].id\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Expense 3',\r\n        type: ExpenseType.INCOMING,\r\n        value: 3.11,\r\n        date: new Date(),\r\n        comments: 'Comments 3',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[2].id\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Expense 4',\r\n        type: ExpenseType.INCOMING,\r\n        value: 4.11,\r\n        date: new Date(),\r\n        comments: 'Comments 3',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[3].id\r\n    }\r\n];\r\n\r\nexport const expensesFullMockData: ExpenseFullModel[] = [\r\n    {\r\n        id: 1,\r\n        name: 'Expense 1',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 1.11,\r\n        date: new Date(2020, 0, 1),\r\n        comments: 'Comments 1',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[0]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Expense 2',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 2.11,\r\n        date: new Date(),\r\n        comments: 'Comments 2',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[1]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Expense 3',\r\n        type: ExpenseType.INCOMING,\r\n        value: 3.11,\r\n        date: new Date(),\r\n        comments: 'Comments 3',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[2]\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Expense 4',\r\n        type: ExpenseType.INCOMING,\r\n        value: 4.11,\r\n        date: new Date(),\r\n        comments: 'Comments 4',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[3]\r\n    }\r\n];\r\n\r\nexport const yearsMockData: number[] = [2015, 2016, 2017, 2018, 2019, 2020];\r\n","import { expensesFullMockData, expensesMockData, yearsMockData } from '../mockData/expense';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { ExpenseFullModel, ExpenseModel } from '../models/expense';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class ExpenseService extends ServiceBase {\r\n    private baseUrl = '/api/expense';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getYears(group: number): Promise<number[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(yearsMockData);\r\n        }\r\n        return await this.get<number[]>(this.baseUrl + '/years');\r\n    }\r\n\r\n    async getAllFull(group: number, month: number, year: number): Promise<ExpenseFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesFullMockData);\r\n        }\r\n        return await this.get<ExpenseFullModel[]>(this.baseUrl + '/full', { group: group, month: month, year: year });\r\n    }\r\n\r\n    async getAll(group: number): Promise<ExpenseModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData);\r\n        }\r\n        return await this.get<ExpenseModel[]>(this.baseUrl, { group: group });\r\n    }\r\n\r\n    async add(obj: Partial<ExpenseModel>): Promise<ExpenseModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData[0]);\r\n        }\r\n        return await this.post<ExpenseModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: ExpenseModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport interface ItemProps {\r\n    id: number;\r\n    name: string;\r\n    onEdit: (id: number) => void;\r\n    onDelete: (id: number) => void;\r\n}\r\n\r\nexport const ItemComponent: React.FC<React.PropsWithChildren<ItemProps>> = React.memo(\r\n    (props: React.PropsWithChildren<ItemProps>) => {\r\n        const [t] = useTranslation();\r\n\r\n        return (\r\n            <div className=\"item-component\">\r\n                <Card key={`${props.id}_${props.name}`} className=\"mb-1\">\r\n                    <Card.Title className=\"mt-2 mr-2 ml-2 mb-0\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            {props.name}\r\n                            <DropdownButton size=\"sm\" variant=\"secondary\" title=\"\" id={`menu-${props.id}`}>\r\n                                <Dropdown.Item eventKey=\"1\" onClick={() => props.onEdit(props.id)}>\r\n                                    {t('LABEL.EDIT')}\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Divider />\r\n                                <Dropdown.Item eventKey=\"2\" onClick={() => props.onDelete(props.id)}>\r\n                                    {t('LABEL.DELETE')}\r\n                                </Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </div>\r\n                    </Card.Title>\r\n                    <Card.Body className=\"p-2\">{props.children}</Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\n\nimport { ItemComponent } from '../../components/item/item';\nimport { ExpenseFullModel } from '../../models/expense';\n\nexport type ExpenseItemsProps = {\n    items: ExpenseFullModel[];\n    onEdit: (id: number) => void;\n    onDelete: (id: number) => void;\n};\n\nexport const ExpenseItemsPage: React.FC<ExpenseItemsProps> = React.memo((props: ExpenseItemsProps) => {\n    const [t] = useTranslation();\n\n    return (\n        <>\n            {props.items.map(item => (\n                <ItemComponent\n                    key={item.id}\n                    id={item.id}\n                    name={item.name}\n                    onEdit={() => props.onEdit(item.id)}\n                    onDelete={() => props.onDelete(item.id)}\n                >\n                    <div className=\"d-flex justify-content-between\">\n                        <p className=\"no-margin\">\n                            <small>{t('EXPENSE.VALUE')}</small>\n                            <br></br>\n                            {item.value.toFixed(2)}\n                        </p>\n                        <p className=\"no-margin\">\n                            <small>{t('EXPENSE.DATE')}</small>\n                            <br></br>\n                            {format(new Date(item.date), t('EXPENSE.DATE_FORMAT'))}\n                        </p>\n                        <p className=\"no-margin\">\n                            <small>{t('EXPENSE.LABEL')}</small>\n                            <br></br>\n                            {item.label.name}\n                        </p>\n                    </div>\n                </ItemComponent>\n            ))}\n        </>\n    );\n});\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ExpenseFullModel } from '../../models/expense';\n\nexport type ExpenseSummaryProps = {\n    incoming: ExpenseFullModel[];\n    outcoming: ExpenseFullModel[];\n};\n\nexport const ExpenseSummaryPage: React.FC<ExpenseSummaryProps> = React.memo((props: ExpenseSummaryProps) => {\n    const [t] = useTranslation();\n\n    const { incoming, outcoming } = props;\n\n    const [totalIncoming, setTotalIncoming] = React.useState<number>(0);\n    const [totalOutcoming, setTotalOutcoming] = React.useState<number>(0);\n    const [totalLeft, setTotalLeft] = React.useState<number>(0);\n    const [totalLeftPer, setTotalLeftPer] = React.useState<number>(0);\n\n    React.useEffect(() => {\n        const tmpTotalIncoming = incoming.reduce((sum, current) => sum + current.value, 0);\n        const tmpTotalOutcoming = outcoming.reduce((sum, current) => sum + current.value, 0);\n\n        setTotalIncoming(tmpTotalIncoming);\n        setTotalOutcoming(tmpTotalOutcoming);\n\n        const tmpTotalLeft = tmpTotalIncoming - tmpTotalOutcoming;\n\n        setTotalLeft(tmpTotalLeft);\n        setTotalLeftPer((tmpTotalLeft / tmpTotalIncoming) * 100);\n    }, [incoming, outcoming]);\n\n    return (\n        <>\n            <div className=\"mt-2 row\">\n                <div className=\"col\">\n                    <p>{t('EXPENSE.TOTAL_INCOMING')}</p>\n                </div>\n                <div className=\"col\">{totalIncoming.toFixed(2)}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p>{t('EXPENSE.TOTAL_OUTCOMING')}</p>\n                </div>\n                <div className=\"col\">{totalOutcoming.toFixed(2)}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p>{t('EXPENSE.TOTAL_LEFT')}</p>\n                </div>\n                <div className=\"col\">{`${totalLeft.toFixed(2)} - ${totalLeftPer.toFixed(2)}%`}</div>\n            </div>\n        </>\n    );\n});\n","import { labelsFullMockData, labelsMockData } from '../mockData/label';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { LabelFullModel, LabelModel } from '../models/label';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class LabelService extends ServiceBase {\r\n    private baseUrl = '/api/label';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(group: number, month: number, year: number): Promise<LabelFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsFullMockData);\r\n        }\r\n        return await this.get<LabelFullModel[]>(this.baseUrl + '/full', {\r\n            group: group,\r\n            month: month,\r\n            year: year\r\n        });\r\n    }\r\n\r\n    async getAll(group: number): Promise<LabelModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData);\r\n        }\r\n        return await this.get<LabelModel[]>(this.baseUrl, { group: group });\r\n    }\r\n\r\n    async add(obj: Partial<LabelModel>): Promise<LabelModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData[0]);\r\n        }\r\n        return await this.post<LabelModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: LabelModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport { ConfigManager } from '../../configurations/configManager';\nimport { globalContext } from '../../contexts/global';\nimport { hasValue } from '../../helpers/util';\nimport { ConfigModel } from '../../models/config';\nimport { ExpenseFullModel } from '../../models/expense';\nimport { ExpenseService } from '../../services/expense';\nimport { LabelModel } from '../../models/label';\nimport { LabelService } from '../../services/label';\nimport { LoadingComponent } from '../../components/loading/loading';\nimport { ErrorComponent } from '../../components/error/error';\n\nexport type ExpenseModalProps = {\n    show: boolean;\n    expense?: ExpenseFullModel;\n    onHide: () => void;\n    onAction: () => void;\n};\n\nexport const ExpenseModalPage: React.FC<ExpenseModalProps> = React.memo((props: ExpenseModalProps) => {\n    const [t] = useTranslation();\n\n    const { group } = useContext(globalContext);\n\n    const [error, setError] = React.useState('');\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\n    const [name, setName] = React.useState<string>('');\n    const [value, setValue] = React.useState<number>();\n    const [date, setDate] = React.useState<Date>(new Date());\n    const [label, setLabel] = React.useState<number>();\n    const [labels, setLabels] = React.useState<LabelModel[]>([]);\n    const [isLoadingLabels, setLoadingLabels] = React.useState<boolean>(false);\n    const [comments, setComments] = React.useState<string>('');\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\n\n    //#region handles\n    const handleOnChangeName = React.useCallback(event => {\n        setName(event.target.value);\n    }, []);\n\n    const handleOnChangeValue = React.useCallback(event => {\n        setValue(event.target.value as number);\n    }, []);\n\n    const handleOnChangeDate = React.useCallback(event => {\n        setDate(event.target.value);\n    }, []);\n\n    const handleOnChangeLabel = React.useCallback(event => {\n        setLabel(event.target.value as number);\n    }, []);\n\n    const handleOnChangeComments = React.useCallback(event => {\n        setComments(event.target.value);\n    }, []);\n\n    const handleOnAction = React.useCallback(async () => {\n        setLoadingAction(true);\n\n        if (hasValue(props.expense)) {\n            try {\n                await new ExpenseService(config).update({\n                    ...(props.expense as ExpenseFullModel),\n                    name: name,\n                    value: value as number,\n                    date: date,\n                    labelId: label as number,\n                    comments: comments\n                });\n                props.onAction();\n            } catch {\n                setError(t('EXPENSE.ERROR'));\n            } finally {\n                setLoadingAction(false);\n            }\n        } else {\n            setLoadingAction(true);\n            try {\n                await new ExpenseService(config).add({\n                    name: name,\n                    value: value as number,\n                    date: date,\n                    labelId: label as number,\n                    comments: comments,\n                    groupId: group\n                });\n                props.onAction();\n            } catch {\n                setError(t('EXPENSE.ERROR'));\n            } finally {\n                setLoadingAction(false);\n            }\n        }\n    }, [name, value, date, label, comments, t, config, props, group]);\n    //#endregion\n\n    React.useEffect(() => {\n        if (!props.show) {\n            return;\n        }\n\n        if (props.expense) {\n            setName(props.expense?.name);\n            setValue(props.expense?.value);\n            setDate(props.expense?.date);\n            setLabel(props.expense?.label.id);\n            setComments(props.expense?.comments);\n        } else {\n            setName('');\n            setValue(undefined);\n            setDate(new Date());\n            setLabel(labels.length > 0 ? labels[0].id : undefined);\n            setComments('');\n        }\n    }, [props, labels]);\n\n    React.useEffect(() => {\n        const runAsync = async () => {\n            setLoadingLabels(true);\n            setError('');\n            try {\n                const data = await new LabelService(config).getAll(group);\n                setLabels(data);\n            } catch {\n                setError(t('EXPENSE.ERROR'));\n            } finally {\n                setLoadingLabels(false);\n            }\n        };\n        runAsync();\n    }, [t, config, group]);\n\n    const disabledAction = React.useMemo(() => {\n        if (\n            isLoadingAction ||\n            isLoadingLabels ||\n            hasValue(error) ||\n            !hasValue(name) ||\n            !hasValue(value) ||\n            !hasValue(date) ||\n            !hasValue(label)\n        ) {\n            return true;\n        }\n\n        return false;\n    }, [error, name, value, date, label, isLoadingAction, isLoadingLabels]);\n\n    const labelOptions = React.useMemo(\n        () =>\n            labels.map(l => (\n                <option key={l.id} value={l.id}>\n                    {l.name}\n                </option>\n            )),\n        [labels]\n    );\n\n    return (\n        <>\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        {hasValue(props.expense) ? t('EXPENSE.MODAL.EDIT_TITLE') : t('EXPENSE.MODAL.ADD_TITLE')}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ErrorComponent message={error} />\n                    <Form>\n                        <Form.Group controlId=\"formName\">\n                            <Form.Label>{t('EXPENSE.MODAL.NAME')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-name-field\"\n                                type=\"text\"\n                                value={name}\n                                placeholder={t('EXPENSE.MODAL.NAME_PLACEHOLDER')}\n                                onChange={handleOnChangeName}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formValue\">\n                            <Form.Label>{t('EXPENSE.MODAL.VALUE')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-value-field\"\n                                type=\"number\"\n                                value={value ?? ''}\n                                placeholder={t('EXPENSE.MODAL.VALUE_PLACEHOLDER')}\n                                onChange={handleOnChangeValue}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formDate\">\n                            <Form.Label>{t('EXPENSE.MODAL.DATE')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-date-field\"\n                                type=\"date\"\n                                value={format(new Date(date), t('EXPENSE.FIELD_DATE_FORMAT'))}\n                                onChange={handleOnChangeDate}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formLabel\">\n                            <Form.Label>{t('EXPENSE.MODAL.LABEL')}</Form.Label>\n                            <LoadingComponent isLoading={isLoadingLabels}>\n                                <Form.Control as=\"select\" value={label ?? ''} onChange={handleOnChangeLabel}>\n                                    {labelOptions}\n                                </Form.Control>\n                            </LoadingComponent>\n                        </Form.Group>\n                        <Form.Group controlId=\"formComments\">\n                            <Form.Label>{t('EXPENSE.MODAL.COMMENTS')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-comments-field\"\n                                as=\"textarea\"\n                                rows={2}\n                                value={comments}\n                                placeholder={t('EXPENSE.MODAL.COMMENTS_PLACEHOLDER')}\n                                onChange={handleOnChangeComments}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\n                        {hasValue(props.expense) ? t('EXPENSE.MODAL.EDIT_ACTION') : t('EXPENSE.MODAL.ADD_ACTION')}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n});\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\n\r\nimport { ErrorComponent } from '../../components/error/error';\r\nimport { ItemsHeaderComponent } from '../../components/itemsHeader/itemsHeader';\r\nimport { LoadingComponent } from '../../components/loading/loading';\r\nimport { SearchComponent } from '../../components/search/search';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ExpenseFullModel, ExpenseType } from '../../models/expense';\r\nimport { ExpenseService } from '../../services/expense';\r\nimport { ExpenseItemsPage } from './expenseItems';\r\nimport { ExpenseSummaryPage } from './expenseSummary';\r\nimport { ExpenseModalPage } from '../expenseModal/expenseModal';\r\n\r\nexport type ExpenseProps = {};\r\n\r\nconst ExpenseStyle = createGlobalStyle`\r\n    .no-margin {\r\n        margin: 0px;\r\n    };\r\n    canvas {\r\n        max-width: 500px;\r\n    };\r\n    .red-text {\r\n        color: #dc3545;\r\n    }\r\n`;\r\n\r\nexport const ExpensePage: React.FC<ExpenseProps> = React.memo((props: ExpenseProps) => {\r\n    const [t] = useTranslation();\r\n    const global = useContext(globalContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [expenses, setExpenses] = React.useState<ExpenseFullModel[]>([]);\r\n    const [expense, setExpense] = React.useState<ExpenseFullModel>();\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n\r\n    // #region main\r\n    React.useEffect(() => {\r\n        if (global.isLoading) {\r\n            return;\r\n        }\r\n\r\n        const runAsync = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new ExpenseService(config).getAllFull(global.group, global.month, global.year);\r\n                setExpenses(data);\r\n            } catch {\r\n                setExpenses([]);\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [global, config, t, refresh]);\r\n    // #endregion\r\n\r\n    // #region handles\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setExpense(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setExpense(expenses.find(x => x.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [expenses]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new ExpenseService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            }\r\n        },\r\n        [config, t, refresh]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n    // #endregion\r\n\r\n    //#region items\r\n    const incomingItems = React.useMemo(() => {\r\n        return expenses.filter(x => x.type === ExpenseType.INCOMING);\r\n    }, [expenses]);\r\n\r\n    const outcomingItems = React.useMemo(() => {\r\n        return expenses.filter(x => x.type === ExpenseType.OUTCOMING);\r\n    }, [expenses]);\r\n    //#endregion\r\n\r\n    return (\r\n        <>\r\n            <ExpenseStyle />\r\n            <SearchComponent />\r\n            <ItemsHeaderComponent\r\n                title={t('EXPENSE.TITLE')}\r\n                action={t('EXPENSE.ADD')}\r\n                onAction={handleOnAdd}\r\n                disableAction={isLoading || global.isLoading}\r\n            />\r\n            <ErrorComponent message={error} />\r\n            <LoadingComponent isLoading={isLoading || global.isLoading}>\r\n                <Tabs defaultActiveKey=\"summary\">\r\n                    <Tab eventKey=\"summary\" title={t('EXPENSE.SUMMARY')}>\r\n                        <ExpenseSummaryPage incoming={incomingItems} outcoming={outcomingItems} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"incoming\" title={t('EXPENSE.INCOMING')}>\r\n                        <ExpenseItemsPage items={incomingItems} onEdit={handleOnEdit} onDelete={handleOnDelete} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"outcoming\" title={t('EXPENSE.OUTCOMING')}>\r\n                        <ExpenseItemsPage items={outcomingItems} onEdit={handleOnEdit} onDelete={handleOnDelete} />\r\n                    </Tab>\r\n                </Tabs>\r\n            </LoadingComponent>\r\n            <ExpenseModalPage show={showModal} expense={expense} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import { groupsFullMockData, groupsMockData } from '../mockData/group';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { GroupFullModel, GroupModel } from '../models/group';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class GroupService extends ServiceBase {\r\n    private baseUrl = '/api/group';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(user: string): Promise<GroupFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsFullMockData);\r\n            //return this.rejectMockData();\r\n        }\r\n        return await this.get<GroupFullModel[]>(this.baseUrl + '/full', { user: user });\r\n    }\r\n\r\n    async getAll(userId: string): Promise<GroupModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData);\r\n        }\r\n        return await this.get<GroupModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<GroupModel>): Promise<GroupModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData[0]);\r\n        }\r\n        return await this.post<GroupModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: GroupModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { UserService } from '../../services/user';\r\nimport { UserModel } from '../../models/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nexport type GroupModalProps = {\r\n    show: boolean;\r\n    group?: GroupFullModel;\r\n    onHide: () => void;\r\n    onAction: () => void;\r\n};\r\n\r\nexport const GroupModalPage: React.FC<GroupModalProps> = React.memo((props: GroupModalProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { user } = useContext(userContext);\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [name, setName] = React.useState<string>('');\r\n    const [selectedUsers, setSelectedUsers] = React.useState<string[]>([]);\r\n    const [users, setUsers] = React.useState<UserModel[]>([]);\r\n    const [isLoadingUsers, setLoadingUsers] = React.useState(false);\r\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\r\n\r\n    const handleOnChangeName = React.useCallback(event => {\r\n        setName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnChangeUsers = React.useCallback(event => {\r\n        setSelectedUsers(Array.from(event.target.selectedOptions, (option: any) => option.value));\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoadingAction(true);\r\n\r\n        if (hasValue(props.group)) {\r\n            try {\r\n                await new GroupService(config).update({\r\n                    id: props.group?.id as number,\r\n                    name: name,\r\n                    users: selectedUsers\r\n                });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        } else {\r\n            setLoadingAction(true);\r\n            try {\r\n                await new GroupService(config).add({ name: name, users: selectedUsers });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        }\r\n    }, [name, selectedUsers, t, config, props]);\r\n\r\n    React.useEffect(() => {\r\n        if (!props.show) {\r\n            return;\r\n        }\r\n\r\n        if (props.group) {\r\n            setName(props.group?.name);\r\n            setSelectedUsers(props.group?.users.map(x => x.id));\r\n        } else {\r\n            setName('');\r\n            setSelectedUsers([]);\r\n        }\r\n    }, [props]);\r\n\r\n    React.useEffect(() => {\r\n        const runAsync = async () => {\r\n            setLoadingUsers(true);\r\n            setError('');\r\n            try {\r\n                const data = await new UserService(config).getAll();\r\n                setUsers(data);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingUsers(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [t, config]);\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (isLoadingAction) {\r\n            return true;\r\n        }\r\n\r\n        if (hasValue(error)) {\r\n            return true;\r\n        }\r\n\r\n        if (!hasValue(name) || !hasValue(selectedUsers)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [error, name, selectedUsers, isLoadingAction]);\r\n\r\n    const usersOption = React.useMemo(\r\n        () =>\r\n            users.map(u =>\r\n                user?.uid === u.id ? (\r\n                    <option key={u.id} value={u.id}>\r\n                        {t('GROUP.YOU')}\r\n                    </option>\r\n                ) : (\r\n                    <option key={u.id} value={u.id}>{`${u.displayName} (${u.email})`}</option>\r\n                )\r\n            ),\r\n        [users, user, t]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_TITLE') : t('GROUP.MODAL.ADD_TITLE')}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ErrorComponent message={error} />\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>{t('GROUP.MODAL.NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-name-field\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                placeholder={t('GROUP.MODAL.NAME_PLACEHOLDER')}\r\n                                onChange={handleOnChangeName}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                            <Form.Label>{t('GROUP.MODAL.USERS')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-users-field\"\r\n                                as=\"select\"\r\n                                multiple\r\n                                value={selectedUsers}\r\n                                readOnly={isLoadingUsers && hasValue(error)}\r\n                                onChange={handleOnChangeUsers}\r\n                            >\r\n                                {usersOption}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_ACTION') : t('GROUP.MODAL.ADD_ACTION')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\nimport { GroupModalPage } from '../groupModal/groupModal';\r\nimport { ItemComponent } from '../../components/item/item';\r\nimport { LoadingComponent } from '../../components/loading/loading';\r\nimport { ItemsHeaderComponent } from '../../components/itemsHeader/itemsHeader';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nconst GroupStyle = createGlobalStyle``;\r\n\r\nexport type GroupProps = {};\r\n\r\nexport const GroupPage: React.FC<GroupProps> = React.memo((props: GroupProps) => {\r\n    const [t] = useTranslation();\r\n    const { user } = useContext(userContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [group, setGroup] = React.useState<GroupFullModel>();\r\n    const [groups, setGroups] = React.useState<GroupFullModel[]>([]);\r\n    const [error, setError] = React.useState<string>('');\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setGroup(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setGroup(groups.find(g => g.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [groups]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new GroupService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            }\r\n        },\r\n        [config, refresh, t]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n\r\n    React.useEffect(() => {\r\n        const setup = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new GroupService(config).getAllFull(user?.uid ?? '');\r\n                setGroups(data);\r\n            } catch {\r\n                setGroups([]);\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        setup();\r\n    }, [config, user, refresh, t]);\r\n\r\n    const groupElements = React.useMemo(\r\n        () =>\r\n            groups.map((group, index) => (\r\n                <ItemComponent\r\n                    key={group.id}\r\n                    id={group.id}\r\n                    name={group.name}\r\n                    onEdit={handleOnEdit}\r\n                    onDelete={handleOnDelete}\r\n                >\r\n                    <div key={`GROUP_USERS_${index}`} className=\"d-flex flex-wrap justify-content-start\">\r\n                        {group.users.map((user, indexUser) => (\r\n                            <small key={`GROUP_SMALL_${index}_${indexUser}`} className=\"mr-2\">\r\n                                {getUserDisplayName(user)}\r\n                            </small>\r\n                        ))}\r\n                    </div>\r\n                </ItemComponent>\r\n            )),\r\n        [groups, handleOnEdit, handleOnDelete]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <GroupStyle />\r\n            <ItemsHeaderComponent\r\n                title={t('GROUP.TITLE')}\r\n                action={t('GROUP.ADD')}\r\n                onAction={handleOnAdd}\r\n                disableAction={isLoading}\r\n            />\r\n            <ErrorComponent message={error} />\r\n            <LoadingComponent isLoading={isLoading}>{groupElements}</LoadingComponent>\r\n            <GroupModalPage show={showModal} group={group} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport 'chartjs-plugin-colorschemes';\r\n\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nimport { SearchComponent } from '../../components/search/search';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { LabelFullModel } from '../../models/label';\r\nimport { LabelService } from '../../services/label';\r\nimport { ItemComponent } from '../../components/item/item';\r\nimport { LabelModalPage } from '../labelModal/labelModal';\r\nimport { LoadingComponent } from '../../components/loading/loading';\r\nimport { ErrorComponent } from '../../components/error/error';\r\nimport { ItemsHeaderComponent } from '../../components/itemsHeader/itemsHeader';\r\n\r\nexport type LabelProps = {};\r\n\r\nenum LabelGrapyType {\r\n    CURRENT_MONTH = 1,\r\n    LAST_MONTH,\r\n    AVERAGE\r\n}\r\n\r\nconst LabelStyle = createGlobalStyle`\r\n    .no-margin {\r\n        margin: 0px;\r\n    };\r\n    canvas {\r\n        max-width: 500px;\r\n    };\r\n    .red-text {\r\n        color: #dc3545;\r\n    }\r\n`;\r\n\r\nexport const LabelPage: React.FC<LabelProps> = React.memo((_props: LabelProps) => {\r\n    const [t] = useTranslation();\r\n    const global = useContext(globalContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [labels, setLabels] = React.useState<LabelFullModel[]>([]);\r\n    const [label, setLabel] = React.useState<LabelFullModel>();\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n    const [graphType, setGrahType] = React.useState(LabelGrapyType.CURRENT_MONTH);\r\n\r\n    // #region main\r\n    React.useEffect(() => {\r\n        if (global.isLoading) {\r\n            return;\r\n        }\r\n\r\n        const runAsync = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new LabelService(config).getAllFull(global.group, global.month, global.year);\r\n                setLabels(data);\r\n            } catch {\r\n                setLabels([]);\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [global, config, t, refresh]);\r\n    // #endregion\r\n\r\n    // #region handles\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setLabel(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setLabel(labels.find(g => g.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [labels]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new LabelService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            }\r\n        },\r\n        [config, t, refresh]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n\r\n    const handleOnGraphType = React.useCallback((value: number) => {\r\n        setGrahType(value);\r\n    }, []);\r\n    // #endregion\r\n\r\n    // #region items\r\n    const itemsElements = React.useMemo(\r\n        () =>\r\n            labels.map(label => {\r\n                const currValueClass =\r\n                    label.currValue > label.lastValue || label.currValue > label.avgValue ? 'red-text' : '';\r\n                const lastValueClass = label.lastValue > label.avgValue ? 'red-text' : '';\r\n\r\n                return (\r\n                    <ItemComponent\r\n                        key={label.id}\r\n                        id={label.id}\r\n                        name={label.name}\r\n                        onEdit={handleOnEdit}\r\n                        onDelete={handleOnDelete}\r\n                    >\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <p className={`no-margin ${currValueClass}`}>\r\n                                <small>{t('LABEL.CURRENT_MONTH')}</small>\r\n                                <br></br>\r\n                                {label.currValue.toFixed(2)}\r\n                            </p>\r\n                            <p className={`no-margin ${lastValueClass}`}>\r\n                                <small>{t('LABEL.LAST_MONTH')}</small>\r\n                                <br></br>\r\n                                {label.lastValue.toFixed(2)}\r\n                            </p>\r\n                            <p className=\"no-margin\">\r\n                                <small>{t('LABEL.AVERAGE')}</small>\r\n                                <br></br>\r\n                                {label.avgValue.toFixed(2)}\r\n                            </p>\r\n                        </div>\r\n                    </ItemComponent>\r\n                );\r\n            }),\r\n        [labels, handleOnEdit, handleOnDelete, t]\r\n    );\r\n    // #endregion\r\n\r\n    // #region graph\r\n    const graphElement = React.useMemo(\r\n        () => (\r\n            <>\r\n                <Pie\r\n                    key={graphType}\r\n                    data={\r\n                        labels.length > 0\r\n                            ? {\r\n                                  labels: labels.map(label => label.name),\r\n                                  datasets: [\r\n                                      {\r\n                                          data: labels.map(label =>\r\n                                              graphType === LabelGrapyType.CURRENT_MONTH\r\n                                                  ? label.currValue\r\n                                                  : graphType === LabelGrapyType.LAST_MONTH\r\n                                                  ? label.lastValue\r\n                                                  : label.avgValue\r\n                                          ),\r\n                                          borderWidth: 0\r\n                                      }\r\n                                  ]\r\n                              }\r\n                            : {\r\n                                  labels: ['Empty'],\r\n                                  datasets: [\r\n                                      {\r\n                                          data: [1],\r\n                                          borderWidth: 0\r\n                                      }\r\n                                  ]\r\n                              }\r\n                    }\r\n                    options={{\r\n                        plugins: {\r\n                            colorschemes: {\r\n                                scheme: 'office.Excel16'\r\n                            }\r\n                        }\r\n                    }}\r\n                    width={100}\r\n                    height={100}\r\n                />\r\n            </>\r\n        ),\r\n        [labels, graphType]\r\n    );\r\n    // #endregion\r\n\r\n    return (\r\n        <>\r\n            <LabelStyle />\r\n            <SearchComponent />\r\n            <ItemsHeaderComponent\r\n                title={t('LABEL.TITLE')}\r\n                action={t('LABEL.ADD')}\r\n                onAction={handleOnAdd}\r\n                disableAction={isLoading || global.isLoading}\r\n            />\r\n            <ErrorComponent message={error} />\r\n            <LoadingComponent isLoading={isLoading || global.isLoading}>\r\n                <Tabs defaultActiveKey=\"items\">\r\n                    <Tab eventKey=\"items\" title={t('LABEL.TAB_ITEMS')}>\r\n                        {itemsElements}\r\n                    </Tab>\r\n                    <Tab eventKey=\"graph\" title={t('LABEL.TAB_GRAPH')}>\r\n                        <div className=\"m-2 d-flex justify-content-center\">\r\n                            <ToggleButtonGroup\r\n                                type=\"radio\"\r\n                                name=\"options\"\r\n                                value={graphType}\r\n                                onChange={handleOnGraphType}\r\n                            >\r\n                                <ToggleButton value={LabelGrapyType.CURRENT_MONTH}>\r\n                                    {t('LABEL.CURRENT_MONTH')}\r\n                                </ToggleButton>\r\n                                <ToggleButton value={LabelGrapyType.LAST_MONTH}>{t('LABEL.LAST_MONTH')}</ToggleButton>\r\n                                <ToggleButton value={LabelGrapyType.AVERAGE}>{t('LABEL.AVERAGE')}</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            {/* ignore chart.js on testing */}\r\n                            {process.env.NODE_ENV !== 'test' && graphElement}\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </LoadingComponent>\r\n            <LabelModalPage show={showModal} label={label} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { LabelFullModel } from '../../models/label';\r\nimport { LabelService } from '../../services/label';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nexport type LabelModalProps = {\r\n    show: boolean;\r\n    label?: LabelFullModel;\r\n    onHide: () => void;\r\n    onAction: () => void;\r\n};\r\n\r\nexport const LabelModalPage: React.FC<LabelModalProps> = React.memo((props: LabelModalProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { group } = useContext(globalContext);\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [name, setName] = React.useState<string>('');\r\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\r\n\r\n    const handleOnChangeName = React.useCallback(event => {\r\n        setName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoadingAction(true);\r\n\r\n        if (hasValue(props.label)) {\r\n            try {\r\n                await new LabelService(config).update({\r\n                    ...(props.label as LabelFullModel),\r\n                    name: name\r\n                });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        } else {\r\n            setLoadingAction(true);\r\n            try {\r\n                await new LabelService(config).add({ name: name, groupId: group });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        }\r\n    }, [name, t, config, props, group]);\r\n\r\n    React.useEffect(() => {\r\n        if (!props.show) {\r\n            return;\r\n        }\r\n\r\n        if (props.label) {\r\n            setName(props.label?.name);\r\n        } else {\r\n            setName('');\r\n        }\r\n    }, [props]);\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (isLoadingAction || hasValue(error) || !hasValue(name)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [error, name, isLoadingAction]);\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {hasValue(props.label) ? t('LABEL.MODAL.EDIT_TITLE') : t('LABEL.MODAL.ADD_TITLE')}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ErrorComponent message={error} />\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>{t('LABEL.MODAL.NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"label-name-field\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                placeholder={t('LABEL.MODAL.NAME_PLACEHOLDER')}\r\n                                onChange={handleOnChangeName}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\r\n                        {hasValue(props.label) ? t('LABEL.MODAL.EDIT_ACTION') : t('LABEL.MODAL.ADD_ACTION')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","export const getFirebaseConfig = (projectId: string, apiKey: string) => ({\r\n    apiKey: apiKey,\r\n    authDomain: `${projectId}.firebaseapp.com`,\r\n    databaseURL: `https://${projectId}.firebaseio.com`,\r\n    projectId: projectId,\r\n    storageBucket: projectId,\r\n    messagingSenderId: 'my-sender-id'\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { userContext } from '../../contexts/user';\r\nimport { ItemsHeaderComponent } from '../../components/itemsHeader/itemsHeader';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { updateUser } from '../../services/auth';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nexport type SettingsProps = {};\r\n\r\nexport const SettingsPage: React.FC<SettingsProps> = React.memo((props: SettingsProps) => {\r\n    const user = useContext(userContext);\r\n    const [t] = useTranslation();\r\n    const [displayName, setDisplayName] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n\r\n    const handleOnChangeDarkTheme = React.useCallback(\r\n        (event: React.ChangeEvent<HTMLInputElement>) => {\r\n            user.setDarkTheme(event.target.checked);\r\n        },\r\n        [user]\r\n    );\r\n\r\n    const handleOnChangeDisplayName = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDisplayName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnUpdate = React.useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            await updateUser(config, user.user as firebase.User, displayName);\r\n        } catch {\r\n            setError(t('SETTINGS.ERROR'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [displayName, config, user.user, t]);\r\n\r\n    React.useEffect(() => {\r\n        setDisplayName(user.user?.displayName ?? '');\r\n    }, [user.user]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-2 d-flex justify-content-center\">\r\n                <div className=\"col-xs-12 col-sm-8 col-md-6\">\r\n                    <ItemsHeaderComponent\r\n                        title={t('SETTINGS.TITLE')}\r\n                        action={t('SETTINGS.UPDATE')}\r\n                        onAction={handleOnUpdate}\r\n                        disableAction={isLoading}\r\n                    />\r\n                    <ErrorComponent message={error} />\r\n                    <Form>\r\n                        <Form.Check\r\n                            className=\"mb-2\"\r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            label={t('SETTINGS.DARK_THEME')}\r\n                            checked={user.isDarkTheme}\r\n                            onChange={handleOnChangeDarkTheme}\r\n                        />\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>{t('SETTINGS.DISPLAY_NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder={t('SETTINGS.DISPLAY_NAME_PLACEHOLDER')}\r\n                                value={displayName}\r\n                                onChange={handleOnChangeDisplayName}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { userContext } from '../contexts/user';\r\n\r\ninterface PrivateRouteProps {\r\n    component: any;\r\n    path?: string;\r\n}\r\n\r\nexport const PrivateRoute = ({ component: Component, path, ...other }: PrivateRouteProps) => {\r\n    const { user } = useContext(userContext);\r\n    return user ? <Component /> : <Redirect to=\"/auth\" />;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport { ConfigManager } from '../configurations/configManager';\r\nimport { ConfigModel } from '../models/config';\r\nimport { AuthPage } from './auth/auth';\r\nimport { ExpensePage } from './expense/expense';\r\nimport { GroupPage } from './group/group';\r\nimport { LabelPage } from './label/label';\r\nimport { Routes } from './routes';\r\nimport { SettingsPage } from './settings/settings';\r\n\r\nimport { userContext } from '../contexts/user';\r\nimport { PrivateRoute } from '../helpers/privateRouter';\r\nimport { GroupModel } from '../models/group';\r\nimport { GroupService } from '../services/group';\r\nimport { ExpenseService } from '../services/expense';\r\nimport { globalContext } from '../contexts/global';\r\nimport { SearchModel } from '../models/search';\r\nimport { hasValue } from '../helpers/util';\r\n\r\nexport type MainProps = {};\r\n\r\nexport const MainPage: React.FC<MainProps> = React.memo((_props: MainProps) => {\r\n    const { user, isReady } = useContext(userContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n\r\n    const [isLoading, setLoading] = React.useState<boolean>(true);\r\n\r\n    const [groups, setGroups] = React.useState<GroupModel[]>([]);\r\n    const [years, setYears] = React.useState<number[]>([]);\r\n\r\n    const [group, setGroup] = React.useState<GroupModel>();\r\n    const [month, setMonth] = React.useState<number>(new Date().getMonth());\r\n    const [year, setYear] = React.useState<number>(0);\r\n\r\n    React.useEffect(() => {\r\n        if (!isReady) {\r\n            return;\r\n        }\r\n\r\n        const jsonString = JSON.stringify(queryString.parse(location.search));\r\n        const searchParams = JSON.parse(jsonString) as SearchModel;\r\n        setLoading(true);\r\n\r\n        const setup = async () => {\r\n            let groupsResults: GroupModel[];\r\n            let groupResults: GroupModel | undefined;\r\n            let monthResults: number;\r\n            let yearsResults: number[];\r\n            let yearResults: number;\r\n\r\n            if (groups.length > 0) {\r\n                groupsResults = groups;\r\n            } else {\r\n                try {\r\n                    groupsResults = await new GroupService(config).getAll(user?.uid ?? '');\r\n                } catch {\r\n                    groupsResults = [];\r\n                }\r\n\r\n                console.log('load again ', groupsResults);\r\n            }\r\n\r\n            const lastGroup = localStorage.getItem('group') as string;\r\n            setGroups(groupsResults);\r\n            if (hasValue(searchParams.group) && groupsResults.some(x => x.id === +searchParams.group)) {\r\n                groupResults = groupsResults.find(x => x.id === +searchParams.group) as GroupModel;\r\n            } else if (hasValue(lastGroup) && groupsResults.some(x => x.id === +lastGroup)) {\r\n                groupResults = groupsResults.find(x => x.id === +lastGroup) as GroupModel;\r\n            } else if (hasValue(groupsResults)) {\r\n                groupResults = groupsResults[0];\r\n            } else {\r\n                // groupResults = {} as Partial<GroupModel>;\r\n                // show error - does not have groups loaded\r\n            }\r\n\r\n            setGroup(groupResults);\r\n            localStorage.setItem('group', groupResults?.id.toString() as string);\r\n\r\n            const lastMonth = localStorage.getItem('month') as string;\r\n            if (hasValue(searchParams.month) && searchParams.month >= 1 && searchParams.month <= 12) {\r\n                monthResults = searchParams.month;\r\n            } else if (hasValue(lastMonth) && +lastMonth >= 1 && +lastMonth <= 12) {\r\n                monthResults = +lastMonth;\r\n            } else {\r\n                monthResults = new Date().getMonth();\r\n            }\r\n            setMonth(monthResults);\r\n            localStorage.setItem('month', monthResults.toString());\r\n\r\n            if (years.length > 0) {\r\n                yearsResults = years;\r\n            } else {\r\n                try {\r\n                    yearsResults = await new ExpenseService(config).getYears(groupResults?.id ?? 0);\r\n                } catch {\r\n                    yearsResults = [];\r\n                }\r\n            }\r\n\r\n            // TODO get years from expenses\r\n            const lastYear = localStorage.getItem('year') as string;\r\n            setYears(yearsResults);\r\n            if (hasValue(searchParams.year) && yearsResults.some(x => x === +searchParams.year)) {\r\n                yearResults = searchParams.year;\r\n            } else if (hasValue(lastYear) && yearsResults.some(x => x === +lastYear)) {\r\n                yearResults = +lastYear;\r\n            } else {\r\n                yearResults = new Date().getFullYear();\r\n            }\r\n            setYear(yearResults);\r\n            localStorage.setItem('year', yearResults.toString());\r\n\r\n            history.push({\r\n                pathname: location.pathname,\r\n                search: queryString.stringify({\r\n                    group: groupResults?.id,\r\n                    month: monthResults,\r\n                    year: yearResults\r\n                })\r\n            });\r\n\r\n            setLoading(false);\r\n        };\r\n        setup();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [config, history, location, isReady, user]);\r\n\r\n    return (\r\n        <>\r\n            <globalContext.Provider\r\n                value={{\r\n                    isLoading: isLoading,\r\n\r\n                    groups: groups,\r\n                    years: years,\r\n\r\n                    group: group?.id ?? 0,\r\n                    month: month,\r\n                    year: year\r\n                }}\r\n            >\r\n                <Container className=\"mt-2\">\r\n                    <Switch>\r\n                        {isReady && <PrivateRoute key={Routes.group} path={Routes.group} component={GroupPage} />}\r\n                        {isReady && <PrivateRoute key={Routes.label} path={Routes.label} component={LabelPage} />}\r\n                        {isReady && <PrivateRoute key={Routes.expense} path={Routes.expense} component={ExpensePage} />}\r\n                        {isReady && (\r\n                            <PrivateRoute key={Routes.settings} path={Routes.settings} component={SettingsPage} />\r\n                        )}\r\n                        <Route key={Routes.auth} path={Routes.auth} component={AuthPage} />\r\n                        <Route key={Routes.home} exact path={Routes.home}>\r\n                            <>\r\n                                <h3>HOME</h3>\r\n                                <h6>Build Version: {config.buildVersion}</h6>\r\n                            </>\r\n                        </Route>\r\n                        <Route key={'*'} path=\"*\">\r\n                            <h1> 404 </h1>\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n            </globalContext.Provider>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\n\nimport { HeaderComponent } from '../components/header/header';\nimport { ConfigManager } from '../configurations/configManager';\nimport { ConfigModel } from '../models/config';\nimport { useAuth } from '../services/auth';\n\nimport { GlobalStyles } from './globalSyles';\nimport { darkTheme, lightTheme } from './theme';\nimport { hasValue } from '../helpers/util';\nimport { userContext } from '../contexts/user';\nimport { MainPage } from './main';\nimport { UserService } from '../services/user';\nimport { UserModel } from '../models/user';\n\nexport type AppProps = {};\n\nexport const AppPage: React.FC<AppProps> = React.memo((_props: AppProps) => {\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\n    const { user, initialising } = useAuth();\n    const [isDarkTheme, setDarkTheme] = React.useState<boolean>(\n        window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n    );\n    const [isReady, setReady] = React.useState<boolean>(false);\n\n    const handleDarkTheme = React.useCallback((dark: boolean) => {\n        setDarkTheme(dark);\n    }, []);\n\n    const theme = React.useMemo(() => {\n        let theme = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n        if (hasValue(localStorage.getItem('darkTheme'))) {\n            theme = JSON.parse(localStorage.getItem('darkTheme') as string);\n            setDarkTheme(theme);\n        }\n\n        if (hasValue(isDarkTheme) && isDarkTheme !== theme) {\n            theme = isDarkTheme as boolean;\n            setDarkTheme(theme);\n            localStorage.setItem('darkTheme', theme.toString());\n        }\n\n        return isDarkTheme ? darkTheme : lightTheme;\n    }, [isDarkTheme]);\n\n    React.useEffect(() => {\n        if (initialising || !user) {\n            return;\n        }\n\n        if (hasValue(user)) {\n            user.getIdTokenResult().then((value: any) => {\n                axios.defaults.headers.common.Authorization = value.token;\n                new UserService(config).addOrUpdate({\n                    id: user.uid,\n                    email: user.email,\n                    displayName: user.displayName,\n                    photoUrl: user.photoURL\n                } as UserModel);\n                setReady(true);\n            });\n        }\n    }, [user, initialising, config]);\n\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <>\n                    <GlobalStyles />\n                    <userContext.Provider\n                        value={{\n                            user: user,\n                            initialising: initialising,\n                            isReady: isReady,\n                            isDarkTheme: isDarkTheme ?? true,\n                            setDarkTheme: handleDarkTheme\n                        }}\n                    >\n                        {config.useHashRouter && (\n                            <HashRouter basename=\"/\">\n                                <HeaderComponent />\n                                <MainPage />\n                            </HashRouter>\n                        )}\n                        {!config.useHashRouter && (\n                            <BrowserRouter basename=\"/\">\n                                <HeaderComponent />\n                                <MainPage />\n                            </BrowserRouter>\n                        )}\n                    </userContext.Provider>\n                </>\n            </ThemeProvider>\n        </>\n    );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeApp } from 'firebase';\nimport * as serviceWorker from './serviceWorker';\n\nimport './configurations/i18n';\nimport './index.scss';\n\nimport { setConfiguration } from './configurations/configManager';\nimport { AppPage } from './pages/app';\nimport { getFirebaseConfig } from './configurations/firebase';\nimport { getValueOrDefault } from './helpers/util';\n\nconst config = setConfiguration();\n\n// initialize firebase\ninitializeApp({\n    ...getFirebaseConfig(\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_PROJECT, config.firebaseProject),\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_API_KEY, config.firebaseApiKey)\n    )\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppPage />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}