{"version":3,"sources":["serviceWorker.ts","configurations/i18n.ts","models/config.ts","helpers/util.ts","configurations/configManager.ts","pages/routes.ts","contexts/user.ts","services/auth.ts","helpers/user.ts","components/header/header.tsx","pages/globalSyles.js","pages/theme.ts","pages/auth/auth.tsx","contexts/global.ts","components/search/search.tsx","services/base.ts","pages/expense/expense.tsx","mockData/user.ts","mockData/group.ts","services/group.ts","services/user.ts","pages/group/groupModal.tsx","components/item/item.tsx","pages/group/group.tsx","pages/label/label.tsx","mockData/label.ts","services/label.ts","pages/label/labelModal.tsx","configurations/firebase.ts","pages/settings/settings.tsx","helpers/privateRouter.tsx","mockData/expense.ts","services/expense.ts","pages/main.tsx","pages/app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","resources","en","translation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","ApiType","hasValue","value","undefined","Array","isArray","length","getValueOrDefault","values","find","x","ConfigModel","apiUrl","buildVersion","requestDelay","firebaseApiKey","firebaseProject","useHashRouter","ConfigManager","configurationObject","config","get","configurationSettings","Object","assign","set","ApplicationConfiguration","freeze","Routes","home","auth","settings","group","label","expense","userContext","React","createContext","user","initialising","isReady","facebook","FacebookAuthProvider","loginWithFacebook","a","signInWithPopup","console","error","loginWithEmail","email","password","signInWithEmailAndPassword","getUserDisplayName","displayName","split","HeaderStyle","createGlobalStyle","HeaderComponent","memo","props","useContext","history","useHistory","useTranslation","t","handleRedirectTo","useCallback","path","search","push","pathname","handleLogout","firebase","signOut","setTimeout","authElement","useMemo","Nav","NavDropdown","title","id","Item","onClick","Divider","Link","Navbar","bg","variant","expand","Container","Brand","Toggle","aria-controls","Collapse","className","GlobalStyles","theme","body","text","toggleBorder","darkTheme","gradient","AuthStyle","AuthPage","useState","isLoading","setLoading","hasError","setError","setEmail","setPassword","handleFacebook","handleChangeEmail","target","handleChangePassword","handleLogin","Alert","key","Row","Col","xs","sm","Card","Title","Body","Button","Form","Group","controlId","Label","Control","type","placeholder","onChange","disabled","globalContext","groups","years","month","year","StatusCodes","SearchStyle","SearchComponent","global","months","setGroup","setMonth","setYear","isExpanded","setExpanded","useEffect","handleOnChangeGroup","event","handleOnChangeMonth","handleOnChangeYear","handleOnSearch","queryString","stringify","handleExpandCollapse","groupsOptions","map","name","monthsOptions","yearsOptions","headerElement","Spinner","data-testid","animation","role","size","selectedGroup","g","Accordion","Header","as","eventKey","ExpensePage","usersMockData","groupsMockData","users","groupsFullMockData","handleError","response","status","OK","data","headers","Promise","reject","ServiceBase","resolve","_reject","_resolve","url","params","axios","baseURL","this","withCredentials","process","Accept","Authorization","defaults","common","post","put","delete","GroupService","baseUrl","FIREBASE","LOCAL_STORAGE","TOTAL_FAKE","resolveMockData","userId","obj","UserService","GroupModalPage","setName","selectedUsers","setSelectedUsers","setUsers","isLoadingUsers","setLoadingUsers","isLoadingAction","setLoadingAction","handleOnChangeName","handleOnChangeUsers","from","selectedOptions","option","handleOnAction","update","onAction","add","show","getAll","runAsync","disabledAction","usersOption","u","uid","Modal","onHide","centered","closeButton","multiple","readOnly","Footer","ItemStyle","ItemComponent","DropdownButton","Dropdown","onEdit","onDelete","children","LabelGrapyType","GroupStyle","GroupPage","setGroups","showModal","setShowModal","refresh","setRefresh","handleOnAdd","handleOnEdit","handleOnDelete","remove","handleOnHide","getAllFull","setup","groupElements","index","indexUser","labelsMockData","groupId","labelsFullMockData","currValue","lastValue","avgValue","LabelService","LabelModalPage","projectId","LabelStyle","LabelPage","_props","labels","setLabels","setLabel","CURRENT_MONTH","graphType","setGrahType","handleOnGraphType","loadingElement","itemsElements","currValueClass","lastValueClass","toFixed","graphElement","dataChart","datasets","LAST_MONTH","borderWidth","options","plugins","colorschemes","scheme","width","height","Tabs","defaultActiveKey","Tab","ToggleButtonGroup","ToggleButton","AVERAGE","SettingsPage","PrivateRoute","Component","component","to","expensesMockData","yearsMockData","ExpenseService","MainPage","useLocation","setYears","Date","getMonth","jsonString","JSON","parse","searchParams","groupsResults","log","lastGroup","localStorage","getItem","some","groupResults","setItem","toString","lastMonth","monthResults","yearsResults","getYears","lastYear","yearResults","getFullYear","Provider","exact","AppPage","isDarkMode","currentUser","state","setState","unsubscribe","onAuthStateChanged","useAuth","setReady","getIdTokenResult","then","token","basename","overrides","configDefault","REACT_APP_API_URL","setConfiguration","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2423649d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport translationEN from '../locales/en.json';\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: translationEN\r\n    }\r\n};\r\n\r\ni18n.use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: 'en',\r\n        fallbackLng: 'en', // use en if detected lng is not available\r\n\r\n        // keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","export enum ApiType {\r\n    FIREBASE = 'FIREBASE',\r\n    LOCAL_STORAGE = 'LOCAL_STORAGE',\r\n    TOTAL_FAKE = 'TOTAL_FAKE',\r\n    TEST_API = 'TEST_API'\r\n}\r\n\r\nexport class ConfigModel {\r\n    /** api backend url */\r\n    apiUrl: string = 'TOTAL_FAKE';\r\n\r\n    /** build version */\r\n    buildVersion: string = 'local';\r\n\r\n    /** request delay time */\r\n    requestDelay: number = 1000;\r\n\r\n    /** firebase */\r\n    firebaseApiKey: string = 'AIzaSyDMDE7eTQbjwkQglMJf5KnFtMr48-pAoVM';\r\n    firebaseProject: string = 'lfmachadodasilva-dev';\r\n\r\n    useHashRouter: boolean = true;\r\n}\r\n","export const hasValue = (value: any): boolean => {\r\n    if (value === null || value === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (typeof value === 'string' || Array.isArray(value)) {\r\n        return value.length > 0;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n// export const getValueOrDefault = (value?: string, defaultValue?: string) => {\r\n//     return hasValue(value) ? value : defaultValue;\r\n// };\r\n\r\nexport const getValueOrDefault = (...values: any[]) => {\r\n    return values.find(x => hasValue(x));\r\n};\r\n","import config, { Options } from 'react-global-configuration';\r\n\r\nimport { getValueOrDefault } from '../helpers/util';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport class ConfigManager {\r\n    static set = (configurationSettings: ConfigModel) => {\r\n        config.set({ ApplicationConfiguration: configurationSettings }, { freeze: false } as Options);\r\n    };\r\n\r\n    static get(): ConfigModel {\r\n        const configurationObject = config.get('ApplicationConfiguration');\r\n\r\n        const configurationSettings = new ConfigModel();\r\n        Object.assign(configurationSettings, configurationObject);\r\n\r\n        return configurationSettings;\r\n    }\r\n}\r\n\r\nexport const setConfiguration = (overrides: Partial<ConfigModel> = {}): ConfigModel => {\r\n    let configDefault: ConfigModel = new ConfigModel();\r\n\r\n    configDefault = {\r\n        ...configDefault,\r\n        buildVersion: getValueOrDefault(\r\n            process.env.REACT_APP_BUILD_VERSION,\r\n            overrides.buildVersion,\r\n            configDefault.buildVersion\r\n        ),\r\n        apiUrl: getValueOrDefault(process.env.REACT_APP_API_URL, overrides.apiUrl, configDefault.apiUrl)\r\n    };\r\n\r\n    ConfigManager.set({ ...configDefault, ...overrides });\r\n\r\n    return ConfigManager.get();\r\n};\r\n","export class Routes {\r\n    static home = '/';\r\n    static auth = '/auth';\r\n    static settings = '/settings';\r\n    static group = '/group';\r\n    static label = '/label';\r\n    static expense = '/expense';\r\n}\r\n","import React from 'react';\r\nimport { User } from 'firebase/app';\r\n\r\ninterface UserContext {\r\n    user: User | null;\r\n    initialising: boolean;\r\n    isReady: boolean;\r\n}\r\n\r\nexport const userContext = React.createContext<UserContext>({\r\n    user: null,\r\n    initialising: false,\r\n    isReady: false\r\n});\r\n","import React, { useState } from 'react';\r\nimport firebase, { auth } from 'firebase/app';\r\nimport 'firebase/auth'; // If using Firebase auth\r\n// import { UserService } from './userService';\r\n// import { ConfigurationManager } from '../configurations/configurationManager';\r\n// import { UserModel } from '../models/user';\r\n\r\nexport const useAuth = () => {\r\n    const [state, setState] = useState(() => {\r\n        const user = auth().currentUser;\r\n        return { initialising: !user, user };\r\n    });\r\n\r\n    const onChange = (user: firebase.User | null) => {\r\n        setState({ initialising: false, user });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // listen for auth state changes\r\n        const unsubscribe = auth().onAuthStateChanged(onChange);\r\n        // unsubscribe to the listener when unmounting\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return state;\r\n};\r\n\r\nconst facebook = new auth.FacebookAuthProvider();\r\n\r\nexport const loginWithFacebook = async () => {\r\n    try {\r\n        return await auth().signInWithPopup(facebook);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const loginWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().signInWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const createUserWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().createUserWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const resetPassword = async (email: string) => {\r\n    try {\r\n        return await auth().sendPasswordResetEmail(email);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\n// export const updateUser = async (user: firebase.User | null, displayName: string) => {\r\n//     try {\r\n//         await user?.updateProfile({ displayName: displayName });\r\n\r\n//         const config = ConfigurationManager.get();\r\n//         const userObj = user as firebase.User;\r\n\r\n//         return await new UserService(config).addOrUpdate({\r\n//             id: userObj.uid,\r\n//             email: userObj.email,\r\n//             displayName: userObj.displayName,\r\n//             photoUrl: userObj.photoURL\r\n//         } as UserModel);\r\n//     } catch (err) {\r\n//         console.error(err);\r\n//         throw err;\r\n//     }\r\n// };\r\n\r\nexport const signOut = () => firebase.auth().signOut();\r\n","import { UserModel } from '../models/user';\r\nimport { hasValue } from './util';\r\n\r\nexport const getUserDisplayName = (user: firebase.User | UserModel) => {\r\n    if (!hasValue(user)) {\r\n        return '';\r\n    }\r\n\r\n    if (hasValue(user.displayName)) {\r\n        return user.displayName?.split(' ')[0];\r\n    }\r\n\r\n    return user.email?.split('@')[0];\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Routes } from '../../pages/routes';\r\nimport { userContext } from '../../contexts/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { signOut } from '../../services/auth';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\n\r\nconst HeaderStyle = createGlobalStyle`\r\n        .navbar-brand {\r\n            cursor: pointer;\r\n        };\r\n    `;\r\n\r\nexport type HeaderProps = {};\r\n\r\nexport const HeaderComponent: React.FC<HeaderProps> = React.memo((props: HeaderProps) => {\r\n    const { user, initialising } = useContext(userContext);\r\n    const history = useHistory();\r\n    const [t] = useTranslation();\r\n\r\n    const handleRedirectTo = React.useCallback(\r\n        (path: string) => {\r\n            if (hasValue(history.location.search)) {\r\n                history.push({ pathname: path, search: history.location.search });\r\n            } else {\r\n                history.push(path);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    const handleLogout = React.useCallback(async () => {\r\n        await signOut();\r\n        setTimeout(() => history.push(Routes.home));\r\n    }, [history]);\r\n\r\n    const authElement = React.useMemo(() => {\r\n        if (hasValue(user)) {\r\n            const displayName = getUserDisplayName(user as firebase.User);\r\n            return (\r\n                <Nav>\r\n                    <NavDropdown title={displayName} id=\"collasible-nav-dropdown\">\r\n                        <NavDropdown.Item onClick={() => handleRedirectTo(Routes.settings)}>\r\n                            {t('HEADER.SETTINGS')}\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={handleLogout}>{t('HEADER.LOGOUT')}</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Nav>\r\n                <Nav.Link onClick={() => handleRedirectTo(Routes.auth)}>{t('HEADER.LOGIN')}</Nav.Link>\r\n            </Nav>\r\n        );\r\n    }, [user, handleRedirectTo, handleLogout, t]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderStyle />\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\r\n                <Container>\r\n                    <Navbar.Brand onClick={() => handleRedirectTo(Routes.home)}>{t('HEADER.TITLE')}</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"mr-auto \">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.group)}>{t('HEADER.GROUP')}</Nav.Link>\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.label)}>{t('HEADER.LABEL')}</Nav.Link>\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.expense)}>{t('HEADER.EXPENSE')}</Nav.Link>\r\n                        </Nav>\r\n                        {!initialising && authElement}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n});\r\n","import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .card {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .card-header {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n\r\n  .form-control {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .modal-content {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-header {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-body {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-footer {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .close {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n    text-shadow: none;\r\n  };\r\n\r\n  .nav-tabs .nav-link.active, .nav-tabs .nav-item.show .nav-link  {\r\n      background-color: ${({ theme }) => theme.body};\r\n      color: ${({ theme }) => theme.text};\r\n      border-color: ${({ theme }) => theme.toggleBorder};\r\n  };\r\n  `","export const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#363537',\r\n    toggleBorder: '#595959',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)'\r\n};\r\n\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#646464',\r\n    gradient: 'linear-gradient(#091236, #1E215D)'\r\n};\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { Routes } from '../routes';\r\nimport { loginWithEmail, loginWithFacebook } from '../../services/auth';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst AuthStyle = createGlobalStyle`\r\n    `;\r\n\r\nexport type AuthProps = {};\r\n\r\nexport const AuthPage: React.FC<AuthProps> = React.memo((props: AuthProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [hasError, setError] = React.useState<boolean>(false);\r\n\r\n    const [email, setEmail] = React.useState<string>('');\r\n    const [password, setPassword] = React.useState<string>('');\r\n\r\n    const handleFacebook = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError(false);\r\n        try {\r\n            await loginWithFacebook();\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch (error) {\r\n            setError(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [history]);\r\n\r\n    const handleChangeEmail = React.useCallback((value: any) => {\r\n        setEmail(value.target.value);\r\n    }, []);\r\n    const handleChangePassword = React.useCallback((value: any) => {\r\n        setPassword(value.target.value);\r\n    }, []);\r\n\r\n    const handleLogin = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        try {\r\n            await loginWithEmail(email, password);\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch {\r\n            setError(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [email, password, history]);\r\n\r\n    return (\r\n        <>\r\n            <AuthStyle />\r\n            <Container className=\"p-4\">\r\n                {hasError && (\r\n                    <Alert key=\"AUTH.ERROR\" variant=\"danger\">\r\n                        {t('AUTH.ERROR')}\r\n                    </Alert>\r\n                )}\r\n\r\n                <Row>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_FACEBOOK')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Button onClick={handleFacebook}>{t('AUTH.FACEBOOK')}</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_EMAIL')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>{t('AUTH.EMAIL')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder={t('AUTH.EMAIL_PLACEHOLDER')}\r\n                                            onChange={handleChangeEmail}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>{t('AUTH.PASSWORD')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder={t('AUTH.PASSWORD_PLACEHOLDER')}\r\n                                            onChange={handleChangePassword}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Button variant=\"primary\" onClick={handleLogin} disabled={isLoading}>\r\n                                        {t('AUTH.LOGIN')}\r\n                                    </Button>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { GroupModel } from '../models/group';\r\n\r\nexport interface GlobalContext {\r\n    isLoading: boolean;\r\n\r\n    groups: GroupModel[];\r\n    years: number[];\r\n\r\n    group: number;\r\n    month: number;\r\n    year: number;\r\n}\r\n\r\nexport const globalContext = React.createContext<GlobalContext>({\r\n    isLoading: true,\r\n\r\n    groups: [],\r\n    years: [],\r\n\r\n    group: 0,\r\n    month: 0,\r\n    year: 0\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { globalContext } from '../../contexts/global';\r\n\r\nexport type SearchProps = {};\r\n\r\nconst SearchStyle = createGlobalStyle`\r\n    .search-component {\r\n        .card-header {\r\n            padding: 5px;\r\n            border: none;\r\n        }\r\n        .card-body {\r\n            padding-top: 0;\r\n            padding-bottom: 0;\r\n            padding-right: 10px;\r\n            padding-left: 10px;\r\n        }\r\n        .search-header {\r\n            margin: 0px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SearchComponent: React.FC<SearchProps> = React.memo((props: SearchProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n    const global = useContext(globalContext);\r\n\r\n    const [months] = React.useState<number[]>([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\r\n    const [group, setGroup] = React.useState<number>(global.group);\r\n    const [month, setMonth] = React.useState<number>(global.month);\r\n    const [year, setYear] = React.useState<number>(global.year);\r\n    const [isExpanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n    React.useEffect(() => {\r\n        setGroup(global.group);\r\n        setMonth(global.month);\r\n        setYear(global.year);\r\n    }, [global.group, global.month, global.year]);\r\n\r\n    const handleOnChangeGroup = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setGroup(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeMonth = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setMonth(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeYear = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setYear(event.target.value as number);\r\n    }, []);\r\n\r\n    const handleOnSearch = React.useCallback(() => {\r\n        history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify({\r\n                group: group,\r\n                month: month,\r\n                year: year\r\n            })\r\n        });\r\n    }, [history, group, month, year]);\r\n\r\n    const handleExpandCollapse = React.useCallback(() => {\r\n        setExpanded(!isExpanded);\r\n    }, [isExpanded]);\r\n\r\n    const groupsOptions = React.useMemo(\r\n        () =>\r\n            global.groups.map(x => (\r\n                <option key={'GROUP_' + x.id} value={x.id}>\r\n                    {x.name}\r\n                </option>\r\n            )),\r\n        [global.groups]\r\n    );\r\n\r\n    const monthsOptions = React.useMemo(\r\n        () =>\r\n            months.map(x => (\r\n                <option key={'MONTH_' + x} value={x}>\r\n                    {t('MONTHS.' + x)}\r\n                </option>\r\n            )),\r\n        [months, t]\r\n    );\r\n\r\n    const yearsOptions = React.useMemo(\r\n        () =>\r\n            global.years.map(x => (\r\n                <option key={'YEAR_' + x} value={x}>\r\n                    {x}\r\n                </option>\r\n            )),\r\n        [global.years]\r\n    );\r\n\r\n    const headerElement = React.useMemo(() => {\r\n        if (global.isLoading) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <Spinner data-testid=\"search-loading\" animation=\"border\" role=\"status\" size=\"sm\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (isExpanded) {\r\n            return (\r\n                <strong>\r\n                    <p className=\"search-header\">{t('SEARCH.HEADER')}</p>\r\n                </strong>\r\n            );\r\n        }\r\n\r\n        const selectedGroup = global.groups.find(g => g.id === group);\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-around\">\r\n                <p className=\"search-header\">{selectedGroup?.name}</p>\r\n                <p className=\"search-header\">{t('MONTHS.' + month)}</p>\r\n                <p className=\"search-header\">{year}</p>\r\n            </div>\r\n        );\r\n    }, [isExpanded, global.isLoading, global.groups, group, month, year, t]);\r\n\r\n    return (\r\n        <div className=\"search-component mb-2\">\r\n            <SearchStyle />\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={handleExpandCollapse}>\r\n                            {headerElement}\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs={12} sm={5}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.GROUP')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={group}\r\n                                            onChange={handleOnChangeGroup}\r\n                                        >\r\n                                            {groupsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.MONTH')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={month}\r\n                                            onChange={handleOnChangeMonth}\r\n                                        >\r\n                                            {monthsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={3}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.YEAR')}</Form.Label>\r\n                                        <Form.Control as=\"select\" size=\"sm\" value={year} onChange={handleOnChangeYear}>\r\n                                            {yearsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Button className=\"mb-2\" onClick={handleOnSearch} size=\"sm\">\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n});\r\n","import axios, { AxiosError } from 'axios';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport enum StatusCodes {\r\n    OK = 200,\r\n    ERROR = 500\r\n}\r\n\r\nconst handleError = async (error: AxiosError) => {\r\n    if (error.response && error.response.status >= StatusCodes.OK) {\r\n        if (process.env.NODE_ENV !== 'test') {\r\n            // avoid show this when is running test\r\n            console.error('Request Failed:', error.config);\r\n            console.error('Status:', error.response.status);\r\n            console.error('Data:', error.response.data);\r\n            console.error('Headers:', error.response.headers);\r\n        }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n};\r\n\r\nexport class ServiceBase {\r\n    constructor(protected config: ConfigModel) {}\r\n\r\n    protected async resolveMockData<T>(data: T): Promise<T> {\r\n        return new Promise((resolve, _reject) => {\r\n            setTimeout(() => {\r\n                resolve(data);\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async rejectMockData<T>(): Promise<T> {\r\n        return new Promise((_resolve, reject) => {\r\n            setTimeout(() => {\r\n                reject();\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async get<TResponse>(url: string, params?: { [key: string]: any }): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.get(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async post<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.post(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async put<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.put(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async delete<TResponse>(url: string): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.delete(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                }\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { SearchComponent } from '../../components/search/search';\r\n\r\nexport type ExpenseProps = {};\r\n\r\nexport const ExpensePage: React.FC<ExpenseProps> = React.memo((props: ExpenseProps) => {\r\n    return (\r\n        <>\r\n            Expense page\r\n            <br></br>\r\n            <SearchComponent />\r\n        </>\r\n    );\r\n});\r\n","import { UserModel } from '../models/user';\r\n\r\nexport const usersMockData: UserModel[] = [\r\n    { id: '1', displayName: 'User 1', email: 'user1@email.com' },\r\n    { id: '2', displayName: 'User 2', email: 'user2@email.com' },\r\n    { id: '3', displayName: 'User 3', email: 'user3@email.com' },\r\n    { id: '4', displayName: 'User 4', email: 'user4@email.com' },\r\n    { id: '5', displayName: 'User 5', email: 'user5@email.com' }\r\n];\r\n","import { GroupFullModel, GroupModel } from '../models/group';\r\nimport { usersMockData } from './user';\r\n\r\nexport const groupsMockData: GroupModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData.map(x => x.id) },\r\n    { id: 2, name: 'Group 2', users: usersMockData.map(x => x.id) },\r\n    { id: 3, name: 'Group 3', users: usersMockData.map(x => x.id) },\r\n    { id: 4, name: 'Group 4', users: usersMockData.map(x => x.id) }\r\n];\r\n\r\nexport const groupsFullMockData: GroupFullModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData },\r\n    { id: 2, name: 'Group 2', users: usersMockData },\r\n    { id: 3, name: 'Group 3', users: usersMockData },\r\n    { id: 4, name: 'Group 4', users: usersMockData }\r\n];\r\n","import { groupsFullMockData, groupsMockData } from '../mockData/group';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { GroupFullModel, GroupModel } from '../models/group';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class GroupService extends ServiceBase {\r\n    private baseUrl = '/api/group';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(user: string): Promise<GroupFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsFullMockData);\r\n            //return this.rejectMockData();\r\n        }\r\n        return await this.get<GroupFullModel[]>(this.baseUrl + '/full', { user: user });\r\n    }\r\n\r\n    async getAll(userId: string): Promise<GroupModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData);\r\n        }\r\n        return await this.get<GroupModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<GroupModel>): Promise<GroupModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData[0]);\r\n        }\r\n        return await this.post<GroupModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: GroupModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import { usersMockData } from '../mockData/user';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { UserModel } from '../models/user';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class UserService extends ServiceBase {\r\n    private baseUrl = '/api/user';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAll(): Promise<UserModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(usersMockData);\r\n        }\r\n        return await this.get<UserModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<UserModel>): Promise<UserModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(usersMockData[0]);\r\n        }\r\n        return await this.post<UserModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: UserModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: string): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { UserService } from '../../services/user';\r\nimport { UserModel } from '../../models/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\n\r\nexport type GroupModalProps = {\r\n    show: boolean;\r\n    group?: GroupFullModel;\r\n    onHide: () => void;\r\n    onAction: () => void;\r\n};\r\n\r\nexport const GroupModalPage: React.FC<GroupModalProps> = React.memo((props: GroupModalProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { user } = useContext(userContext);\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [name, setName] = React.useState<string>('');\r\n    const [selectedUsers, setSelectedUsers] = React.useState<string[]>([]);\r\n    const [users, setUsers] = React.useState<UserModel[]>([]);\r\n    const [isLoadingUsers, setLoadingUsers] = React.useState(false);\r\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\r\n\r\n    const handleOnChangeName = React.useCallback(event => {\r\n        setName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnChangeUsers = React.useCallback(event => {\r\n        setSelectedUsers(Array.from(event.target.selectedOptions, (option: any) => option.value));\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoadingAction(true);\r\n\r\n        if (hasValue(props.group)) {\r\n            try {\r\n                await new GroupService(config).update({\r\n                    id: props.group?.id as number,\r\n                    name: name,\r\n                    users: selectedUsers\r\n                });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        } else {\r\n            setLoadingAction(true);\r\n            try {\r\n                await new GroupService(config).add({ name: name, users: selectedUsers });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        }\r\n    }, [name, selectedUsers, t, config, props]);\r\n\r\n    React.useEffect(() => {\r\n        if (!props.show) {\r\n            return;\r\n        }\r\n\r\n        if (props.group) {\r\n            setName(props.group?.name);\r\n            setSelectedUsers(props.group?.users.map(x => x.id));\r\n        } else {\r\n            setName('');\r\n            setSelectedUsers([]);\r\n        }\r\n    }, [props]);\r\n\r\n    React.useEffect(() => {\r\n        const runAsync = async () => {\r\n            setLoadingUsers(true);\r\n            setError('');\r\n            try {\r\n                const data = await new UserService(config).getAll();\r\n                setUsers(data);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingUsers(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [t, config]);\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (isLoadingAction) {\r\n            return true;\r\n        }\r\n\r\n        if (hasValue(error)) {\r\n            return true;\r\n        }\r\n\r\n        if (!hasValue(name) || !hasValue(selectedUsers)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [error, name, selectedUsers, isLoadingAction]);\r\n\r\n    const usersOption = React.useMemo(\r\n        () =>\r\n            users.map(u =>\r\n                user?.uid === u.id ? (\r\n                    <option key={u.id} value={u.id}>\r\n                        {t('GROUP.YOU')}\r\n                    </option>\r\n                ) : (\r\n                    <option key={u.id} value={u.id}>{`${u.displayName} (${u.email})`}</option>\r\n                )\r\n            ),\r\n        [users, user, t]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_TITLE') : t('GROUP.MODAL.ADD_TITLE')}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {hasValue(error) && (\r\n                        <Alert key=\"GROUP.MODAL.ERROR\" variant=\"danger\">\r\n                            {error}\r\n                        </Alert>\r\n                    )}\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>{t('GROUP.MODAL.NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-name-field\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                placeholder={t('GROUP.MODAL.NAME_PLACEHOLDER')}\r\n                                onChange={handleOnChangeName}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                            <Form.Label>{t('GROUP.MODAL.USERS')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-users-field\"\r\n                                as=\"select\"\r\n                                multiple\r\n                                value={selectedUsers}\r\n                                readOnly={isLoadingUsers && hasValue(error)}\r\n                                onChange={handleOnChangeUsers}\r\n                            >\r\n                                {usersOption}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_ACTION') : t('GROUP.MODAL.ADD_ACTION')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport interface ItemProps {\r\n    id: number;\r\n    name: string;\r\n    onEdit: (id: number) => void;\r\n    onDelete: (id: number) => void;\r\n}\r\n\r\nconst ItemStyle = createGlobalStyle`\r\n    .item-component {\r\n        .card-body {\r\n            padding: 10px;\r\n        }\r\n    };\r\n    `;\r\n\r\nexport const ItemComponent: React.FC<React.PropsWithChildren<ItemProps>> = React.memo(\r\n    (props: React.PropsWithChildren<ItemProps>) => {\r\n        const [t] = useTranslation();\r\n\r\n        return (\r\n            <div className=\"item-component\">\r\n                <ItemStyle />\r\n                <Card key={`${props.id}_${props.name}`} className=\"mb-1\">\r\n                    <Card.Body>\r\n                        <Card.Title className=\"m-0\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                {props.name}\r\n                                <DropdownButton size=\"sm\" variant=\"secondary\" title=\"\" id={`menu-${props.id}`}>\r\n                                    <Dropdown.Item eventKey=\"1\" onClick={() => props.onEdit(props.id)}>\r\n                                        {t('LABEL.EDIT')}\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item eventKey=\"2\" onClick={() => props.onDelete(props.id)}>\r\n                                        {t('LABEL.DELETE')}\r\n                                    </Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </div>\r\n                        </Card.Title>\r\n                        <Card.Body>{props.children}</Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { GroupModalPage } from './groupModal';\r\nimport { ItemComponent } from '../../components/item/item';\r\n\r\nconst GroupStyle = createGlobalStyle`\r\n    `;\r\n\r\nexport type GroupProps = {};\r\n\r\nexport const GroupPage: React.FC<GroupProps> = React.memo((props: GroupProps) => {\r\n    const [t] = useTranslation();\r\n    const { user } = useContext(userContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [group, setGroup] = React.useState<GroupFullModel>();\r\n    const [groups, setGroups] = React.useState<GroupFullModel[]>([]);\r\n    const [error, setError] = React.useState<string>('');\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setGroup(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setGroup(groups.find(g => g.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [groups]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new GroupService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            }\r\n        },\r\n        [config, refresh, t]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n\r\n    React.useEffect(() => {\r\n        const setup = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new GroupService(config).getAllFull(user?.uid ?? '');\r\n                setGroups(data);\r\n            } catch {\r\n                setGroups([]);\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        setup();\r\n    }, [config, user, refresh, t]);\r\n\r\n    const groupElements = React.useMemo(\r\n        () =>\r\n            groups.map((group, index) => (\r\n                <ItemComponent\r\n                    key={group.id}\r\n                    id={group.id}\r\n                    name={group.name}\r\n                    onEdit={handleOnEdit}\r\n                    onDelete={handleOnDelete}\r\n                >\r\n                    <div key={`GROUP_USERS_${index}`} className=\"d-flex flex-wrap justify-content-start\">\r\n                        {group.users.map((user, indexUser) => (\r\n                            <small key={`GROUP_SMALL_${index}_${indexUser}`} className=\"mr-2\">\r\n                                {getUserDisplayName(user)}\r\n                            </small>\r\n                        ))}\r\n                    </div>\r\n                </ItemComponent>\r\n            )),\r\n        [groups, handleOnEdit, handleOnDelete]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <GroupStyle />\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n                <h4>{t('GROUP.TITLE')}</h4>\r\n                <Button onClick={handleOnAdd}>{t('GROUP.ADD')}</Button>\r\n            </div>\r\n            {hasValue(error) && (\r\n                <Alert key=\"GROUP.ERROR\" variant=\"danger\">\r\n                    {error}\r\n                </Alert>\r\n            )}\r\n            {isLoading && (\r\n                <div className=\"d-flex justify-content-center m-4\">\r\n                    <Spinner className=\"group-loading\" animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )}\r\n            {!isLoading && groupElements}\r\n            <GroupModalPage show={showModal} group={group} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport 'chartjs-plugin-colorschemes';\r\n\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nimport { SearchComponent } from '../../components/search/search';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { LabelFullModel } from '../../models/label';\r\nimport { LabelService } from '../../services/label';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { ItemComponent } from '../../components/item/item';\r\nimport { LabelModalPage } from './labelModal';\r\n\r\nexport type LabelProps = {};\r\n\r\nenum LabelGrapyType {\r\n    CURRENT_MONTH = 1,\r\n    LAST_MONTH,\r\n    AVERAGE\r\n}\r\n\r\nconst LabelStyle = createGlobalStyle`\r\n    .no-margin {\r\n        margin: 0px;\r\n    };\r\n    canvas {\r\n        max-width: 500px;\r\n    };\r\n    .red-text {\r\n        color: #dc3545;\r\n    }\r\n`;\r\n\r\nexport const LabelPage: React.FC<LabelProps> = React.memo((_props: LabelProps) => {\r\n    const [t] = useTranslation();\r\n    const global = useContext(globalContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [labels, setLabels] = React.useState<LabelFullModel[]>([]);\r\n    const [label, setLabel] = React.useState<LabelFullModel>();\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n    const [graphType, setGrahType] = React.useState(LabelGrapyType.CURRENT_MONTH);\r\n\r\n    // #region main\r\n    React.useEffect(() => {\r\n        if (global.isLoading) {\r\n            return;\r\n        }\r\n\r\n        const runAsync = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new LabelService(config).getAllFull(global.group, global.month, global.year);\r\n                setLabels(data);\r\n            } catch {\r\n                setLabels([]);\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [global, config, t, refresh]);\r\n    // #endregion\r\n\r\n    // #region handles\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setLabel(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setLabel(labels.find(g => g.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [labels]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new LabelService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            }\r\n        },\r\n        [config, t, refresh]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n\r\n    const handleOnGraphType = React.useCallback((value: number) => {\r\n        setGrahType(value);\r\n    }, []);\r\n    // #endregion\r\n\r\n    // #region loading\r\n    const loadingElement = React.useMemo(() => {\r\n        return (\r\n            <div className=\"m-2 text-center\">\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            </div>\r\n        );\r\n    }, []);\r\n    // #endregion\r\n\r\n    // #region items\r\n    const itemsElements = React.useMemo(\r\n        () =>\r\n            isLoading\r\n                ? loadingElement\r\n                : labels.map(label => {\r\n                      const currValueClass =\r\n                          label.currValue > label.lastValue || label.currValue > label.avgValue ? 'red-text' : '';\r\n                      const lastValueClass = label.lastValue > label.avgValue ? 'red-text' : '';\r\n\r\n                      return (\r\n                          <ItemComponent\r\n                              key={label.id}\r\n                              id={label.id}\r\n                              name={label.name}\r\n                              onEdit={handleOnEdit}\r\n                              onDelete={handleOnDelete}\r\n                          >\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                  <p className={`no-margin ${currValueClass}`}>\r\n                                      <small>{t('LABEL.CURRENT_MONTH')}</small>\r\n                                      <br></br>\r\n                                      {label.currValue.toFixed(2)}\r\n                                  </p>\r\n                                  <p className={`no-margin ${lastValueClass}`}>\r\n                                      <small>{t('LABEL.LAST_MONTH')}</small>\r\n                                      <br></br>\r\n                                      {label.lastValue.toFixed(2)}\r\n                                  </p>\r\n                                  <p className=\"no-margin\">\r\n                                      <small>{t('LABEL.AVERAGE')}</small>\r\n                                      <br></br>\r\n                                      {label.avgValue.toFixed(2)}\r\n                                  </p>\r\n                              </div>\r\n                          </ItemComponent>\r\n                      );\r\n                  }),\r\n        [isLoading, loadingElement, labels, handleOnEdit, handleOnDelete, t]\r\n    );\r\n    // #endregion\r\n\r\n    // #region graph\r\n    const graphElement = React.useMemo(() => {\r\n        if (isLoading) {\r\n            return loadingElement;\r\n        }\r\n\r\n        let dataChart =\r\n            labels.length > 0\r\n                ? {\r\n                      labels: labels.map(label => label.name),\r\n                      datasets: [\r\n                          {\r\n                              data: labels.map(label =>\r\n                                  graphType === LabelGrapyType.CURRENT_MONTH\r\n                                      ? label.currValue\r\n                                      : graphType === LabelGrapyType.LAST_MONTH\r\n                                      ? label.lastValue\r\n                                      : label.avgValue\r\n                              ),\r\n                              borderWidth: 0\r\n                          }\r\n                      ]\r\n                  }\r\n                : {\r\n                      labels: ['Empty'],\r\n                      datasets: [\r\n                          {\r\n                              data: [1],\r\n                              borderWidth: 0\r\n                          }\r\n                      ]\r\n                  };\r\n\r\n        return (\r\n            <>\r\n                <Pie\r\n                    key={graphType}\r\n                    data={dataChart}\r\n                    options={{\r\n                        plugins: {\r\n                            colorschemes: {\r\n                                scheme: 'office.Excel16'\r\n                            }\r\n                        }\r\n                    }}\r\n                    width={100}\r\n                    height={100}\r\n                />\r\n            </>\r\n        );\r\n    }, [loadingElement, isLoading, labels, graphType]);\r\n    // #endregion\r\n\r\n    return (\r\n        <>\r\n            <LabelStyle />\r\n            <SearchComponent />\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n                <h4>{t('LABEL.TITLE')}</h4>\r\n                <Button onClick={handleOnAdd}>{t('LABEL.ADD')}</Button>\r\n            </div>\r\n            {hasValue(error) && (\r\n                <Alert key=\"LABEL.ERROR\" variant=\"danger\">\r\n                    {error}\r\n                </Alert>\r\n            )}\r\n\r\n            <Tabs defaultActiveKey=\"items\">\r\n                <Tab eventKey=\"items\" title={t('LABEL.TAB_ITEMS')}>\r\n                    {itemsElements}\r\n                </Tab>\r\n                <Tab eventKey=\"graph\" title={t('LABEL.TAB_GRAPH')}>\r\n                    <div className=\"m-2 d-flex justify-content-center\">\r\n                        <ToggleButtonGroup type=\"radio\" name=\"options\" value={graphType} onChange={handleOnGraphType}>\r\n                            <ToggleButton value={LabelGrapyType.CURRENT_MONTH}>{t('LABEL.CURRENT_MONTH')}</ToggleButton>\r\n                            <ToggleButton value={LabelGrapyType.LAST_MONTH}>{t('LABEL.LAST_MONTH')}</ToggleButton>\r\n                            <ToggleButton value={LabelGrapyType.AVERAGE}>{t('LABEL.AVERAGE')}</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        {/* ignore chart.js on testing */}\r\n                        {process.env.NODE_ENV !== 'test' && graphElement}\r\n                    </div>\r\n                </Tab>\r\n            </Tabs>\r\n            <LabelModalPage show={showModal} label={label} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import { LabelFullModel, LabelModel } from '../models/label';\r\n\r\nexport const labelsMockData: LabelModel[] = [\r\n    { id: 1, name: 'Label 1', groupId: 1 },\r\n    { id: 2, name: 'Label 2', groupId: 1 },\r\n    { id: 3, name: 'Label 3', groupId: 2 },\r\n    { id: 4, name: 'Label 4', groupId: 2 }\r\n];\r\n\r\nexport const labelsFullMockData: LabelFullModel[] = [\r\n    { id: 1, name: 'Label 1', groupId: 1, currValue: 1.11, lastValue: 5, avgValue: 6.33 },\r\n    { id: 2, name: 'Label 2', groupId: 1, currValue: 2.11, lastValue: 4, avgValue: 5.33 },\r\n    { id: 3, name: 'Label 3', groupId: 2, currValue: 3.11, lastValue: 3, avgValue: 4.33 },\r\n    { id: 4, name: 'Label 4', groupId: 2, currValue: 4.11, lastValue: 2, avgValue: 3.33 }\r\n];\r\n","import { labelsFullMockData, labelsMockData } from '../mockData/label';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { LabelFullModel, LabelModel } from '../models/label';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class LabelService extends ServiceBase {\r\n    private baseUrl = '/api/label';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(group: number, month: number, year: number): Promise<LabelFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsFullMockData);\r\n        }\r\n        return await this.get<LabelFullModel[]>(this.baseUrl + '/full', {\r\n            group: group,\r\n            month: month,\r\n            year: year\r\n        });\r\n    }\r\n\r\n    async getAll(group: number): Promise<LabelModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData);\r\n        }\r\n        return await this.get<LabelModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<LabelModel>): Promise<LabelModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData[0]);\r\n        }\r\n        return await this.post<LabelModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: LabelModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { LabelFullModel } from '../../models/label';\r\nimport { LabelService } from '../../services/label';\r\nimport { globalContext } from '../../contexts/global';\r\n\r\nexport type LabelModalProps = {\r\n    show: boolean;\r\n    label?: LabelFullModel;\r\n    onHide: () => void;\r\n    onAction: () => void;\r\n};\r\n\r\nexport const LabelModalPage: React.FC<LabelModalProps> = React.memo((props: LabelModalProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { group } = useContext(globalContext);\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [name, setName] = React.useState<string>('');\r\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\r\n\r\n    const handleOnChangeName = React.useCallback(event => {\r\n        setName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoadingAction(true);\r\n\r\n        if (hasValue(props.label)) {\r\n            try {\r\n                await new LabelService(config).update({\r\n                    ...(props.label as LabelFullModel),\r\n                    name: name\r\n                });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        } else {\r\n            setLoadingAction(true);\r\n            try {\r\n                await new LabelService(config).add({ name: name, groupId: group });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        }\r\n    }, [name, t, config, props, group]);\r\n\r\n    React.useEffect(() => {\r\n        if (!props.show) {\r\n            return;\r\n        }\r\n\r\n        if (props.label) {\r\n            setName(props.label?.name);\r\n        } else {\r\n            setName('');\r\n        }\r\n    }, [props]);\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (isLoadingAction || hasValue(error) || !hasValue(name)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [error, name, isLoadingAction]);\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {hasValue(props.label) ? t('LABEL.MODAL.EDIT_TITLE') : t('LABEL.MODAL.ADD_TITLE')}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {hasValue(error) && (\r\n                        <Alert key=\"LABEL.MODAL.ERROR\" variant=\"danger\">\r\n                            {error}\r\n                        </Alert>\r\n                    )}\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>{t('LABEL.MODAL.NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"label-name-field\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                placeholder={t('LABEL.MODAL.NAME_PLACEHOLDER')}\r\n                                onChange={handleOnChangeName}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\r\n                        {hasValue(props.label) ? t('LABEL.MODAL.EDIT_ACTION') : t('LABEL.MODAL.ADD_ACTION')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","export const getFirebaseConfig = (projectId: string, apiKey: string) => ({\r\n    apiKey: apiKey,\r\n    authDomain: `${projectId}.firebaseapp.com`,\r\n    databaseURL: `https://${projectId}.firebaseio.com`,\r\n    projectId: projectId,\r\n    storageBucket: projectId,\r\n    messagingSenderId: 'my-sender-id'\r\n});\r\n","import React from 'react';\r\n\r\nexport type SettingsProps = {};\r\n\r\nexport const SettingsPage: React.FC<SettingsProps> = React.memo((props: SettingsProps) => {\r\n    return <>Settings page</>;\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { userContext } from '../contexts/user';\r\n\r\ninterface PrivateRouteProps {\r\n    component: any;\r\n    path?: string;\r\n}\r\n\r\nexport const PrivateRoute = ({ component: Component, path, ...other }: PrivateRouteProps) => {\r\n    const { user } = useContext(userContext);\r\n    return user ? <Component /> : <Redirect to=\"/auth\" />;\r\n};\r\n","import { ExpenseModel } from '../models/expense';\r\n\r\nexport const expensesMockData: ExpenseModel[] = [\r\n    { id: 1, name: 'Expense 1' },\r\n    { id: 2, name: 'Expense 2' },\r\n    { id: 3, name: 'Expense 3' },\r\n    { id: 4, name: 'Expense 4' }\r\n];\r\n\r\nexport const yearsMockData: number[] = [2015, 2016, 2017, 2018, 2019, 2020];\r\n","import { expensesMockData, yearsMockData } from '../mockData/expense';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { ExpenseModel } from '../models/expense';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class ExpenseService extends ServiceBase {\r\n    private baseUrl = '/api/expense';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getYears(group: number): Promise<number[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(yearsMockData);\r\n        }\r\n        return await this.get<number[]>(this.baseUrl + '/years');\r\n    }\r\n\r\n    async getAll(): Promise<ExpenseModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData);\r\n        }\r\n        return await this.get<ExpenseModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<ExpenseModel>): Promise<ExpenseModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData[0]);\r\n        }\r\n        return await this.post<ExpenseModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: ExpenseModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport { ConfigManager } from '../configurations/configManager';\r\nimport { ConfigModel } from '../models/config';\r\nimport { AuthPage } from './auth/auth';\r\nimport { ExpensePage } from './expense/expense';\r\nimport { GroupPage } from './group/group';\r\nimport { LabelPage } from './label/label';\r\nimport { Routes } from './routes';\r\nimport { SettingsPage } from './settings/settings';\r\n\r\nimport { userContext } from '../contexts/user';\r\nimport { PrivateRoute } from '../helpers/privateRouter';\r\nimport { GroupModel } from '../models/group';\r\nimport { GroupService } from '../services/group';\r\nimport { ExpenseService } from '../services/expense';\r\nimport { globalContext } from '../contexts/global';\r\nimport { SearchModel } from '../models/search';\r\nimport { hasValue } from '../helpers/util';\r\n\r\nexport type MainProps = {};\r\n\r\nexport const MainPage: React.FC<MainProps> = React.memo((_props: MainProps) => {\r\n    const { user, isReady } = useContext(userContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n\r\n    const [isLoading, setLoading] = React.useState<boolean>(true);\r\n\r\n    const [groups, setGroups] = React.useState<GroupModel[]>([]);\r\n    const [years, setYears] = React.useState<number[]>([]);\r\n\r\n    const [group, setGroup] = React.useState<GroupModel>();\r\n    const [month, setMonth] = React.useState<number>(new Date().getMonth());\r\n    const [year, setYear] = React.useState<number>(0);\r\n\r\n    React.useEffect(() => {\r\n        if (!isReady) {\r\n            return;\r\n        }\r\n\r\n        const jsonString = JSON.stringify(queryString.parse(location.search));\r\n        const searchParams = JSON.parse(jsonString) as SearchModel;\r\n        setLoading(true);\r\n\r\n        const setup = async () => {\r\n            let groupsResults: GroupModel[];\r\n            let groupResults: GroupModel | undefined;\r\n            let monthResults: number;\r\n            let yearsResults: number[];\r\n            let yearResults: number;\r\n\r\n            if (groups.length > 0) {\r\n                groupsResults = groups;\r\n            } else {\r\n                try {\r\n                    groupsResults = await new GroupService(config).getAll(user?.uid ?? '');\r\n                } catch {\r\n                    groupsResults = [];\r\n                }\r\n\r\n                console.log('load again ', groupsResults);\r\n            }\r\n\r\n            const lastGroup = localStorage.getItem('group') as string;\r\n            setGroups(groupsResults);\r\n            if (hasValue(searchParams.group) && groupsResults.some(x => x.id === +searchParams.group)) {\r\n                groupResults = groupsResults.find(x => x.id === +searchParams.group) as GroupModel;\r\n            } else if (hasValue(lastGroup) && groupsResults.some(x => x.id === +lastGroup)) {\r\n                groupResults = groupsResults.find(x => x.id === +lastGroup) as GroupModel;\r\n            } else if (hasValue(groupsResults)) {\r\n                groupResults = groupsResults[0];\r\n            } else {\r\n                // groupResults = {} as Partial<GroupModel>;\r\n                // show error - does not have groups loaded\r\n            }\r\n\r\n            setGroup(groupResults);\r\n            localStorage.setItem('group', groupResults?.id.toString() as string);\r\n\r\n            const lastMonth = localStorage.getItem('month') as string;\r\n            if (hasValue(searchParams.month) && searchParams.month >= 1 && searchParams.month <= 12) {\r\n                monthResults = searchParams.month;\r\n            } else if (hasValue(lastMonth) && +lastMonth >= 1 && +lastMonth <= 12) {\r\n                monthResults = +lastMonth;\r\n            } else {\r\n                monthResults = new Date().getMonth();\r\n            }\r\n            setMonth(monthResults);\r\n            localStorage.setItem('month', monthResults.toString());\r\n\r\n            if (years.length > 0) {\r\n                yearsResults = years;\r\n            } else {\r\n                try {\r\n                    yearsResults = await new ExpenseService(config).getYears(groupResults?.id ?? 0);\r\n                } catch {\r\n                    yearsResults = [];\r\n                }\r\n            }\r\n\r\n            // TODO get years from expenses\r\n            const lastYear = localStorage.getItem('year') as string;\r\n            setYears(yearsResults);\r\n            if (hasValue(searchParams.year) && yearsResults.some(x => x === +searchParams.year)) {\r\n                yearResults = searchParams.year;\r\n            } else if (hasValue(lastYear) && yearsResults.some(x => x === +lastYear)) {\r\n                yearResults = +lastYear;\r\n            } else {\r\n                yearResults = new Date().getFullYear();\r\n            }\r\n            setYear(yearResults);\r\n            localStorage.setItem('year', yearResults.toString());\r\n\r\n            history.push({\r\n                pathname: location.pathname,\r\n                search: queryString.stringify({\r\n                    group: groupResults?.id,\r\n                    month: monthResults,\r\n                    year: yearResults\r\n                })\r\n            });\r\n\r\n            setLoading(false);\r\n        };\r\n        setup();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [config, history, location, isReady, user]);\r\n\r\n    return (\r\n        <>\r\n            <globalContext.Provider\r\n                value={{\r\n                    isLoading: isLoading,\r\n\r\n                    groups: groups,\r\n                    years: years,\r\n\r\n                    group: group?.id ?? 0,\r\n                    month: month,\r\n                    year: year\r\n                }}\r\n            >\r\n                <Container className=\"mt-2\">\r\n                    <Switch>\r\n                        {isReady && <PrivateRoute key={Routes.group} path={Routes.group} component={GroupPage} />}\r\n                        {isReady && <PrivateRoute key={Routes.label} path={Routes.label} component={LabelPage} />}\r\n                        {isReady && <PrivateRoute key={Routes.expense} path={Routes.expense} component={ExpensePage} />}\r\n                        <PrivateRoute key={Routes.settings} path={Routes.settings} component={SettingsPage} />\r\n                        <Route key={Routes.auth} path={Routes.auth} component={AuthPage} />\r\n                        <Route key={Routes.home} exact path={Routes.home}>\r\n                            <>\r\n                                <h3>HOME</h3>\r\n                                <h6>Build Version: {config.buildVersion}</h6>\r\n                            </>\r\n                        </Route>\r\n                        <Route key={'*'} path=\"*\">\r\n                            <h1> 404 </h1>\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n            </globalContext.Provider>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\n\nimport { HeaderComponent } from '../components/header/header';\nimport { ConfigManager } from '../configurations/configManager';\nimport { ConfigModel } from '../models/config';\nimport { useAuth } from '../services/auth';\n\nimport { GlobalStyles } from './globalSyles';\nimport { darkTheme } from './theme';\nimport { hasValue } from '../helpers/util';\nimport { userContext } from '../contexts/user';\nimport { MainPage } from './main';\n\nexport type AppProps = {};\n\nexport const AppPage: React.FC<AppProps> = React.memo((_props: AppProps) => {\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\n    const isDarkMode = React.useMemo(\n        () => true, //window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches,\n        []\n    );\n    const { user, initialising } = useAuth();\n\n    const [isReady, setReady] = React.useState<boolean>(false);\n\n    React.useEffect(() => {\n        if (initialising || !user) {\n            return;\n        }\n\n        if (hasValue(user)) {\n            user.getIdTokenResult().then((value: any) => {\n                axios.defaults.headers.common.Authorization = value.token;\n                // new UserService(config).addOrUpdate({\n                //     id: user.uid,\n                //     email: user.email,\n                //     displayName: user.displayName,\n                //     photoUrl: user.photoURL\n                // } as UserModel);\n                setReady(true);\n            });\n        }\n    }, [user, initialising, config]);\n\n    return (\n        <>\n            <ThemeProvider theme={isDarkMode ? darkTheme : {}}>\n                <>\n                    <GlobalStyles />\n                    <userContext.Provider\n                        value={{\n                            user: user,\n                            initialising: initialising,\n                            isReady: isReady\n                        }}\n                    >\n                        {config.useHashRouter && (\n                            <HashRouter basename=\"/\">\n                                <HeaderComponent />\n                                <MainPage />\n                            </HashRouter>\n                        )}\n                        {!config.useHashRouter && (\n                            <BrowserRouter basename=\"/\">\n                                <HeaderComponent />\n                                <MainPage />\n                            </BrowserRouter>\n                        )}\n                    </userContext.Provider>\n                </>\n            </ThemeProvider>\n        </>\n    );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeApp } from 'firebase';\nimport * as serviceWorker from './serviceWorker';\n\nimport './configurations/i18n';\nimport './index.scss';\n\nimport { setConfiguration } from './configurations/configManager';\nimport { AppPage } from './pages/app';\nimport { getFirebaseConfig } from './configurations/firebase';\nimport { getValueOrDefault } from './helpers/util';\n\nconst config = setConfiguration();\n\n// initialize firebase\ninitializeApp({\n    ...getFirebaseConfig(\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_PROJECT, config.firebaseProject),\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_API_KEY, config.firebaseApiKey)\n    )\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppPage />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}