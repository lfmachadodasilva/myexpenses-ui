{"version":3,"sources":["serviceWorker.ts","configurations/i18n.ts","models/config.ts","helpers/util.ts","configurations/configManager.ts","pages/routes.ts","contexts/user.ts","services/auth.ts","helpers/user.ts","components/header/header.tsx","pages/globalSyles.js","pages/theme.ts","components/error/error.tsx","pages/auth/auth.tsx","components/item/itemsHeader.tsx","components/loading/loading.tsx","contexts/global.ts","components/search/search.tsx","models/expense.ts","services/base.ts","mockData/user.ts","mockData/group.ts","mockData/label.ts","mockData/expense.ts","services/expense.ts","components/item/item.tsx","pages/expense/expenseItems.tsx","services/label.ts","pages/expense/expenseModal.tsx","pages/expense/expenseSummary.tsx","pages/expense/expense.tsx","services/group.ts","services/user.ts","pages/group/groupModal.tsx","pages/group/group.tsx","pages/label/label.tsx","pages/label/labelModal.tsx","configurations/firebase.ts","pages/settings/settings.tsx","helpers/privateRouter.tsx","pages/main.tsx","pages/app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","resources","en","translation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","ApiType","hasValue","value","undefined","Array","isArray","length","getValueOrDefault","values","find","x","ConfigModel","apiUrl","buildVersion","requestDelay","firebaseApiKey","firebaseProject","useHashRouter","ConfigManager","configurationObject","config","get","configurationSettings","Object","assign","set","ApplicationConfiguration","freeze","Routes","home","auth","settings","group","label","expense","userContext","React","createContext","user","initialising","isReady","facebook","FacebookAuthProvider","loginWithFacebook","a","signInWithPopup","console","error","loginWithEmail","email","password","signInWithEmailAndPassword","getUserDisplayName","displayName","split","HeaderStyle","createGlobalStyle","HeaderComponent","memo","props","useContext","history","useHistory","useTranslation","t","handleRedirectTo","useCallback","path","search","push","pathname","handleLogout","firebase","signOut","setTimeout","authElement","useMemo","Nav","NavDropdown","title","id","Item","onClick","Divider","Link","Navbar","bg","variant","expand","Container","Brand","Toggle","aria-controls","Collapse","className","GlobalStyles","theme","body","text","toggleBorder","darkTheme","gradient","ErrorComponent","message","role","AuthStyle","AuthPage","useState","isLoading","setLoading","setError","setEmail","setPassword","handleFacebook","handleChangeEmail","target","handleChangePassword","handleLogin","Row","Col","xs","sm","Card","Title","Body","Button","Form","Group","controlId","Label","Control","type","placeholder","onChange","disabled","ItemsHeaderComponent","onAction","action","LoadingComponent","children","globalContext","groups","years","month","year","ExpenseType","SearchStyle","SearchComponent","global","months","setGroup","setMonth","setYear","isExpanded","setExpanded","useEffect","handleOnChangeGroup","event","handleOnChangeMonth","handleOnChangeYear","handleOnSearch","queryString","stringify","handleExpandCollapse","groupsOptions","map","key","name","monthsOptions","yearsOptions","headerElement","Spinner","data-testid","animation","size","selectedGroup","g","Accordion","Header","as","eventKey","StatusCodes","usersMockData","groupsMockData","users","groupsFullMockData","labelsMockData","groupId","labelsFullMockData","currValue","lastValue","avgValue","expensesMockData","OUTCOMING","date","Date","comments","labelId","INCOMING","expensesFullMockData","yearsMockData","handleError","response","status","OK","data","headers","Promise","reject","ServiceBase","resolve","_reject","_resolve","url","params","axios","baseURL","this","withCredentials","process","Accept","Authorization","defaults","common","post","put","delete","ExpenseService","baseUrl","FIREBASE","LOCAL_STORAGE","TOTAL_FAKE","resolveMockData","obj","ItemComponent","DropdownButton","Dropdown","onEdit","onDelete","ExpenseItemsPage","items","item","toFixed","format","LabelService","ExpenseModalPage","setName","setValue","setDate","setLabel","labels","setLabels","isLoadingLabels","setLoadingLabels","setComments","isLoadingAction","setLoadingAction","handleOnChangeName","handleOnChangeValue","handleOnChangeDate","handleOnChangeLabel","handleOnChangeComments","handleOnAction","update","add","show","getAll","runAsync","disabledAction","labelOptions","l","Modal","onHide","centered","closeButton","rows","Footer","ExpenseSummaryPage","incoming","outcoming","totalIncoming","setTotalIncoming","totalOutcoming","setTotalOutcoming","totalLeft","setTotalLeft","totalLeftPer","setTotalLeftPer","tmpTotalIncoming","reduce","sum","current","tmpTotalOutcoming","tmpTotalLeft","ExpenseStyle","ExpensePage","expenses","setExpenses","setExpense","showModal","setShowModal","refresh","setRefresh","getAllFull","handleOnAdd","handleOnEdit","handleOnDelete","remove","handleOnHide","incomingItems","filter","outcomingItems","Tabs","defaultActiveKey","Tab","GroupService","userId","UserService","GroupModalPage","selectedUsers","setSelectedUsers","setUsers","isLoadingUsers","setLoadingUsers","handleOnChangeUsers","from","selectedOptions","option","usersOption","u","uid","multiple","readOnly","LabelGrapyType","GroupStyle","GroupPage","setGroups","setup","groupElements","index","indexUser","LabelModalPage","projectId","LabelStyle","LabelPage","_props","CURRENT_MONTH","graphType","setGrahType","handleOnGraphType","itemsElements","currValueClass","lastValueClass","graphElement","datasets","LAST_MONTH","borderWidth","options","plugins","colorschemes","scheme","width","height","ToggleButtonGroup","ToggleButton","AVERAGE","SettingsPage","PrivateRoute","Component","component","to","MainPage","useLocation","setYears","getMonth","jsonString","JSON","parse","searchParams","groupsResults","log","lastGroup","localStorage","getItem","some","groupResults","setItem","toString","lastMonth","monthResults","yearsResults","getYears","lastYear","yearResults","getFullYear","Provider","exact","AppPage","isDarkMode","matchMedia","matches","currentUser","state","setState","unsubscribe","onAuthStateChanged","useAuth","setReady","getIdTokenResult","then","token","basename","overrides","configDefault","REACT_APP_API_URL","setConfiguration","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cb536500.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport translationEN from '../locales/en.json';\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: translationEN\r\n    }\r\n};\r\n\r\ni18n.use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: 'en',\r\n        fallbackLng: 'en', // use en if detected lng is not available\r\n\r\n        // keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","export enum ApiType {\r\n    FIREBASE = 'FIREBASE',\r\n    LOCAL_STORAGE = 'LOCAL_STORAGE',\r\n    TOTAL_FAKE = 'TOTAL_FAKE',\r\n    TEST_API = 'TEST_API'\r\n}\r\n\r\nexport class ConfigModel {\r\n    /** api backend url */\r\n    apiUrl: string = 'TOTAL_FAKE';\r\n\r\n    /** build version */\r\n    buildVersion: string = 'local';\r\n\r\n    /** request delay time */\r\n    requestDelay: number = 1000;\r\n\r\n    /** firebase */\r\n    firebaseApiKey: string = 'AIzaSyDMDE7eTQbjwkQglMJf5KnFtMr48-pAoVM';\r\n    firebaseProject: string = 'lfmachadodasilva-dev';\r\n\r\n    useHashRouter: boolean = true;\r\n}\r\n","export const hasValue = (value: any): boolean => {\r\n    if (value === null || value === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (typeof value === 'string' || Array.isArray(value)) {\r\n        return value.length > 0;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n// export const getValueOrDefault = (value?: string, defaultValue?: string) => {\r\n//     return hasValue(value) ? value : defaultValue;\r\n// };\r\n\r\nexport const getValueOrDefault = (...values: any[]) => {\r\n    return values.find(x => hasValue(x));\r\n};\r\n","import config, { Options } from 'react-global-configuration';\r\n\r\nimport { getValueOrDefault } from '../helpers/util';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport class ConfigManager {\r\n    static set = (configurationSettings: ConfigModel) => {\r\n        config.set({ ApplicationConfiguration: configurationSettings }, { freeze: false } as Options);\r\n    };\r\n\r\n    static get(): ConfigModel {\r\n        const configurationObject = config.get('ApplicationConfiguration');\r\n\r\n        const configurationSettings = new ConfigModel();\r\n        Object.assign(configurationSettings, configurationObject);\r\n\r\n        return configurationSettings;\r\n    }\r\n}\r\n\r\nexport const setConfiguration = (overrides: Partial<ConfigModel> = {}): ConfigModel => {\r\n    let configDefault: ConfigModel = new ConfigModel();\r\n\r\n    configDefault = {\r\n        ...configDefault,\r\n        buildVersion: getValueOrDefault(\r\n            process.env.REACT_APP_BUILD_VERSION,\r\n            overrides.buildVersion,\r\n            configDefault.buildVersion\r\n        ),\r\n        apiUrl: getValueOrDefault(process.env.REACT_APP_API_URL, overrides.apiUrl, configDefault.apiUrl)\r\n    };\r\n\r\n    ConfigManager.set({ ...configDefault, ...overrides });\r\n\r\n    return ConfigManager.get();\r\n};\r\n","export class Routes {\r\n    static home = '/';\r\n    static auth = '/auth';\r\n    static settings = '/settings';\r\n    static group = '/group';\r\n    static label = '/label';\r\n    static expense = '/expense';\r\n}\r\n","import React from 'react';\r\nimport { User } from 'firebase/app';\r\n\r\ninterface UserContext {\r\n    user: User | null;\r\n    initialising: boolean;\r\n    isReady: boolean;\r\n}\r\n\r\nexport const userContext = React.createContext<UserContext>({\r\n    user: null,\r\n    initialising: false,\r\n    isReady: false\r\n});\r\n","import React, { useState } from 'react';\r\nimport firebase, { auth } from 'firebase/app';\r\nimport 'firebase/auth'; // If using Firebase auth\r\n// import { UserService } from './userService';\r\n// import { ConfigurationManager } from '../configurations/configurationManager';\r\n// import { UserModel } from '../models/user';\r\n\r\nexport const useAuth = () => {\r\n    const [state, setState] = useState(() => {\r\n        const user = auth().currentUser;\r\n        return { initialising: !user, user };\r\n    });\r\n\r\n    const onChange = (user: firebase.User | null) => {\r\n        setState({ initialising: false, user });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // listen for auth state changes\r\n        const unsubscribe = auth().onAuthStateChanged(onChange);\r\n        // unsubscribe to the listener when unmounting\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return state;\r\n};\r\n\r\nconst facebook = new auth.FacebookAuthProvider();\r\n\r\nexport const loginWithFacebook = async () => {\r\n    try {\r\n        return await auth().signInWithPopup(facebook);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const loginWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().signInWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const createUserWithEmail = async (email: string, password: string) => {\r\n    try {\r\n        await auth().createUserWithEmailAndPassword(email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\nexport const resetPassword = async (email: string) => {\r\n    try {\r\n        return await auth().sendPasswordResetEmail(email);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n\r\n// export const updateUser = async (user: firebase.User | null, displayName: string) => {\r\n//     try {\r\n//         await user?.updateProfile({ displayName: displayName });\r\n\r\n//         const config = ConfigurationManager.get();\r\n//         const userObj = user as firebase.User;\r\n\r\n//         return await new UserService(config).addOrUpdate({\r\n//             id: userObj.uid,\r\n//             email: userObj.email,\r\n//             displayName: userObj.displayName,\r\n//             photoUrl: userObj.photoURL\r\n//         } as UserModel);\r\n//     } catch (err) {\r\n//         console.error(err);\r\n//         throw err;\r\n//     }\r\n// };\r\n\r\nexport const signOut = () => firebase.auth().signOut();\r\n","import { UserModel } from '../models/user';\r\nimport { hasValue } from './util';\r\n\r\nexport const getUserDisplayName = (user: firebase.User | UserModel) => {\r\n    if (!hasValue(user)) {\r\n        return '';\r\n    }\r\n\r\n    if (hasValue(user.displayName)) {\r\n        return user.displayName?.split(' ')[0];\r\n    }\r\n\r\n    return user.email?.split('@')[0];\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Routes } from '../../pages/routes';\r\nimport { userContext } from '../../contexts/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { signOut } from '../../services/auth';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\n\r\nconst HeaderStyle = createGlobalStyle`\r\n        .navbar-brand {\r\n            cursor: pointer;\r\n        };\r\n    `;\r\n\r\nexport type HeaderProps = {};\r\n\r\nexport const HeaderComponent: React.FC<HeaderProps> = React.memo((props: HeaderProps) => {\r\n    const { user, initialising } = useContext(userContext);\r\n    const history = useHistory();\r\n    const [t] = useTranslation();\r\n\r\n    const handleRedirectTo = React.useCallback(\r\n        (path: string) => {\r\n            if (hasValue(history.location.search)) {\r\n                history.push({ pathname: path, search: history.location.search });\r\n            } else {\r\n                history.push(path);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    const handleLogout = React.useCallback(async () => {\r\n        await signOut();\r\n        setTimeout(() => history.push(Routes.home));\r\n    }, [history]);\r\n\r\n    const authElement = React.useMemo(() => {\r\n        if (hasValue(user)) {\r\n            const displayName = getUserDisplayName(user as firebase.User);\r\n            return (\r\n                <Nav>\r\n                    <NavDropdown title={displayName} id=\"collasible-nav-dropdown\">\r\n                        <NavDropdown.Item onClick={() => handleRedirectTo(Routes.settings)}>\r\n                            {t('HEADER.SETTINGS')}\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={handleLogout}>{t('HEADER.LOGOUT')}</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Nav>\r\n                <Nav.Link onClick={() => handleRedirectTo(Routes.auth)}>{t('HEADER.LOGIN')}</Nav.Link>\r\n            </Nav>\r\n        );\r\n    }, [user, handleRedirectTo, handleLogout, t]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderStyle />\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\r\n                <Container>\r\n                    <Navbar.Brand onClick={() => handleRedirectTo(Routes.home)}>{t('HEADER.TITLE')}</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"mr-auto \">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.group)}>{t('HEADER.GROUP')}</Nav.Link>\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.label)}>{t('HEADER.LABEL')}</Nav.Link>\r\n                            <Nav.Link onClick={() => handleRedirectTo(Routes.expense)}>{t('HEADER.EXPENSE')}</Nav.Link>\r\n                        </Nav>\r\n                        {!initialising && authElement}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n});\r\n","import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .card {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .card-header {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n\r\n  .form-control {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  };\r\n\r\n  .modal-content {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-header {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-body {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .modal-footer {\r\n    background-color: ${({ theme }) => theme.body};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n  };\r\n  .close {\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    border-color:${({ theme }) => theme.toggleBorder};\r\n    text-shadow: none;\r\n  };\r\n\r\n  .nav-tabs .nav-link.active, .nav-tabs .nav-item.show .nav-link  {\r\n      background-color: ${({ theme }) => theme.body};\r\n      color: ${({ theme }) => theme.text};\r\n      border-color: ${({ theme }) => theme.toggleBorder};\r\n  };\r\n  `","export const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#363537',\r\n    toggleBorder: '#595959',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)'\r\n};\r\n\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#646464',\r\n    gradient: 'linear-gradient(#091236, #1E215D)'\r\n};\r\n","import React from 'react';\r\nimport { hasValue } from '../../helpers/util';\r\n\r\nexport interface ErrorProps {\r\n    message: string;\r\n}\r\n\r\nexport const ErrorComponent: React.FC<ErrorProps> = React.memo((props: ErrorProps) => {\r\n    if (!hasValue(props.message)) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            {props.message}\r\n        </div>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { Routes } from '../routes';\r\nimport { loginWithEmail, loginWithFacebook } from '../../services/auth';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nconst AuthStyle = createGlobalStyle`\r\n    `;\r\n\r\nexport type AuthProps = {};\r\n\r\nexport const AuthPage: React.FC<AuthProps> = React.memo((props: AuthProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [error, setError] = React.useState<string>('');\r\n\r\n    const [email, setEmail] = React.useState<string>('');\r\n    const [password, setPassword] = React.useState<string>('');\r\n\r\n    const handleFacebook = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            await loginWithFacebook();\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch (error) {\r\n            setError(t('AUTH.ERROR'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [history, t]);\r\n\r\n    const handleChangeEmail = React.useCallback((value: any) => {\r\n        setEmail(value.target.value);\r\n    }, []);\r\n    const handleChangePassword = React.useCallback((value: any) => {\r\n        setPassword(value.target.value);\r\n    }, []);\r\n\r\n    const handleLogin = React.useCallback(async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            await loginWithEmail(email, password);\r\n            setTimeout(() => history.push(Routes.home));\r\n        } catch {\r\n            setError(t('AUTH.ERROR'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [email, password, history, t]);\r\n\r\n    return (\r\n        <>\r\n            <AuthStyle />\r\n            <Container className=\"p-4\">\r\n                <ErrorComponent message={error} />\r\n                <Row>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_FACEBOOK')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Button onClick={handleFacebook}>{t('AUTH.FACEBOOK')}</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"p-1\" xs={12} sm={6}>\r\n                        <Card className=\"p-4\">\r\n                            <Card.Title>{t('AUTH.BY_EMAIL')}</Card.Title>\r\n                            <Card.Body>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>{t('AUTH.EMAIL')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder={t('AUTH.EMAIL_PLACEHOLDER')}\r\n                                            onChange={handleChangeEmail}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>{t('AUTH.PASSWORD')}</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder={t('AUTH.PASSWORD_PLACEHOLDER')}\r\n                                            onChange={handleChangePassword}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Button variant=\"primary\" onClick={handleLogin} disabled={isLoading}>\r\n                                        {t('AUTH.LOGIN')}\r\n                                    </Button>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\r\n\r\nexport interface ItemsHeaderProps {\r\n    title: string;\r\n    action: string;\r\n    onAction: () => void;\r\n}\r\n\r\nexport const ItemsHeaderComponent: React.FC<ItemsHeaderProps> = React.memo((props: ItemsHeaderProps) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-between mb-2\">\r\n            <h4>{props.title}</h4>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={props.onAction}>\r\n                {props.action}\r\n            </button>\r\n        </div>\r\n    );\r\n});\r\n","import React from 'react';\r\n\r\nexport type LoadingProps = {\r\n    isLoading: boolean;\r\n};\r\n\r\nexport const LoadingComponent: React.FC<React.PropsWithChildren<LoadingProps>> = React.memo(\r\n    (props: React.PropsWithChildren<LoadingProps>) => {\r\n        if (props.isLoading) {\r\n            return (\r\n                <div className=\"m-2 text-center\">\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <>{props.children}</>;\r\n    }\r\n);\r\n","import React from 'react';\r\nimport { GroupModel } from '../models/group';\r\n\r\nexport interface GlobalContext {\r\n    isLoading: boolean;\r\n\r\n    groups: GroupModel[];\r\n    years: number[];\r\n\r\n    group: number;\r\n    month: number;\r\n    year: number;\r\n}\r\n\r\nexport const globalContext = React.createContext<GlobalContext>({\r\n    isLoading: true,\r\n\r\n    groups: [],\r\n    years: [],\r\n\r\n    group: 0,\r\n    month: 0,\r\n    year: 0\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { globalContext } from '../../contexts/global';\r\n\r\nexport type SearchProps = {};\r\n\r\nconst SearchStyle = createGlobalStyle`\r\n    .search-component {\r\n        .card-header {\r\n            padding: 5px;\r\n            border: none;\r\n        }\r\n        .card-body {\r\n            padding-top: 0;\r\n            padding-bottom: 0;\r\n            padding-right: 10px;\r\n            padding-left: 10px;\r\n        }\r\n        .search-header {\r\n            margin: 0px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SearchComponent: React.FC<SearchProps> = React.memo((props: SearchProps) => {\r\n    const [t] = useTranslation();\r\n    const history = useHistory();\r\n    const global = useContext(globalContext);\r\n\r\n    const [months] = React.useState<number[]>([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\r\n    const [group, setGroup] = React.useState<number>(global.group);\r\n    const [month, setMonth] = React.useState<number>(global.month);\r\n    const [year, setYear] = React.useState<number>(global.year);\r\n    const [isExpanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n    React.useEffect(() => {\r\n        setGroup(global.group);\r\n        setMonth(global.month);\r\n        setYear(global.year);\r\n    }, [global.group, global.month, global.year]);\r\n\r\n    const handleOnChangeGroup = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setGroup(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeMonth = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setMonth(event.target.value as number);\r\n    }, []);\r\n    const handleOnChangeYear = React.useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setYear(event.target.value as number);\r\n    }, []);\r\n\r\n    const handleOnSearch = React.useCallback(() => {\r\n        history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify({\r\n                group: group,\r\n                month: month,\r\n                year: year\r\n            })\r\n        });\r\n    }, [history, group, month, year]);\r\n\r\n    const handleExpandCollapse = React.useCallback(() => {\r\n        setExpanded(!isExpanded);\r\n    }, [isExpanded]);\r\n\r\n    const groupsOptions = React.useMemo(\r\n        () =>\r\n            global.groups.map(x => (\r\n                <option key={'GROUP_' + x.id} value={x.id}>\r\n                    {x.name}\r\n                </option>\r\n            )),\r\n        [global.groups]\r\n    );\r\n\r\n    const monthsOptions = React.useMemo(\r\n        () =>\r\n            months.map(x => (\r\n                <option key={'MONTH_' + x} value={x}>\r\n                    {t('MONTHS.' + x)}\r\n                </option>\r\n            )),\r\n        [months, t]\r\n    );\r\n\r\n    const yearsOptions = React.useMemo(\r\n        () =>\r\n            global.years.map(x => (\r\n                <option key={'YEAR_' + x} value={x}>\r\n                    {x}\r\n                </option>\r\n            )),\r\n        [global.years]\r\n    );\r\n\r\n    const headerElement = React.useMemo(() => {\r\n        if (global.isLoading) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <Spinner data-testid=\"search-loading\" animation=\"border\" role=\"status\" size=\"sm\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (isExpanded) {\r\n            return (\r\n                <strong>\r\n                    <p className=\"search-header\">{t('SEARCH.HEADER')}</p>\r\n                </strong>\r\n            );\r\n        }\r\n\r\n        const selectedGroup = global.groups.find(g => g.id === group);\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-around\">\r\n                <p className=\"search-header\">{selectedGroup?.name}</p>\r\n                <p className=\"search-header\">{t('MONTHS.' + month)}</p>\r\n                <p className=\"search-header\">{year}</p>\r\n            </div>\r\n        );\r\n    }, [isExpanded, global.isLoading, global.groups, group, month, year, t]);\r\n\r\n    return (\r\n        <div className=\"search-component mb-2\">\r\n            <SearchStyle />\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={handleExpandCollapse}>\r\n                            {headerElement}\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs={12} sm={5}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.GROUP')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={group}\r\n                                            onChange={handleOnChangeGroup}\r\n                                        >\r\n                                            {groupsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.MONTH')}</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={month}\r\n                                            onChange={handleOnChangeMonth}\r\n                                        >\r\n                                            {monthsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs={12} sm={3}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t('SEARCH.YEAR')}</Form.Label>\r\n                                        <Form.Control as=\"select\" size=\"sm\" value={year} onChange={handleOnChangeYear}>\r\n                                            {yearsOptions}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Button className=\"mb-2\" onClick={handleOnSearch} size=\"sm\">\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n});\r\n","import { LabelModel } from './label';\r\n\r\nexport enum ExpenseType {\r\n    INCOMING = 1,\r\n    OUTCOMING\r\n}\r\n\r\nexport interface ExpenseModel {\r\n    id: number;\r\n    name: string;\r\n\r\n    type: ExpenseType;\r\n\r\n    value: number;\r\n    date: Date;\r\n    comments: string;\r\n\r\n    /** relations */\r\n    groupId: number;\r\n    labelId: number;\r\n}\r\n\r\nexport interface ExpenseFullModel {\r\n    id: number;\r\n    name: string;\r\n\r\n    type: ExpenseType;\r\n\r\n    value: number;\r\n    date: Date;\r\n    comments: string;\r\n\r\n    /** relations */\r\n    groupId: number;\r\n    label: LabelModel;\r\n}\r\n","import axios, { AxiosError } from 'axios';\r\nimport { ConfigModel } from '../models/config';\r\n\r\nexport enum StatusCodes {\r\n    OK = 200,\r\n    ERROR = 500\r\n}\r\n\r\nconst handleError = async (error: AxiosError) => {\r\n    if (error.response && error.response.status >= StatusCodes.OK) {\r\n        if (process.env.NODE_ENV !== 'test') {\r\n            // avoid show this when is running test\r\n            console.error('Request Failed:', error.config);\r\n            console.error('Status:', error.response.status);\r\n            console.error('Data:', error.response.data);\r\n            console.error('Headers:', error.response.headers);\r\n        }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n};\r\n\r\nexport class ServiceBase {\r\n    constructor(protected config: ConfigModel) {}\r\n\r\n    protected async resolveMockData<T>(data: T): Promise<T> {\r\n        return new Promise((resolve, _reject) => {\r\n            setTimeout(() => {\r\n                resolve(data);\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async rejectMockData<T>(): Promise<T> {\r\n        return new Promise((_resolve, reject) => {\r\n            setTimeout(() => {\r\n                reject();\r\n            }, this.config.requestDelay);\r\n        });\r\n    }\r\n\r\n    protected async get<TResponse>(url: string, params?: { [key: string]: any }): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.get(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async post<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.post(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async put<TResponse>(url: string, params?: { [key: string]: any }, data?: any): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.put(url, data, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                },\r\n                params\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n\r\n    protected async delete<TResponse>(url: string): Promise<TResponse> {\r\n        try {\r\n            const response = await axios.delete(url, {\r\n                baseURL: this.config.apiUrl,\r\n                withCredentials: process.env.NODE_ENV !== 'test',\r\n                headers: {\r\n                    Accept: 'application/json; charset=utf=8',\r\n                    Authorization: 'Bearer ' + axios.defaults.headers.common.Authorization\r\n                }\r\n            });\r\n            return response.data as Promise<TResponse>;\r\n        } catch (error) {\r\n            return handleError(error);\r\n        }\r\n    }\r\n}\r\n","import { UserModel } from '../models/user';\r\n\r\nexport const usersMockData: UserModel[] = [\r\n    { id: '1', displayName: 'User 1', email: 'user1@email.com' },\r\n    { id: '2', displayName: 'User 2', email: 'user2@email.com' },\r\n    { id: '3', displayName: 'User 3', email: 'user3@email.com' },\r\n    { id: '4', displayName: 'User 4', email: 'user4@email.com' },\r\n    { id: '5', displayName: 'User 5', email: 'user5@email.com' }\r\n];\r\n","import { GroupFullModel, GroupModel } from '../models/group';\r\nimport { usersMockData } from './user';\r\n\r\nexport const groupsMockData: GroupModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData.map(x => x.id) },\r\n    { id: 2, name: 'Group 2', users: usersMockData.map(x => x.id) },\r\n    { id: 3, name: 'Group 3', users: usersMockData.map(x => x.id) },\r\n    { id: 4, name: 'Group 4', users: usersMockData.map(x => x.id) }\r\n];\r\n\r\nexport const groupsFullMockData: GroupFullModel[] = [\r\n    { id: 1, name: 'Group 1', users: usersMockData },\r\n    { id: 2, name: 'Group 2', users: usersMockData },\r\n    { id: 3, name: 'Group 3', users: usersMockData },\r\n    { id: 4, name: 'Group 4', users: usersMockData }\r\n];\r\n","import { LabelFullModel, LabelModel } from '../models/label';\r\n\r\nexport const labelsMockData: LabelModel[] = [\r\n    { id: 1, name: 'Label 1', groupId: 1 },\r\n    { id: 2, name: 'Label 2', groupId: 1 },\r\n    { id: 3, name: 'Label 3', groupId: 2 },\r\n    { id: 4, name: 'Label 4', groupId: 2 }\r\n];\r\n\r\nexport const labelsFullMockData: LabelFullModel[] = [\r\n    { id: 1, name: 'Label 1', groupId: 1, currValue: 1.11, lastValue: 5, avgValue: 6.33 },\r\n    { id: 2, name: 'Label 2', groupId: 1, currValue: 2.11, lastValue: 4, avgValue: 5.33 },\r\n    { id: 3, name: 'Label 3', groupId: 2, currValue: 3.11, lastValue: 3, avgValue: 4.33 },\r\n    { id: 4, name: 'Label 4', groupId: 2, currValue: 4.11, lastValue: 2, avgValue: 3.33 }\r\n];\r\n","import { ExpenseFullModel, ExpenseModel, ExpenseType } from '../models/expense';\r\nimport { groupsMockData } from './group';\r\nimport { labelsMockData } from './label';\r\n\r\nexport const expensesMockData: ExpenseModel[] = [\r\n    {\r\n        id: 1,\r\n        name: 'Expense 1',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 1.11,\r\n        date: new Date(2020, 0, 1),\r\n        comments: 'Comments 1',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[0].id\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Expense 2',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 2.11,\r\n        date: new Date(),\r\n        comments: 'Comments 2',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[1].id\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Expense 3',\r\n        type: ExpenseType.INCOMING,\r\n        value: 3.11,\r\n        date: new Date(),\r\n        comments: 'Comments 3',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[2].id\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Expense 4',\r\n        type: ExpenseType.INCOMING,\r\n        value: 4.11,\r\n        date: new Date(),\r\n        comments: 'Comments 3',\r\n        groupId: groupsMockData[0].id,\r\n        labelId: labelsMockData[3].id\r\n    }\r\n];\r\n\r\nexport const expensesFullMockData: ExpenseFullModel[] = [\r\n    {\r\n        id: 1,\r\n        name: 'Expense 1',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 1.11,\r\n        date: new Date(2020, 0, 1),\r\n        comments: 'Comments 1',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[0]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Expense 2',\r\n        type: ExpenseType.OUTCOMING,\r\n        value: 2.11,\r\n        date: new Date(),\r\n        comments: 'Comments 2',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[1]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Expense 3',\r\n        type: ExpenseType.INCOMING,\r\n        value: 3.11,\r\n        date: new Date(),\r\n        comments: 'Comments 3',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[2]\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Expense 4',\r\n        type: ExpenseType.INCOMING,\r\n        value: 4.11,\r\n        date: new Date(),\r\n        comments: 'Comments 4',\r\n        groupId: groupsMockData[0].id,\r\n        label: labelsMockData[3]\r\n    }\r\n];\r\n\r\nexport const yearsMockData: number[] = [2015, 2016, 2017, 2018, 2019, 2020];\r\n","import { expensesFullMockData, expensesMockData, yearsMockData } from '../mockData/expense';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { ExpenseFullModel, ExpenseModel } from '../models/expense';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class ExpenseService extends ServiceBase {\r\n    private baseUrl = '/api/expense';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getYears(group: number): Promise<number[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(yearsMockData);\r\n        }\r\n        return await this.get<number[]>(this.baseUrl + '/years');\r\n    }\r\n\r\n    async getAllFull(group: number, month: number, year: number): Promise<ExpenseFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesFullMockData);\r\n        }\r\n        return await this.get<ExpenseFullModel[]>(this.baseUrl + '/full', { group: group, month: month, year: year });\r\n    }\r\n\r\n    async getAll(group: number): Promise<ExpenseModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData);\r\n        }\r\n        return await this.get<ExpenseModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<ExpenseModel>): Promise<ExpenseModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(expensesMockData[0]);\r\n        }\r\n        return await this.post<ExpenseModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: ExpenseModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport interface ItemProps {\r\n    id: number;\r\n    name: string;\r\n    onEdit: (id: number) => void;\r\n    onDelete: (id: number) => void;\r\n}\r\n\r\nexport const ItemComponent: React.FC<React.PropsWithChildren<ItemProps>> = React.memo(\r\n    (props: React.PropsWithChildren<ItemProps>) => {\r\n        const [t] = useTranslation();\r\n\r\n        return (\r\n            <div className=\"item-component\">\r\n                <Card key={`${props.id}_${props.name}`} className=\"mb-1\">\r\n                    <Card.Title className=\"mt-2 mr-2 ml-2 mb-0\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            {props.name}\r\n                            <DropdownButton size=\"sm\" variant=\"secondary\" title=\"\" id={`menu-${props.id}`}>\r\n                                <Dropdown.Item eventKey=\"1\" onClick={() => props.onEdit(props.id)}>\r\n                                    {t('LABEL.EDIT')}\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Divider />\r\n                                <Dropdown.Item eventKey=\"2\" onClick={() => props.onDelete(props.id)}>\r\n                                    {t('LABEL.DELETE')}\r\n                                </Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </div>\r\n                    </Card.Title>\r\n                    <Card.Body className=\"p-2\">{props.children}</Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\n\nimport { ItemComponent } from '../../components/item/item';\nimport { ExpenseFullModel } from '../../models/expense';\n\nexport type ExpenseItemsProps = {\n    items: ExpenseFullModel[];\n    onEdit: (id: number) => void;\n    onDelete: (id: number) => void;\n};\n\nexport const ExpenseItemsPage: React.FC<ExpenseItemsProps> = React.memo((props: ExpenseItemsProps) => {\n    const [t] = useTranslation();\n\n    return (\n        <>\n            {props.items.map(item => (\n                <ItemComponent\n                    key={item.id}\n                    id={item.id}\n                    name={item.name}\n                    onEdit={() => props.onEdit(item.id)}\n                    onDelete={() => props.onDelete(item.id)}\n                >\n                    <div className=\"d-flex justify-content-between\">\n                        <p className=\"no-margin\">\n                            <small>{t('EXPENSE.VALUE')}</small>\n                            <br></br>\n                            {item.value.toFixed(2)}\n                        </p>\n                        <p className=\"no-margin\">\n                            <small>{t('EXPENSE.DATE')}</small>\n                            <br></br>\n                            {format(new Date(item.date), t('EXPENSE.DATE_FORMAT'))}\n                        </p>\n                        <p className=\"no-margin\">\n                            <small>{t('EXPENSE.LABEL')}</small>\n                            <br></br>\n                            {item.label.name}\n                        </p>\n                    </div>\n                </ItemComponent>\n            ))}\n        </>\n    );\n});\n","import { labelsFullMockData, labelsMockData } from '../mockData/label';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { LabelFullModel, LabelModel } from '../models/label';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class LabelService extends ServiceBase {\r\n    private baseUrl = '/api/label';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(group: number, month: number, year: number): Promise<LabelFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsFullMockData);\r\n        }\r\n        return await this.get<LabelFullModel[]>(this.baseUrl + '/full', {\r\n            group: group,\r\n            month: month,\r\n            year: year\r\n        });\r\n    }\r\n\r\n    async getAll(group: number): Promise<LabelModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData);\r\n        }\r\n        return await this.get<LabelModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<LabelModel>): Promise<LabelModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(labelsMockData[0]);\r\n        }\r\n        return await this.post<LabelModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: LabelModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport { ConfigManager } from '../../configurations/configManager';\nimport { globalContext } from '../../contexts/global';\nimport { hasValue } from '../../helpers/util';\nimport { ConfigModel } from '../../models/config';\nimport { ExpenseFullModel } from '../../models/expense';\nimport { ExpenseService } from '../../services/expense';\nimport { LabelModel } from '../../models/label';\nimport { LabelService } from '../../services/label';\nimport { LoadingComponent } from '../../components/loading/loading';\nimport { ErrorComponent } from '../../components/error/error';\n\nexport type ExpenseModalProps = {\n    show: boolean;\n    expense?: ExpenseFullModel;\n    onHide: () => void;\n    onAction: () => void;\n};\n\nexport const ExpenseModalPage: React.FC<ExpenseModalProps> = React.memo((props: ExpenseModalProps) => {\n    const [t] = useTranslation();\n\n    const { group } = useContext(globalContext);\n\n    const [error, setError] = React.useState('');\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\n    const [name, setName] = React.useState<string>('');\n    const [value, setValue] = React.useState<number>();\n    const [date, setDate] = React.useState<Date>(new Date());\n    const [label, setLabel] = React.useState<number>();\n    const [labels, setLabels] = React.useState<LabelModel[]>([]);\n    const [isLoadingLabels, setLoadingLabels] = React.useState<boolean>(false);\n    const [comments, setComments] = React.useState<string>('');\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\n\n    //#region handles\n    const handleOnChangeName = React.useCallback(event => {\n        setName(event.target.value);\n    }, []);\n\n    const handleOnChangeValue = React.useCallback(event => {\n        setValue(event.target.value as number);\n    }, []);\n\n    const handleOnChangeDate = React.useCallback(event => {\n        setDate(event.target.value);\n    }, []);\n\n    const handleOnChangeLabel = React.useCallback(event => {\n        setLabel(event.target.value as number);\n    }, []);\n\n    const handleOnChangeComments = React.useCallback(event => {\n        setComments(event.target.value);\n    }, []);\n\n    const handleOnAction = React.useCallback(async () => {\n        setLoadingAction(true);\n\n        if (hasValue(props.expense)) {\n            try {\n                await new ExpenseService(config).update({\n                    ...(props.expense as ExpenseFullModel),\n                    name: name,\n                    value: value as number,\n                    date: date,\n                    labelId: label as number,\n                    comments: comments\n                });\n                props.onAction();\n            } catch {\n                setError(t('EXPENSE.ERROR'));\n            } finally {\n                setLoadingAction(false);\n            }\n        } else {\n            setLoadingAction(true);\n            try {\n                await new ExpenseService(config).add({\n                    name: name,\n                    value: value as number,\n                    date: date,\n                    labelId: label as number,\n                    comments: comments,\n                    groupId: group\n                });\n                props.onAction();\n            } catch {\n                setError(t('EXPENSE.ERROR'));\n            } finally {\n                setLoadingAction(false);\n            }\n        }\n    }, [name, value, date, label, comments, t, config, props, group]);\n    //#endregion\n\n    React.useEffect(() => {\n        if (!props.show) {\n            return;\n        }\n\n        if (props.expense) {\n            setName(props.expense?.name);\n            setValue(props.expense?.value);\n            setDate(props.expense?.date);\n            setLabel(props.expense?.label.id);\n            setComments(props.expense?.comments);\n        } else {\n            setName('');\n            setValue(undefined);\n            setDate(new Date());\n            setLabel(labels.length > 0 ? labels[0].id : undefined);\n            setComments('');\n        }\n    }, [props, labels]);\n\n    React.useEffect(() => {\n        const runAsync = async () => {\n            setLoadingLabels(true);\n            setError('');\n            try {\n                const data = await new LabelService(config).getAll(group);\n                setLabels(data);\n            } catch {\n                setError(t('EXPENSE.ERROR'));\n            } finally {\n                setLoadingLabels(false);\n            }\n        };\n        runAsync();\n    }, [t, config, group]);\n\n    const disabledAction = React.useMemo(() => {\n        if (\n            isLoadingAction ||\n            isLoadingLabels ||\n            hasValue(error) ||\n            !hasValue(name) ||\n            !hasValue(value) ||\n            !hasValue(date) ||\n            !hasValue(label)\n        ) {\n            return true;\n        }\n\n        return false;\n    }, [error, name, value, date, label, isLoadingAction, isLoadingLabels]);\n\n    const labelOptions = React.useMemo(\n        () =>\n            labels.map(l => (\n                <option key={l.id} value={l.id}>\n                    {l.name}\n                </option>\n            )),\n        [labels]\n    );\n\n    return (\n        <>\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        {hasValue(props.expense) ? t('EXPENSE.MODAL.EDIT_TITLE') : t('EXPENSE.MODAL.ADD_TITLE')}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ErrorComponent message={error} />\n                    <Form>\n                        <Form.Group controlId=\"formName\">\n                            <Form.Label>{t('EXPENSE.MODAL.NAME')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-name-field\"\n                                type=\"text\"\n                                value={name}\n                                placeholder={t('EXPENSE.MODAL.NAME_PLACEHOLDER')}\n                                onChange={handleOnChangeName}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formValue\">\n                            <Form.Label>{t('EXPENSE.MODAL.VALUE')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-value-field\"\n                                type=\"number\"\n                                value={value ?? ''}\n                                placeholder={t('EXPENSE.MODAL.VALUE_PLACEHOLDER')}\n                                onChange={handleOnChangeValue}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formDate\">\n                            <Form.Label>{t('EXPENSE.MODAL.DATE')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-date-field\"\n                                type=\"date\"\n                                value={format(new Date(date), t('EXPENSE.FIELD_DATE_FORMAT'))}\n                                onChange={handleOnChangeDate}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formLabel\">\n                            <Form.Label>{t('EXPENSE.MODAL.LABEL')}</Form.Label>\n                            <LoadingComponent isLoading={isLoadingLabels}>\n                                <Form.Control as=\"select\" value={label ?? ''} onChange={handleOnChangeLabel}>\n                                    {labelOptions}\n                                </Form.Control>\n                            </LoadingComponent>\n                        </Form.Group>\n                        <Form.Group controlId=\"formComments\">\n                            <Form.Label>{t('EXPENSE.MODAL.COMMENTS')}</Form.Label>\n                            <Form.Control\n                                data-testid=\"expense-comments-field\"\n                                as=\"textarea\"\n                                rows={2}\n                                value={comments}\n                                placeholder={t('EXPENSE.MODAL.COMMENTS_PLACEHOLDER')}\n                                onChange={handleOnChangeComments}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\n                        {hasValue(props.expense) ? t('EXPENSE.MODAL.EDIT_ACTION') : t('EXPENSE.MODAL.ADD_ACTION')}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n});\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ExpenseFullModel } from '../../models/expense';\n\nexport type ExpenseSummaryProps = {\n    incoming: ExpenseFullModel[];\n    outcoming: ExpenseFullModel[];\n};\n\nexport const ExpenseSummaryPage: React.FC<ExpenseSummaryProps> = React.memo((props: ExpenseSummaryProps) => {\n    const [t] = useTranslation();\n\n    const { incoming, outcoming } = props;\n\n    const [totalIncoming, setTotalIncoming] = React.useState<number>(0);\n    const [totalOutcoming, setTotalOutcoming] = React.useState<number>(0);\n    const [totalLeft, setTotalLeft] = React.useState<number>(0);\n    const [totalLeftPer, setTotalLeftPer] = React.useState<number>(0);\n\n    React.useEffect(() => {\n        const tmpTotalIncoming = incoming.reduce((sum, current) => sum + current.value, 0);\n        const tmpTotalOutcoming = outcoming.reduce((sum, current) => sum + current.value, 0);\n\n        setTotalIncoming(tmpTotalIncoming);\n        setTotalOutcoming(tmpTotalOutcoming);\n\n        const tmpTotalLeft = tmpTotalIncoming - tmpTotalOutcoming;\n\n        setTotalLeft(tmpTotalLeft);\n        setTotalLeftPer((tmpTotalLeft / tmpTotalIncoming) * 100);\n    }, [incoming, outcoming]);\n\n    return (\n        <>\n            <div className=\"mt-2 row\">\n                <div className=\"col\">\n                    <p>{t('EXPENSE.TOTAL_INCOMING')}</p>\n                </div>\n                <div className=\"col\">{totalIncoming.toFixed(2)}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p>{t('EXPENSE.TOTAL_OUTCOMING')}</p>\n                </div>\n                <div className=\"col\">{totalOutcoming.toFixed(2)}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p>{t('EXPENSE.TOTAL_LEFT')}</p>\n                </div>\n                <div className=\"col\">{`${totalLeft.toFixed(2)} - ${totalLeftPer.toFixed(2)}%`}</div>\n            </div>\n        </>\n    );\n});\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\n\r\nimport { ErrorComponent } from '../../components/error/error';\r\nimport { ItemsHeaderComponent } from '../../components/item/itemsHeader';\r\nimport { LoadingComponent } from '../../components/loading/loading';\r\nimport { SearchComponent } from '../../components/search/search';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ExpenseFullModel, ExpenseType } from '../../models/expense';\r\nimport { ExpenseService } from '../../services/expense';\r\nimport { ExpenseItemsPage } from './expenseItems';\r\nimport { ExpenseModalPage } from './expenseModal';\r\nimport { ExpenseSummaryPage } from './expenseSummary';\r\n\r\nexport type ExpenseProps = {};\r\n\r\nconst ExpenseStyle = createGlobalStyle`\r\n    .no-margin {\r\n        margin: 0px;\r\n    };\r\n    canvas {\r\n        max-width: 500px;\r\n    };\r\n    .red-text {\r\n        color: #dc3545;\r\n    }\r\n`;\r\n\r\nexport const ExpensePage: React.FC<ExpenseProps> = React.memo((props: ExpenseProps) => {\r\n    const [t] = useTranslation();\r\n    const global = useContext(globalContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [expenses, setExpenses] = React.useState<ExpenseFullModel[]>([]);\r\n    const [expense, setExpense] = React.useState<ExpenseFullModel>();\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n\r\n    // #region main\r\n    React.useEffect(() => {\r\n        if (global.isLoading) {\r\n            return;\r\n        }\r\n\r\n        const runAsync = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new ExpenseService(config).getAllFull(global.group, global.month, global.year);\r\n                setExpenses(data);\r\n            } catch {\r\n                setExpenses([]);\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [global, config, t, refresh]);\r\n    // #endregion\r\n\r\n    // #region handles\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setExpense(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setExpense(expenses.find(x => x.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [expenses]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new ExpenseService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            }\r\n        },\r\n        [config, t, refresh]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n    // #endregion\r\n\r\n    //#region items\r\n    const incomingItems = React.useMemo(() => {\r\n        return expenses.filter(x => x.type === ExpenseType.INCOMING);\r\n    }, [expenses]);\r\n\r\n    const outcomingItems = React.useMemo(() => {\r\n        return expenses.filter(x => x.type === ExpenseType.OUTCOMING);\r\n    }, [expenses]);\r\n    //#endregion\r\n\r\n    return (\r\n        <>\r\n            <ExpenseStyle />\r\n            <SearchComponent />\r\n            <ItemsHeaderComponent title={t('EXPENSE.TITLE')} action={t('EXPENSE.ADD')} onAction={handleOnAdd} />\r\n            <ErrorComponent message={error} />\r\n            <LoadingComponent isLoading={isLoading || global.isLoading}>\r\n                <Tabs defaultActiveKey=\"summary\">\r\n                    <Tab eventKey=\"summary\" title={t('EXPENSE.SUMMARY')}>\r\n                        <ExpenseSummaryPage incoming={incomingItems} outcoming={outcomingItems} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"incoming\" title={t('EXPENSE.INCOMING')}>\r\n                        <ExpenseItemsPage items={incomingItems} onEdit={handleOnEdit} onDelete={handleOnDelete} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"outcoming\" title={t('EXPENSE.OUTCOMING')}>\r\n                        <ExpenseItemsPage items={outcomingItems} onEdit={handleOnEdit} onDelete={handleOnDelete} />\r\n                    </Tab>\r\n                </Tabs>\r\n            </LoadingComponent>\r\n            <ExpenseModalPage show={showModal} expense={expense} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import { groupsFullMockData, groupsMockData } from '../mockData/group';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { GroupFullModel, GroupModel } from '../models/group';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class GroupService extends ServiceBase {\r\n    private baseUrl = '/api/group';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAllFull(user: string): Promise<GroupFullModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsFullMockData);\r\n            //return this.rejectMockData();\r\n        }\r\n        return await this.get<GroupFullModel[]>(this.baseUrl + '/full', { user: user });\r\n    }\r\n\r\n    async getAll(userId: string): Promise<GroupModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData);\r\n        }\r\n        return await this.get<GroupModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<GroupModel>): Promise<GroupModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(groupsMockData[0]);\r\n        }\r\n        return await this.post<GroupModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: GroupModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: number): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import { usersMockData } from '../mockData/user';\r\nimport { ApiType, ConfigModel } from '../models/config';\r\nimport { UserModel } from '../models/user';\r\nimport { ServiceBase } from './base';\r\n\r\nexport class UserService extends ServiceBase {\r\n    private baseUrl = '/api/user';\r\n\r\n    constructor(protected config: ConfigModel) {\r\n        super(config);\r\n    }\r\n\r\n    async getAll(): Promise<UserModel[]> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(usersMockData);\r\n        }\r\n        return await this.get<UserModel[]>(this.baseUrl);\r\n    }\r\n\r\n    async add(obj: Partial<UserModel>): Promise<UserModel> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData(usersMockData[0]);\r\n        }\r\n        return await this.post<UserModel>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async update(obj: UserModel): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.put<void>(this.baseUrl, {}, obj);\r\n    }\r\n\r\n    async remove(id: string): Promise<void> {\r\n        if (this.config.apiUrl === ApiType.FIREBASE) {\r\n        } else if (this.config.apiUrl === ApiType.LOCAL_STORAGE) {\r\n        } else if (this.config.apiUrl === ApiType.TOTAL_FAKE) {\r\n            return this.resolveMockData<void>(undefined);\r\n        }\r\n        return await this.delete<void>(this.baseUrl + '/' + id);\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { UserService } from '../../services/user';\r\nimport { UserModel } from '../../models/user';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nexport type GroupModalProps = {\r\n    show: boolean;\r\n    group?: GroupFullModel;\r\n    onHide: () => void;\r\n    onAction: () => void;\r\n};\r\n\r\nexport const GroupModalPage: React.FC<GroupModalProps> = React.memo((props: GroupModalProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { user } = useContext(userContext);\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [name, setName] = React.useState<string>('');\r\n    const [selectedUsers, setSelectedUsers] = React.useState<string[]>([]);\r\n    const [users, setUsers] = React.useState<UserModel[]>([]);\r\n    const [isLoadingUsers, setLoadingUsers] = React.useState(false);\r\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\r\n\r\n    const handleOnChangeName = React.useCallback(event => {\r\n        setName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnChangeUsers = React.useCallback(event => {\r\n        setSelectedUsers(Array.from(event.target.selectedOptions, (option: any) => option.value));\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoadingAction(true);\r\n\r\n        if (hasValue(props.group)) {\r\n            try {\r\n                await new GroupService(config).update({\r\n                    id: props.group?.id as number,\r\n                    name: name,\r\n                    users: selectedUsers\r\n                });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        } else {\r\n            setLoadingAction(true);\r\n            try {\r\n                await new GroupService(config).add({ name: name, users: selectedUsers });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        }\r\n    }, [name, selectedUsers, t, config, props]);\r\n\r\n    React.useEffect(() => {\r\n        if (!props.show) {\r\n            return;\r\n        }\r\n\r\n        if (props.group) {\r\n            setName(props.group?.name);\r\n            setSelectedUsers(props.group?.users.map(x => x.id));\r\n        } else {\r\n            setName('');\r\n            setSelectedUsers([]);\r\n        }\r\n    }, [props]);\r\n\r\n    React.useEffect(() => {\r\n        const runAsync = async () => {\r\n            setLoadingUsers(true);\r\n            setError('');\r\n            try {\r\n                const data = await new UserService(config).getAll();\r\n                setUsers(data);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoadingUsers(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [t, config]);\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (isLoadingAction) {\r\n            return true;\r\n        }\r\n\r\n        if (hasValue(error)) {\r\n            return true;\r\n        }\r\n\r\n        if (!hasValue(name) || !hasValue(selectedUsers)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [error, name, selectedUsers, isLoadingAction]);\r\n\r\n    const usersOption = React.useMemo(\r\n        () =>\r\n            users.map(u =>\r\n                user?.uid === u.id ? (\r\n                    <option key={u.id} value={u.id}>\r\n                        {t('GROUP.YOU')}\r\n                    </option>\r\n                ) : (\r\n                    <option key={u.id} value={u.id}>{`${u.displayName} (${u.email})`}</option>\r\n                )\r\n            ),\r\n        [users, user, t]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_TITLE') : t('GROUP.MODAL.ADD_TITLE')}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ErrorComponent message={error} />\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>{t('GROUP.MODAL.NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-name-field\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                placeholder={t('GROUP.MODAL.NAME_PLACEHOLDER')}\r\n                                onChange={handleOnChangeName}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                            <Form.Label>{t('GROUP.MODAL.USERS')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"group-users-field\"\r\n                                as=\"select\"\r\n                                multiple\r\n                                value={selectedUsers}\r\n                                readOnly={isLoadingUsers && hasValue(error)}\r\n                                onChange={handleOnChangeUsers}\r\n                            >\r\n                                {usersOption}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\r\n                        {hasValue(props.group) ? t('GROUP.MODAL.EDIT_ACTION') : t('GROUP.MODAL.ADD_ACTION')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { userContext } from '../../contexts/user';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { GroupFullModel } from '../../models/group';\r\nimport { GroupService } from '../../services/group';\r\nimport { getUserDisplayName } from '../../helpers/user';\r\nimport { GroupModalPage } from './groupModal';\r\nimport { ItemComponent } from '../../components/item/item';\r\nimport { LoadingComponent } from '../../components/loading/loading';\r\nimport { ItemsHeaderComponent } from '../../components/item/itemsHeader';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nconst GroupStyle = createGlobalStyle`\r\n    `;\r\n\r\nexport type GroupProps = {};\r\n\r\nexport const GroupPage: React.FC<GroupProps> = React.memo((props: GroupProps) => {\r\n    const [t] = useTranslation();\r\n    const { user } = useContext(userContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [group, setGroup] = React.useState<GroupFullModel>();\r\n    const [groups, setGroups] = React.useState<GroupFullModel[]>([]);\r\n    const [error, setError] = React.useState<string>('');\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setGroup(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setGroup(groups.find(g => g.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [groups]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new GroupService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('GROUP.ERROR'));\r\n            }\r\n        },\r\n        [config, refresh, t]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n\r\n    React.useEffect(() => {\r\n        const setup = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new GroupService(config).getAllFull(user?.uid ?? '');\r\n                setGroups(data);\r\n            } catch {\r\n                setGroups([]);\r\n                setError(t('GROUP.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        setup();\r\n    }, [config, user, refresh, t]);\r\n\r\n    const groupElements = React.useMemo(\r\n        () =>\r\n            groups.map((group, index) => (\r\n                <ItemComponent\r\n                    key={group.id}\r\n                    id={group.id}\r\n                    name={group.name}\r\n                    onEdit={handleOnEdit}\r\n                    onDelete={handleOnDelete}\r\n                >\r\n                    <div key={`GROUP_USERS_${index}`} className=\"d-flex flex-wrap justify-content-start\">\r\n                        {group.users.map((user, indexUser) => (\r\n                            <small key={`GROUP_SMALL_${index}_${indexUser}`} className=\"mr-2\">\r\n                                {getUserDisplayName(user)}\r\n                            </small>\r\n                        ))}\r\n                    </div>\r\n                </ItemComponent>\r\n            )),\r\n        [groups, handleOnEdit, handleOnDelete]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <GroupStyle />\r\n            <ItemsHeaderComponent title={t('GROUP.TITLE')} action={t('GROUP.ADD')} onAction={handleOnAdd} />\r\n            <ErrorComponent message={error} />\r\n            <LoadingComponent isLoading={isLoading}>{groupElements}</LoadingComponent>\r\n            <GroupModalPage show={showModal} group={group} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport 'chartjs-plugin-colorschemes';\r\n\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nimport { SearchComponent } from '../../components/search/search';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ConfigModel } from '../../models/config';\r\nimport { LabelFullModel } from '../../models/label';\r\nimport { LabelService } from '../../services/label';\r\nimport { ItemComponent } from '../../components/item/item';\r\nimport { LabelModalPage } from './labelModal';\r\nimport { LoadingComponent } from '../../components/loading/loading';\r\nimport { ErrorComponent } from '../../components/error/error';\r\nimport { ItemsHeaderComponent } from '../../components/item/itemsHeader';\r\n\r\nexport type LabelProps = {};\r\n\r\nenum LabelGrapyType {\r\n    CURRENT_MONTH = 1,\r\n    LAST_MONTH,\r\n    AVERAGE\r\n}\r\n\r\nconst LabelStyle = createGlobalStyle`\r\n    .no-margin {\r\n        margin: 0px;\r\n    };\r\n    canvas {\r\n        max-width: 500px;\r\n    };\r\n    .red-text {\r\n        color: #dc3545;\r\n    }\r\n`;\r\n\r\nexport const LabelPage: React.FC<LabelProps> = React.memo((_props: LabelProps) => {\r\n    const [t] = useTranslation();\r\n    const global = useContext(globalContext);\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [error, setError] = React.useState<string>('');\r\n    const [isLoading, setLoading] = React.useState<boolean>(false);\r\n    const [labels, setLabels] = React.useState<LabelFullModel[]>([]);\r\n    const [label, setLabel] = React.useState<LabelFullModel>();\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n    const [refresh, setRefresh] = React.useState<boolean>(false);\r\n    const [graphType, setGrahType] = React.useState(LabelGrapyType.CURRENT_MONTH);\r\n\r\n    // #region main\r\n    React.useEffect(() => {\r\n        if (global.isLoading) {\r\n            return;\r\n        }\r\n\r\n        const runAsync = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await new LabelService(config).getAllFull(global.group, global.month, global.year);\r\n                setLabels(data);\r\n            } catch {\r\n                setLabels([]);\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        runAsync();\r\n    }, [global, config, t, refresh]);\r\n    // #endregion\r\n\r\n    // #region handles\r\n    const handleOnAdd = React.useCallback(() => {\r\n        setLabel(undefined);\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    const handleOnEdit = React.useCallback(\r\n        (id: number) => {\r\n            setLabel(labels.find(g => g.id === id));\r\n            setShowModal(true);\r\n        },\r\n        [labels]\r\n    );\r\n\r\n    const handleOnDelete = React.useCallback(\r\n        async (id: number) => {\r\n            try {\r\n                await new LabelService(config).remove(id);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                }, config.requestDelay);\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            }\r\n        },\r\n        [config, t, refresh]\r\n    );\r\n\r\n    const handleOnHide = React.useCallback(() => {\r\n        setShowModal(false);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(() => {\r\n        setShowModal(false);\r\n        setTimeout(() => {\r\n            setRefresh(!refresh);\r\n        }, config.requestDelay);\r\n    }, [config, refresh]);\r\n\r\n    const handleOnGraphType = React.useCallback((value: number) => {\r\n        setGrahType(value);\r\n    }, []);\r\n    // #endregion\r\n\r\n    // #region items\r\n    const itemsElements = React.useMemo(\r\n        () =>\r\n            labels.map(label => {\r\n                const currValueClass =\r\n                    label.currValue > label.lastValue || label.currValue > label.avgValue ? 'red-text' : '';\r\n                const lastValueClass = label.lastValue > label.avgValue ? 'red-text' : '';\r\n\r\n                return (\r\n                    <ItemComponent\r\n                        key={label.id}\r\n                        id={label.id}\r\n                        name={label.name}\r\n                        onEdit={handleOnEdit}\r\n                        onDelete={handleOnDelete}\r\n                    >\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <p className={`no-margin ${currValueClass}`}>\r\n                                <small>{t('LABEL.CURRENT_MONTH')}</small>\r\n                                <br></br>\r\n                                {label.currValue.toFixed(2)}\r\n                            </p>\r\n                            <p className={`no-margin ${lastValueClass}`}>\r\n                                <small>{t('LABEL.LAST_MONTH')}</small>\r\n                                <br></br>\r\n                                {label.lastValue.toFixed(2)}\r\n                            </p>\r\n                            <p className=\"no-margin\">\r\n                                <small>{t('LABEL.AVERAGE')}</small>\r\n                                <br></br>\r\n                                {label.avgValue.toFixed(2)}\r\n                            </p>\r\n                        </div>\r\n                    </ItemComponent>\r\n                );\r\n            }),\r\n        [labels, handleOnEdit, handleOnDelete, t]\r\n    );\r\n    // #endregion\r\n\r\n    // #region graph\r\n    const graphElement = React.useMemo(\r\n        () => (\r\n            <>\r\n                <Pie\r\n                    key={graphType}\r\n                    data={\r\n                        labels.length > 0\r\n                            ? {\r\n                                  labels: labels.map(label => label.name),\r\n                                  datasets: [\r\n                                      {\r\n                                          data: labels.map(label =>\r\n                                              graphType === LabelGrapyType.CURRENT_MONTH\r\n                                                  ? label.currValue\r\n                                                  : graphType === LabelGrapyType.LAST_MONTH\r\n                                                  ? label.lastValue\r\n                                                  : label.avgValue\r\n                                          ),\r\n                                          borderWidth: 0\r\n                                      }\r\n                                  ]\r\n                              }\r\n                            : {\r\n                                  labels: ['Empty'],\r\n                                  datasets: [\r\n                                      {\r\n                                          data: [1],\r\n                                          borderWidth: 0\r\n                                      }\r\n                                  ]\r\n                              }\r\n                    }\r\n                    options={{\r\n                        plugins: {\r\n                            colorschemes: {\r\n                                scheme: 'office.Excel16'\r\n                            }\r\n                        }\r\n                    }}\r\n                    width={100}\r\n                    height={100}\r\n                />\r\n            </>\r\n        ),\r\n        [labels, graphType]\r\n    );\r\n    // #endregion\r\n\r\n    return (\r\n        <>\r\n            <LabelStyle />\r\n            <SearchComponent />\r\n            <ItemsHeaderComponent title={t('LABEL.TITLE')} action={t('LABEL.ADD')} onAction={handleOnAdd} />\r\n            <ErrorComponent message={error} />\r\n            <LoadingComponent isLoading={isLoading}>\r\n                <Tabs defaultActiveKey=\"items\">\r\n                    <Tab eventKey=\"items\" title={t('LABEL.TAB_ITEMS')}>\r\n                        {itemsElements}\r\n                    </Tab>\r\n                    <Tab eventKey=\"graph\" title={t('LABEL.TAB_GRAPH')}>\r\n                        <div className=\"m-2 d-flex justify-content-center\">\r\n                            <ToggleButtonGroup\r\n                                type=\"radio\"\r\n                                name=\"options\"\r\n                                value={graphType}\r\n                                onChange={handleOnGraphType}\r\n                            >\r\n                                <ToggleButton value={LabelGrapyType.CURRENT_MONTH}>\r\n                                    {t('LABEL.CURRENT_MONTH')}\r\n                                </ToggleButton>\r\n                                <ToggleButton value={LabelGrapyType.LAST_MONTH}>{t('LABEL.LAST_MONTH')}</ToggleButton>\r\n                                <ToggleButton value={LabelGrapyType.AVERAGE}>{t('LABEL.AVERAGE')}</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            {/* ignore chart.js on testing */}\r\n                            {process.env.NODE_ENV !== 'test' && graphElement}\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </LoadingComponent>\r\n            <LabelModalPage show={showModal} label={label} onHide={handleOnHide} onAction={handleOnAction} />\r\n        </>\r\n    );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { ConfigModel } from '../../models/config';\r\nimport { ConfigManager } from '../../configurations/configManager';\r\nimport { hasValue } from '../../helpers/util';\r\nimport { LabelFullModel } from '../../models/label';\r\nimport { LabelService } from '../../services/label';\r\nimport { globalContext } from '../../contexts/global';\r\nimport { ErrorComponent } from '../../components/error/error';\r\n\r\nexport type LabelModalProps = {\r\n    show: boolean;\r\n    label?: LabelFullModel;\r\n    onHide: () => void;\r\n    onAction: () => void;\r\n};\r\n\r\nexport const LabelModalPage: React.FC<LabelModalProps> = React.memo((props: LabelModalProps) => {\r\n    const [t] = useTranslation();\r\n\r\n    const { group } = useContext(globalContext);\r\n\r\n    const [error, setError] = React.useState('');\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n    const [name, setName] = React.useState<string>('');\r\n    const [isLoadingAction, setLoadingAction] = React.useState(false);\r\n\r\n    const handleOnChangeName = React.useCallback(event => {\r\n        setName(event.target.value);\r\n    }, []);\r\n\r\n    const handleOnAction = React.useCallback(async () => {\r\n        setLoadingAction(true);\r\n\r\n        if (hasValue(props.label)) {\r\n            try {\r\n                await new LabelService(config).update({\r\n                    ...(props.label as LabelFullModel),\r\n                    name: name\r\n                });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        } else {\r\n            setLoadingAction(true);\r\n            try {\r\n                await new LabelService(config).add({ name: name, groupId: group });\r\n                props.onAction();\r\n            } catch {\r\n                setError(t('LABEL.ERROR'));\r\n            } finally {\r\n                setLoadingAction(false);\r\n            }\r\n        }\r\n    }, [name, t, config, props, group]);\r\n\r\n    React.useEffect(() => {\r\n        if (!props.show) {\r\n            return;\r\n        }\r\n\r\n        if (props.label) {\r\n            setName(props.label?.name);\r\n        } else {\r\n            setName('');\r\n        }\r\n    }, [props]);\r\n\r\n    const disabledAction = React.useMemo(() => {\r\n        if (isLoadingAction || hasValue(error) || !hasValue(name)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [error, name, isLoadingAction]);\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.onHide} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {hasValue(props.label) ? t('LABEL.MODAL.EDIT_TITLE') : t('LABEL.MODAL.ADD_TITLE')}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ErrorComponent message={error} />\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>{t('LABEL.MODAL.NAME')}</Form.Label>\r\n                            <Form.Control\r\n                                data-testid=\"label-name-field\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                placeholder={t('LABEL.MODAL.NAME_PLACEHOLDER')}\r\n                                onChange={handleOnChangeName}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleOnAction} disabled={disabledAction}>\r\n                        {hasValue(props.label) ? t('LABEL.MODAL.EDIT_ACTION') : t('LABEL.MODAL.ADD_ACTION')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","export const getFirebaseConfig = (projectId: string, apiKey: string) => ({\r\n    apiKey: apiKey,\r\n    authDomain: `${projectId}.firebaseapp.com`,\r\n    databaseURL: `https://${projectId}.firebaseio.com`,\r\n    projectId: projectId,\r\n    storageBucket: projectId,\r\n    messagingSenderId: 'my-sender-id'\r\n});\r\n","import React from 'react';\r\n\r\nexport type SettingsProps = {};\r\n\r\nexport const SettingsPage: React.FC<SettingsProps> = React.memo((props: SettingsProps) => {\r\n    return <>Settings page</>;\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { userContext } from '../contexts/user';\r\n\r\ninterface PrivateRouteProps {\r\n    component: any;\r\n    path?: string;\r\n}\r\n\r\nexport const PrivateRoute = ({ component: Component, path, ...other }: PrivateRouteProps) => {\r\n    const { user } = useContext(userContext);\r\n    return user ? <Component /> : <Redirect to=\"/auth\" />;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport { ConfigManager } from '../configurations/configManager';\r\nimport { ConfigModel } from '../models/config';\r\nimport { AuthPage } from './auth/auth';\r\nimport { ExpensePage } from './expense/expense';\r\nimport { GroupPage } from './group/group';\r\nimport { LabelPage } from './label/label';\r\nimport { Routes } from './routes';\r\nimport { SettingsPage } from './settings/settings';\r\n\r\nimport { userContext } from '../contexts/user';\r\nimport { PrivateRoute } from '../helpers/privateRouter';\r\nimport { GroupModel } from '../models/group';\r\nimport { GroupService } from '../services/group';\r\nimport { ExpenseService } from '../services/expense';\r\nimport { globalContext } from '../contexts/global';\r\nimport { SearchModel } from '../models/search';\r\nimport { hasValue } from '../helpers/util';\r\n\r\nexport type MainProps = {};\r\n\r\nexport const MainPage: React.FC<MainProps> = React.memo((_props: MainProps) => {\r\n    const { user, isReady } = useContext(userContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\r\n\r\n    const [isLoading, setLoading] = React.useState<boolean>(true);\r\n\r\n    const [groups, setGroups] = React.useState<GroupModel[]>([]);\r\n    const [years, setYears] = React.useState<number[]>([]);\r\n\r\n    const [group, setGroup] = React.useState<GroupModel>();\r\n    const [month, setMonth] = React.useState<number>(new Date().getMonth());\r\n    const [year, setYear] = React.useState<number>(0);\r\n\r\n    React.useEffect(() => {\r\n        if (!isReady) {\r\n            return;\r\n        }\r\n\r\n        const jsonString = JSON.stringify(queryString.parse(location.search));\r\n        const searchParams = JSON.parse(jsonString) as SearchModel;\r\n        setLoading(true);\r\n\r\n        const setup = async () => {\r\n            let groupsResults: GroupModel[];\r\n            let groupResults: GroupModel | undefined;\r\n            let monthResults: number;\r\n            let yearsResults: number[];\r\n            let yearResults: number;\r\n\r\n            if (groups.length > 0) {\r\n                groupsResults = groups;\r\n            } else {\r\n                try {\r\n                    groupsResults = await new GroupService(config).getAll(user?.uid ?? '');\r\n                } catch {\r\n                    groupsResults = [];\r\n                }\r\n\r\n                console.log('load again ', groupsResults);\r\n            }\r\n\r\n            const lastGroup = localStorage.getItem('group') as string;\r\n            setGroups(groupsResults);\r\n            if (hasValue(searchParams.group) && groupsResults.some(x => x.id === +searchParams.group)) {\r\n                groupResults = groupsResults.find(x => x.id === +searchParams.group) as GroupModel;\r\n            } else if (hasValue(lastGroup) && groupsResults.some(x => x.id === +lastGroup)) {\r\n                groupResults = groupsResults.find(x => x.id === +lastGroup) as GroupModel;\r\n            } else if (hasValue(groupsResults)) {\r\n                groupResults = groupsResults[0];\r\n            } else {\r\n                // groupResults = {} as Partial<GroupModel>;\r\n                // show error - does not have groups loaded\r\n            }\r\n\r\n            setGroup(groupResults);\r\n            localStorage.setItem('group', groupResults?.id.toString() as string);\r\n\r\n            const lastMonth = localStorage.getItem('month') as string;\r\n            if (hasValue(searchParams.month) && searchParams.month >= 1 && searchParams.month <= 12) {\r\n                monthResults = searchParams.month;\r\n            } else if (hasValue(lastMonth) && +lastMonth >= 1 && +lastMonth <= 12) {\r\n                monthResults = +lastMonth;\r\n            } else {\r\n                monthResults = new Date().getMonth();\r\n            }\r\n            setMonth(monthResults);\r\n            localStorage.setItem('month', monthResults.toString());\r\n\r\n            if (years.length > 0) {\r\n                yearsResults = years;\r\n            } else {\r\n                try {\r\n                    yearsResults = await new ExpenseService(config).getYears(groupResults?.id ?? 0);\r\n                } catch {\r\n                    yearsResults = [];\r\n                }\r\n            }\r\n\r\n            // TODO get years from expenses\r\n            const lastYear = localStorage.getItem('year') as string;\r\n            setYears(yearsResults);\r\n            if (hasValue(searchParams.year) && yearsResults.some(x => x === +searchParams.year)) {\r\n                yearResults = searchParams.year;\r\n            } else if (hasValue(lastYear) && yearsResults.some(x => x === +lastYear)) {\r\n                yearResults = +lastYear;\r\n            } else {\r\n                yearResults = new Date().getFullYear();\r\n            }\r\n            setYear(yearResults);\r\n            localStorage.setItem('year', yearResults.toString());\r\n\r\n            history.push({\r\n                pathname: location.pathname,\r\n                search: queryString.stringify({\r\n                    group: groupResults?.id,\r\n                    month: monthResults,\r\n                    year: yearResults\r\n                })\r\n            });\r\n\r\n            setLoading(false);\r\n        };\r\n        setup();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [config, history, location, isReady, user]);\r\n\r\n    return (\r\n        <>\r\n            <globalContext.Provider\r\n                value={{\r\n                    isLoading: isLoading,\r\n\r\n                    groups: groups,\r\n                    years: years,\r\n\r\n                    group: group?.id ?? 0,\r\n                    month: month,\r\n                    year: year\r\n                }}\r\n            >\r\n                <Container className=\"mt-2\">\r\n                    <Switch>\r\n                        {isReady && <PrivateRoute key={Routes.group} path={Routes.group} component={GroupPage} />}\r\n                        {isReady && <PrivateRoute key={Routes.label} path={Routes.label} component={LabelPage} />}\r\n                        {isReady && <PrivateRoute key={Routes.expense} path={Routes.expense} component={ExpensePage} />}\r\n                        <PrivateRoute key={Routes.settings} path={Routes.settings} component={SettingsPage} />\r\n                        <Route key={Routes.auth} path={Routes.auth} component={AuthPage} />\r\n                        <Route key={Routes.home} exact path={Routes.home}>\r\n                            <>\r\n                                <h3>HOME</h3>\r\n                                <h6>Build Version: {config.buildVersion}</h6>\r\n                            </>\r\n                        </Route>\r\n                        <Route key={'*'} path=\"*\">\r\n                            <h1> 404 </h1>\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n            </globalContext.Provider>\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\n\nimport { HeaderComponent } from '../components/header/header';\nimport { ConfigManager } from '../configurations/configManager';\nimport { ConfigModel } from '../models/config';\nimport { useAuth } from '../services/auth';\n\nimport { GlobalStyles } from './globalSyles';\nimport { darkTheme } from './theme';\nimport { hasValue } from '../helpers/util';\nimport { userContext } from '../contexts/user';\nimport { MainPage } from './main';\n\nexport type AppProps = {};\n\nexport const AppPage: React.FC<AppProps> = React.memo((_props: AppProps) => {\n    const [config] = React.useState<ConfigModel>(ConfigManager.get());\n    const isDarkMode = React.useMemo(\n        () => window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches,\n        []\n    );\n    const { user, initialising } = useAuth();\n\n    const [isReady, setReady] = React.useState<boolean>(false);\n\n    React.useEffect(() => {\n        if (initialising || !user) {\n            return;\n        }\n\n        if (hasValue(user)) {\n            user.getIdTokenResult().then((value: any) => {\n                axios.defaults.headers.common.Authorization = value.token;\n                // new UserService(config).addOrUpdate({\n                //     id: user.uid,\n                //     email: user.email,\n                //     displayName: user.displayName,\n                //     photoUrl: user.photoURL\n                // } as UserModel);\n                setReady(true);\n            });\n        }\n    }, [user, initialising, config]);\n\n    return (\n        <>\n            <ThemeProvider theme={isDarkMode ? darkTheme : {}}>\n                <>\n                    <GlobalStyles />\n                    <userContext.Provider\n                        value={{\n                            user: user,\n                            initialising: initialising,\n                            isReady: isReady\n                        }}\n                    >\n                        {config.useHashRouter && (\n                            <HashRouter basename=\"/\">\n                                <HeaderComponent />\n                                <MainPage />\n                            </HashRouter>\n                        )}\n                        {!config.useHashRouter && (\n                            <BrowserRouter basename=\"/\">\n                                <HeaderComponent />\n                                <MainPage />\n                            </BrowserRouter>\n                        )}\n                    </userContext.Provider>\n                </>\n            </ThemeProvider>\n        </>\n    );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeApp } from 'firebase';\nimport * as serviceWorker from './serviceWorker';\n\nimport './configurations/i18n';\nimport './index.scss';\n\nimport { setConfiguration } from './configurations/configManager';\nimport { AppPage } from './pages/app';\nimport { getFirebaseConfig } from './configurations/firebase';\nimport { getValueOrDefault } from './helpers/util';\n\nconst config = setConfiguration();\n\n// initialize firebase\ninitializeApp({\n    ...getFirebaseConfig(\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_PROJECT, config.firebaseProject),\n        getValueOrDefault(process.env.REACT_APP_FIREBASE_API_KEY, config.firebaseApiKey)\n    )\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppPage />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}