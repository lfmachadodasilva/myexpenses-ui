name: docker

on:
    push:
        branches:
            - master
            - 'dev-*'

jobs:
    build-test-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout üõéÔ∏è
              uses: actions/checkout@v2
            - name: Install & Build üõ†
              run: docker build . --target build -t build:$GITHUB_RUN_NUMBER
            - name: Test üîå
              run: |
                  docker build . --target test -t test:$GITHUB_RUN_NUMBER --cache-from build:$GITHUB_RUN_NUMBER
                  docker run --rm -i -v $PWD/coverage:/app/coverage test:$GITHUB_RUN_NUMBER
            - name: Final üì¶
              run: docker build . --target final -t $GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER --cache-from build:$GITHUB_RUN_NUMBER
            - name: Deploy to github üöÄ
              run: |
                  echo "${{ secrets.GH_TOKEN }}" | docker login -u lfmachadodasilva --password-stdin docker.pkg.github.com
                  docker tag $GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER docker.pkg.github.com/$GITHUB_REPOSITORY/${GITHUB_REF##*/}:$GITHUB_RUN_NUMBER
                  docker tag $GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER docker.pkg.github.com/$GITHUB_REPOSITORY/${GITHUB_REF##*/}:latest
                  docker push docker.pkg.github.com/$GITHUB_REPOSITORY/${GITHUB_REF##*/}:$GITHUB_RUN_NUMBER
                  docker push docker.pkg.github.com/$GITHUB_REPOSITORY/${GITHUB_REF##*/}:latest
            - name: Publish Codecov üìà
              uses: codecov/codecov-action@v1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  file: coverage/*
            - name: Deploy to heroku (dev) üöÄ
              env:
                  HEROKU_API_KEY: ${{ secrets.HEROKU_PASSWORD }}
                  API_URL: ${{ secrets.API_URL_DEV }}
                  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY_DEV }}
                  FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT_DEV }}
              run: |
                  envsubst < util/.env.template > .env
                  envsubst < util/firebase.template > src/configurations/firebase.ts
                  wget -qO- https://cli-assets.heroku.com/install.sh | sh
                  echo "${{ secrets.HEROKU_PASSWORD }}" | docker login -u "${{ secrets.HEROKU_USERNAME }}" --password-stdin registry.heroku.com
                  docker tag $GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER web
                  heroku container:push web --app ${{ secrets.HEROKU_APP_NAME }}-dev
                  heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}-dev
            - name: Deploy to heroku (prod) üöÄ
              if: github.ref == 'refs/heads/master'
              env:
                  HEROKU_API_KEY: ${{ secrets.HEROKU_PASSWORD }}
                  API_URL: ${{ secrets.API_URL_PROD }}
                  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY_PROD }}
                  FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT_PROD }}
              run: |
                  envsubst < util/.env.template > .env
                  envsubst < util/firebase.template > src/configurations/firebase.ts
                  wget -qO- https://cli-assets.heroku.com/install.sh | sh
                  echo "${{ secrets.HEROKU_PASSWORD }}" | docker login -u "${{ secrets.HEROKU_USERNAME }}" --password-stdin registry.heroku.com
                  docker tag $GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER web
                  heroku container:push web --app ${{ secrets.HEROKU_APP_NAME }}
                  heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
            - name: Deploy to dockerhub üöÄ
              if: github.ref == 'refs/heads/master'
              env:
                  HEROKU_API_KEY: ${{ secrets.HEROKU_PASSWORD }}
              run: |
                  echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
                  docker push $GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER;
                  docker tag $GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER $GITHUB_REPOSITORY:latest
                  docker push $GITHUB_REPOSITORY;
